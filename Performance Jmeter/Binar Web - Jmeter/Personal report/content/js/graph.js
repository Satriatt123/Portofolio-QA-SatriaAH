/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 37.0, "minX": 0.0, "maxY": 112876.0, "series": [{"data": [[0.0, 39.0], [0.1, 39.0], [0.2, 39.0], [0.3, 39.0], [0.4, 39.0], [0.5, 40.0], [0.6, 40.0], [0.7, 40.0], [0.8, 40.0], [0.9, 40.0], [1.0, 40.0], [1.1, 40.0], [1.2, 40.0], [1.3, 40.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 40.0], [1.9, 40.0], [2.0, 45.0], [2.1, 45.0], [2.2, 45.0], [2.3, 45.0], [2.4, 45.0], [2.5, 49.0], [2.6, 49.0], [2.7, 49.0], [2.8, 49.0], [2.9, 49.0], [3.0, 190.0], [3.1, 190.0], [3.2, 190.0], [3.3, 190.0], [3.4, 190.0], [3.5, 238.0], [3.6, 238.0], [3.7, 238.0], [3.8, 238.0], [3.9, 238.0], [4.0, 240.0], [4.1, 240.0], [4.2, 240.0], [4.3, 240.0], [4.4, 240.0], [4.5, 247.0], [4.6, 247.0], [4.7, 247.0], [4.8, 247.0], [4.9, 247.0], [5.0, 248.0], [5.1, 248.0], [5.2, 248.0], [5.3, 248.0], [5.4, 248.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 250.0], [6.0, 254.0], [6.1, 254.0], [6.2, 254.0], [6.3, 254.0], [6.4, 254.0], [6.5, 260.0], [6.6, 260.0], [6.7, 260.0], [6.8, 260.0], [6.9, 260.0], [7.0, 270.0], [7.1, 270.0], [7.2, 270.0], [7.3, 270.0], [7.4, 270.0], [7.5, 279.0], [7.6, 279.0], [7.7, 279.0], [7.8, 279.0], [7.9, 279.0], [8.0, 288.0], [8.1, 288.0], [8.2, 288.0], [8.3, 288.0], [8.4, 288.0], [8.5, 303.0], [8.6, 303.0], [8.7, 303.0], [8.8, 303.0], [8.9, 303.0], [9.0, 349.0], [9.1, 349.0], [9.2, 349.0], [9.3, 349.0], [9.4, 349.0], [9.5, 405.0], [9.6, 405.0], [9.7, 405.0], [9.8, 405.0], [9.9, 405.0], [10.0, 431.0], [10.1, 431.0], [10.2, 431.0], [10.3, 431.0], [10.4, 431.0], [10.5, 465.0], [10.6, 465.0], [10.7, 465.0], [10.8, 465.0], [10.9, 465.0], [11.0, 505.0], [11.1, 505.0], [11.2, 505.0], [11.3, 505.0], [11.4, 505.0], [11.5, 512.0], [11.6, 512.0], [11.7, 512.0], [11.8, 512.0], [11.9, 512.0], [12.0, 550.0], [12.1, 550.0], [12.2, 550.0], [12.3, 550.0], [12.4, 550.0], [12.5, 579.0], [12.6, 579.0], [12.7, 579.0], [12.8, 579.0], [12.9, 579.0], [13.0, 620.0], [13.1, 620.0], [13.2, 620.0], [13.3, 620.0], [13.4, 620.0], [13.5, 631.0], [13.6, 631.0], [13.7, 631.0], [13.8, 631.0], [13.9, 631.0], [14.0, 647.0], [14.1, 647.0], [14.2, 647.0], [14.3, 647.0], [14.4, 647.0], [14.5, 660.0], [14.6, 660.0], [14.7, 660.0], [14.8, 660.0], [14.9, 660.0], [15.0, 690.0], [15.1, 690.0], [15.2, 690.0], [15.3, 690.0], [15.4, 690.0], [15.5, 713.0], [15.6, 713.0], [15.7, 713.0], [15.8, 713.0], [15.9, 713.0], [16.0, 716.0], [16.1, 716.0], [16.2, 716.0], [16.3, 716.0], [16.4, 716.0], [16.5, 758.0], [16.6, 758.0], [16.7, 758.0], [16.8, 758.0], [16.9, 758.0], [17.0, 764.0], [17.1, 764.0], [17.2, 764.0], [17.3, 764.0], [17.4, 764.0], [17.5, 765.0], [17.6, 765.0], [17.7, 765.0], [17.8, 765.0], [17.9, 765.0], [18.0, 790.0], [18.1, 790.0], [18.2, 790.0], [18.3, 790.0], [18.4, 790.0], [18.5, 791.0], [18.6, 791.0], [18.7, 791.0], [18.8, 791.0], [18.9, 791.0], [19.0, 810.0], [19.1, 810.0], [19.2, 810.0], [19.3, 810.0], [19.4, 810.0], [19.5, 826.0], [19.6, 826.0], [19.7, 826.0], [19.8, 826.0], [19.9, 826.0], [20.0, 826.0], [20.1, 826.0], [20.2, 826.0], [20.3, 826.0], [20.4, 826.0], [20.5, 846.0], [20.6, 846.0], [20.7, 846.0], [20.8, 846.0], [20.9, 846.0], [21.0, 857.0], [21.1, 857.0], [21.2, 857.0], [21.3, 857.0], [21.4, 857.0], [21.5, 863.0], [21.6, 863.0], [21.7, 863.0], [21.8, 863.0], [21.9, 863.0], [22.0, 867.0], [22.1, 867.0], [22.2, 867.0], [22.3, 867.0], [22.4, 867.0], [22.5, 879.0], [22.6, 879.0], [22.7, 879.0], [22.8, 879.0], [22.9, 879.0], [23.0, 880.0], [23.1, 880.0], [23.2, 880.0], [23.3, 880.0], [23.4, 880.0], [23.5, 880.0], [23.6, 880.0], [23.7, 880.0], [23.8, 880.0], [23.9, 880.0], [24.0, 898.0], [24.1, 898.0], [24.2, 898.0], [24.3, 898.0], [24.4, 898.0], [24.5, 909.0], [24.6, 909.0], [24.7, 909.0], [24.8, 909.0], [24.9, 909.0], [25.0, 910.0], [25.1, 910.0], [25.2, 910.0], [25.3, 910.0], [25.4, 910.0], [25.5, 912.0], [25.6, 912.0], [25.7, 912.0], [25.8, 912.0], [25.9, 912.0], [26.0, 936.0], [26.1, 936.0], [26.2, 936.0], [26.3, 936.0], [26.4, 936.0], [26.5, 937.0], [26.6, 937.0], [26.7, 937.0], [26.8, 937.0], [26.9, 937.0], [27.0, 958.0], [27.1, 958.0], [27.2, 958.0], [27.3, 958.0], [27.4, 958.0], [27.5, 960.0], [27.6, 960.0], [27.7, 960.0], [27.8, 960.0], [27.9, 960.0], [28.0, 961.0], [28.1, 961.0], [28.2, 961.0], [28.3, 961.0], [28.4, 961.0], [28.5, 971.0], [28.6, 971.0], [28.7, 971.0], [28.8, 971.0], [28.9, 971.0], [29.0, 983.0], [29.1, 983.0], [29.2, 983.0], [29.3, 983.0], [29.4, 983.0], [29.5, 990.0], [29.6, 990.0], [29.7, 990.0], [29.8, 990.0], [29.9, 990.0], [30.0, 990.0], [30.1, 990.0], [30.2, 990.0], [30.3, 990.0], [30.4, 990.0], [30.5, 990.0], [30.6, 990.0], [30.7, 990.0], [30.8, 990.0], [30.9, 990.0], [31.0, 1000.0], [31.1, 1000.0], [31.2, 1000.0], [31.3, 1000.0], [31.4, 1000.0], [31.5, 1003.0], [31.6, 1003.0], [31.7, 1003.0], [31.8, 1003.0], [31.9, 1003.0], [32.0, 1013.0], [32.1, 1013.0], [32.2, 1013.0], [32.3, 1013.0], [32.4, 1013.0], [32.5, 1018.0], [32.6, 1018.0], [32.7, 1018.0], [32.8, 1018.0], [32.9, 1018.0], [33.0, 1019.0], [33.1, 1019.0], [33.2, 1019.0], [33.3, 1019.0], [33.4, 1019.0], [33.5, 1020.0], [33.6, 1020.0], [33.7, 1020.0], [33.8, 1020.0], [33.9, 1020.0], [34.0, 1027.0], [34.1, 1027.0], [34.2, 1027.0], [34.3, 1027.0], [34.4, 1027.0], [34.5, 1029.0], [34.6, 1029.0], [34.7, 1029.0], [34.8, 1029.0], [34.9, 1029.0], [35.0, 1030.0], [35.1, 1030.0], [35.2, 1030.0], [35.3, 1030.0], [35.4, 1030.0], [35.5, 1030.0], [35.6, 1030.0], [35.7, 1030.0], [35.8, 1030.0], [35.9, 1030.0], [36.0, 1030.0], [36.1, 1030.0], [36.2, 1030.0], [36.3, 1030.0], [36.4, 1030.0], [36.5, 1030.0], [36.6, 1030.0], [36.7, 1030.0], [36.8, 1030.0], [36.9, 1030.0], [37.0, 1035.0], [37.1, 1035.0], [37.2, 1035.0], [37.3, 1035.0], [37.4, 1035.0], [37.5, 1040.0], [37.6, 1040.0], [37.7, 1040.0], [37.8, 1040.0], [37.9, 1040.0], [38.0, 1043.0], [38.1, 1043.0], [38.2, 1043.0], [38.3, 1043.0], [38.4, 1043.0], [38.5, 1049.0], [38.6, 1049.0], [38.7, 1049.0], [38.8, 1049.0], [38.9, 1049.0], [39.0, 1050.0], [39.1, 1050.0], [39.2, 1050.0], [39.3, 1050.0], [39.4, 1050.0], [39.5, 1055.0], [39.6, 1055.0], [39.7, 1055.0], [39.8, 1055.0], [39.9, 1055.0], [40.0, 1059.0], [40.1, 1059.0], [40.2, 1059.0], [40.3, 1059.0], [40.4, 1059.0], [40.5, 1060.0], [40.6, 1060.0], [40.7, 1060.0], [40.8, 1060.0], [40.9, 1060.0], [41.0, 1069.0], [41.1, 1069.0], [41.2, 1069.0], [41.3, 1069.0], [41.4, 1069.0], [41.5, 1070.0], [41.6, 1070.0], [41.7, 1070.0], [41.8, 1070.0], [41.9, 1070.0], [42.0, 1084.0], [42.1, 1084.0], [42.2, 1084.0], [42.3, 1084.0], [42.4, 1084.0], [42.5, 1090.0], [42.6, 1090.0], [42.7, 1090.0], [42.8, 1090.0], [42.9, 1090.0], [43.0, 1094.0], [43.1, 1094.0], [43.2, 1094.0], [43.3, 1094.0], [43.4, 1094.0], [43.5, 1100.0], [43.6, 1100.0], [43.7, 1100.0], [43.8, 1100.0], [43.9, 1100.0], [44.0, 1119.0], [44.1, 1119.0], [44.2, 1119.0], [44.3, 1119.0], [44.4, 1119.0], [44.5, 1120.0], [44.6, 1120.0], [44.7, 1120.0], [44.8, 1120.0], [44.9, 1120.0], [45.0, 1130.0], [45.1, 1130.0], [45.2, 1130.0], [45.3, 1130.0], [45.4, 1130.0], [45.5, 1139.0], [45.6, 1139.0], [45.7, 1139.0], [45.8, 1139.0], [45.9, 1139.0], [46.0, 1150.0], [46.1, 1150.0], [46.2, 1150.0], [46.3, 1150.0], [46.4, 1150.0], [46.5, 1160.0], [46.6, 1160.0], [46.7, 1160.0], [46.8, 1160.0], [46.9, 1160.0], [47.0, 1169.0], [47.1, 1169.0], [47.2, 1169.0], [47.3, 1169.0], [47.4, 1169.0], [47.5, 1170.0], [47.6, 1170.0], [47.7, 1170.0], [47.8, 1170.0], [47.9, 1170.0], [48.0, 1170.0], [48.1, 1170.0], [48.2, 1170.0], [48.3, 1170.0], [48.4, 1170.0], [48.5, 1180.0], [48.6, 1180.0], [48.7, 1180.0], [48.8, 1180.0], [48.9, 1180.0], [49.0, 1181.0], [49.1, 1181.0], [49.2, 1181.0], [49.3, 1181.0], [49.4, 1181.0], [49.5, 1182.0], [49.6, 1182.0], [49.7, 1182.0], [49.8, 1182.0], [49.9, 1182.0], [50.0, 1189.0], [50.1, 1189.0], [50.2, 1189.0], [50.3, 1189.0], [50.4, 1189.0], [50.5, 1190.0], [50.6, 1190.0], [50.7, 1190.0], [50.8, 1190.0], [50.9, 1190.0], [51.0, 1190.0], [51.1, 1190.0], [51.2, 1190.0], [51.3, 1190.0], [51.4, 1190.0], [51.5, 1193.0], [51.6, 1193.0], [51.7, 1193.0], [51.8, 1193.0], [51.9, 1193.0], [52.0, 1200.0], [52.1, 1200.0], [52.2, 1200.0], [52.3, 1200.0], [52.4, 1200.0], [52.5, 1220.0], [52.6, 1220.0], [52.7, 1220.0], [52.8, 1220.0], [52.9, 1220.0], [53.0, 1229.0], [53.1, 1229.0], [53.2, 1229.0], [53.3, 1229.0], [53.4, 1229.0], [53.5, 1241.0], [53.6, 1241.0], [53.7, 1241.0], [53.8, 1241.0], [53.9, 1241.0], [54.0, 1242.0], [54.1, 1242.0], [54.2, 1242.0], [54.3, 1242.0], [54.4, 1242.0], [54.5, 1244.0], [54.6, 1244.0], [54.7, 1244.0], [54.8, 1244.0], [54.9, 1244.0], [55.0, 1244.0], [55.1, 1244.0], [55.2, 1244.0], [55.3, 1244.0], [55.4, 1244.0], [55.5, 1246.0], [55.6, 1246.0], [55.7, 1246.0], [55.8, 1246.0], [55.9, 1246.0], [56.0, 1248.0], [56.1, 1248.0], [56.2, 1248.0], [56.3, 1248.0], [56.4, 1248.0], [56.5, 1251.0], [56.6, 1251.0], [56.7, 1251.0], [56.8, 1251.0], [56.9, 1251.0], [57.0, 1260.0], [57.1, 1260.0], [57.2, 1260.0], [57.3, 1260.0], [57.4, 1260.0], [57.5, 1280.0], [57.6, 1280.0], [57.7, 1280.0], [57.8, 1280.0], [57.9, 1280.0], [58.0, 1303.0], [58.1, 1303.0], [58.2, 1303.0], [58.3, 1303.0], [58.4, 1303.0], [58.5, 1310.0], [58.6, 1310.0], [58.7, 1310.0], [58.8, 1310.0], [58.9, 1310.0], [59.0, 1322.0], [59.1, 1322.0], [59.2, 1322.0], [59.3, 1322.0], [59.4, 1322.0], [59.5, 1327.0], [59.6, 1327.0], [59.7, 1327.0], [59.8, 1327.0], [59.9, 1327.0], [60.0, 1330.0], [60.1, 1330.0], [60.2, 1330.0], [60.3, 1330.0], [60.4, 1330.0], [60.5, 1335.0], [60.6, 1335.0], [60.7, 1335.0], [60.8, 1335.0], [60.9, 1335.0], [61.0, 1349.0], [61.1, 1349.0], [61.2, 1349.0], [61.3, 1349.0], [61.4, 1349.0], [61.5, 1359.0], [61.6, 1359.0], [61.7, 1359.0], [61.8, 1359.0], [61.9, 1359.0], [62.0, 1371.0], [62.1, 1371.0], [62.2, 1371.0], [62.3, 1371.0], [62.4, 1371.0], [62.5, 1387.0], [62.6, 1387.0], [62.7, 1387.0], [62.8, 1387.0], [62.9, 1387.0], [63.0, 1396.0], [63.1, 1396.0], [63.2, 1396.0], [63.3, 1396.0], [63.4, 1396.0], [63.5, 1396.0], [63.6, 1396.0], [63.7, 1396.0], [63.8, 1396.0], [63.9, 1396.0], [64.0, 1408.0], [64.1, 1408.0], [64.2, 1408.0], [64.3, 1408.0], [64.4, 1408.0], [64.5, 1410.0], [64.6, 1410.0], [64.7, 1410.0], [64.8, 1410.0], [64.9, 1410.0], [65.0, 1420.0], [65.1, 1420.0], [65.2, 1420.0], [65.3, 1420.0], [65.4, 1420.0], [65.5, 1443.0], [65.6, 1443.0], [65.7, 1443.0], [65.8, 1443.0], [65.9, 1443.0], [66.0, 1444.0], [66.1, 1444.0], [66.2, 1444.0], [66.3, 1444.0], [66.4, 1444.0], [66.5, 1447.0], [66.6, 1447.0], [66.7, 1447.0], [66.8, 1447.0], [66.9, 1447.0], [67.0, 1449.0], [67.1, 1449.0], [67.2, 1449.0], [67.3, 1449.0], [67.4, 1449.0], [67.5, 1457.0], [67.6, 1457.0], [67.7, 1457.0], [67.8, 1457.0], [67.9, 1457.0], [68.0, 1460.0], [68.1, 1460.0], [68.2, 1460.0], [68.3, 1460.0], [68.4, 1460.0], [68.5, 1463.0], [68.6, 1463.0], [68.7, 1463.0], [68.8, 1463.0], [68.9, 1463.0], [69.0, 1466.0], [69.1, 1466.0], [69.2, 1466.0], [69.3, 1466.0], [69.4, 1466.0], [69.5, 1468.0], [69.6, 1468.0], [69.7, 1468.0], [69.8, 1468.0], [69.9, 1468.0], [70.0, 1477.0], [70.1, 1477.0], [70.2, 1477.0], [70.3, 1477.0], [70.4, 1477.0], [70.5, 1490.0], [70.6, 1490.0], [70.7, 1490.0], [70.8, 1490.0], [70.9, 1490.0], [71.0, 1542.0], [71.1, 1542.0], [71.2, 1542.0], [71.3, 1542.0], [71.4, 1542.0], [71.5, 1542.0], [71.6, 1542.0], [71.7, 1542.0], [71.8, 1542.0], [71.9, 1542.0], [72.0, 1548.0], [72.1, 1548.0], [72.2, 1548.0], [72.3, 1548.0], [72.4, 1548.0], [72.5, 1557.0], [72.6, 1557.0], [72.7, 1557.0], [72.8, 1557.0], [72.9, 1557.0], [73.0, 1559.0], [73.1, 1559.0], [73.2, 1559.0], [73.3, 1559.0], [73.4, 1559.0], [73.5, 1569.0], [73.6, 1569.0], [73.7, 1569.0], [73.8, 1569.0], [73.9, 1569.0], [74.0, 1570.0], [74.1, 1570.0], [74.2, 1570.0], [74.3, 1570.0], [74.4, 1570.0], [74.5, 1570.0], [74.6, 1570.0], [74.7, 1570.0], [74.8, 1570.0], [74.9, 1570.0], [75.0, 1574.0], [75.1, 1574.0], [75.2, 1574.0], [75.3, 1574.0], [75.4, 1574.0], [75.5, 1579.0], [75.6, 1579.0], [75.7, 1579.0], [75.8, 1579.0], [75.9, 1579.0], [76.0, 1580.0], [76.1, 1580.0], [76.2, 1580.0], [76.3, 1580.0], [76.4, 1580.0], [76.5, 1630.0], [76.6, 1630.0], [76.7, 1630.0], [76.8, 1630.0], [76.9, 1630.0], [77.0, 1632.0], [77.1, 1632.0], [77.2, 1632.0], [77.3, 1632.0], [77.4, 1632.0], [77.5, 1640.0], [77.6, 1640.0], [77.7, 1640.0], [77.8, 1640.0], [77.9, 1640.0], [78.0, 1647.0], [78.1, 1647.0], [78.2, 1647.0], [78.3, 1647.0], [78.4, 1647.0], [78.5, 1647.0], [78.6, 1647.0], [78.7, 1647.0], [78.8, 1647.0], [78.9, 1647.0], [79.0, 1648.0], [79.1, 1648.0], [79.2, 1648.0], [79.3, 1648.0], [79.4, 1648.0], [79.5, 1660.0], [79.6, 1660.0], [79.7, 1660.0], [79.8, 1660.0], [79.9, 1660.0], [80.0, 1660.0], [80.1, 1660.0], [80.2, 1660.0], [80.3, 1660.0], [80.4, 1660.0], [80.5, 1670.0], [80.6, 1670.0], [80.7, 1670.0], [80.8, 1670.0], [80.9, 1670.0], [81.0, 1681.0], [81.1, 1681.0], [81.2, 1681.0], [81.3, 1681.0], [81.4, 1681.0], [81.5, 1686.0], [81.6, 1686.0], [81.7, 1686.0], [81.8, 1686.0], [81.9, 1686.0], [82.0, 1694.0], [82.1, 1694.0], [82.2, 1694.0], [82.3, 1694.0], [82.4, 1694.0], [82.5, 1720.0], [82.6, 1720.0], [82.7, 1720.0], [82.8, 1720.0], [82.9, 1720.0], [83.0, 1720.0], [83.1, 1720.0], [83.2, 1720.0], [83.3, 1720.0], [83.4, 1720.0], [83.5, 1721.0], [83.6, 1721.0], [83.7, 1721.0], [83.8, 1721.0], [83.9, 1721.0], [84.0, 1729.0], [84.1, 1729.0], [84.2, 1729.0], [84.3, 1729.0], [84.4, 1729.0], [84.5, 1730.0], [84.6, 1730.0], [84.7, 1730.0], [84.8, 1730.0], [84.9, 1730.0], [85.0, 1732.0], [85.1, 1732.0], [85.2, 1732.0], [85.3, 1732.0], [85.4, 1732.0], [85.5, 1736.0], [85.6, 1736.0], [85.7, 1736.0], [85.8, 1736.0], [85.9, 1736.0], [86.0, 1740.0], [86.1, 1740.0], [86.2, 1740.0], [86.3, 1740.0], [86.4, 1740.0], [86.5, 1740.0], [86.6, 1740.0], [86.7, 1740.0], [86.8, 1740.0], [86.9, 1740.0], [87.0, 1790.0], [87.1, 1790.0], [87.2, 1790.0], [87.3, 1790.0], [87.4, 1790.0], [87.5, 1811.0], [87.6, 1811.0], [87.7, 1811.0], [87.8, 1811.0], [87.9, 1811.0], [88.0, 1839.0], [88.1, 1839.0], [88.2, 1839.0], [88.3, 1839.0], [88.4, 1839.0], [88.5, 1875.0], [88.6, 1875.0], [88.7, 1875.0], [88.8, 1875.0], [88.9, 1875.0], [89.0, 1900.0], [89.1, 1900.0], [89.2, 1900.0], [89.3, 1900.0], [89.4, 1900.0], [89.5, 1953.0], [89.6, 1953.0], [89.7, 1953.0], [89.8, 1953.0], [89.9, 1953.0], [90.0, 1980.0], [90.1, 1980.0], [90.2, 1980.0], [90.3, 1980.0], [90.4, 1980.0], [90.5, 2002.0], [90.6, 2002.0], [90.7, 2002.0], [90.8, 2002.0], [90.9, 2002.0], [91.0, 2011.0], [91.1, 2011.0], [91.2, 2011.0], [91.3, 2011.0], [91.4, 2011.0], [91.5, 2140.0], [91.6, 2140.0], [91.7, 2140.0], [91.8, 2140.0], [91.9, 2140.0], [92.0, 2163.0], [92.1, 2163.0], [92.2, 2163.0], [92.3, 2163.0], [92.4, 2163.0], [92.5, 2260.0], [92.6, 2260.0], [92.7, 2260.0], [92.8, 2260.0], [92.9, 2260.0], [93.0, 2264.0], [93.1, 2264.0], [93.2, 2264.0], [93.3, 2264.0], [93.4, 2264.0], [93.5, 2281.0], [93.6, 2281.0], [93.7, 2281.0], [93.8, 2281.0], [93.9, 2281.0], [94.0, 2295.0], [94.1, 2295.0], [94.2, 2295.0], [94.3, 2295.0], [94.4, 2295.0], [94.5, 2313.0], [94.6, 2313.0], [94.7, 2313.0], [94.8, 2313.0], [94.9, 2313.0], [95.0, 2370.0], [95.1, 2370.0], [95.2, 2370.0], [95.3, 2370.0], [95.4, 2370.0], [95.5, 2390.0], [95.6, 2390.0], [95.7, 2390.0], [95.8, 2390.0], [95.9, 2390.0], [96.0, 2485.0], [96.1, 2485.0], [96.2, 2485.0], [96.3, 2485.0], [96.4, 2485.0], [96.5, 2521.0], [96.6, 2521.0], [96.7, 2521.0], [96.8, 2521.0], [96.9, 2521.0], [97.0, 2539.0], [97.1, 2539.0], [97.2, 2539.0], [97.3, 2539.0], [97.4, 2539.0], [97.5, 2711.0], [97.6, 2711.0], [97.7, 2711.0], [97.8, 2711.0], [97.9, 2711.0], [98.0, 2781.0], [98.1, 2781.0], [98.2, 2781.0], [98.3, 2781.0], [98.4, 2781.0], [98.5, 3390.0], [98.6, 3390.0], [98.7, 3390.0], [98.8, 3390.0], [98.9, 3390.0], [99.0, 3561.0], [99.1, 3561.0], [99.2, 3561.0], [99.3, 3561.0], [99.4, 3561.0], [99.5, 112876.0], [99.6, 112876.0], [99.7, 112876.0], [99.8, 112876.0], [99.9, 112876.0]], "isOverall": false, "label": "Get profile", "isController": false}, {"data": [[0.0, 309.0], [0.1, 309.0], [0.2, 309.0], [0.3, 309.0], [0.4, 309.0], [0.5, 319.0], [0.6, 319.0], [0.7, 319.0], [0.8, 319.0], [0.9, 319.0], [1.0, 320.0], [1.1, 320.0], [1.2, 320.0], [1.3, 320.0], [1.4, 320.0], [1.5, 320.0], [1.6, 320.0], [1.7, 320.0], [1.8, 320.0], [1.9, 320.0], [2.0, 370.0], [2.1, 370.0], [2.2, 370.0], [2.3, 370.0], [2.4, 370.0], [2.5, 393.0], [2.6, 393.0], [2.7, 393.0], [2.8, 393.0], [2.9, 393.0], [3.0, 530.0], [3.1, 530.0], [3.2, 530.0], [3.3, 530.0], [3.4, 530.0], [3.5, 561.0], [3.6, 561.0], [3.7, 561.0], [3.8, 561.0], [3.9, 561.0], [4.0, 579.0], [4.1, 579.0], [4.2, 579.0], [4.3, 579.0], [4.4, 579.0], [4.5, 710.0], [4.6, 710.0], [4.7, 710.0], [4.8, 710.0], [4.9, 710.0], [5.0, 762.0], [5.1, 762.0], [5.2, 762.0], [5.3, 762.0], [5.4, 762.0], [5.5, 791.0], [5.6, 791.0], [5.7, 791.0], [5.8, 791.0], [5.9, 791.0], [6.0, 794.0], [6.1, 794.0], [6.2, 794.0], [6.3, 794.0], [6.4, 794.0], [6.5, 849.0], [6.6, 849.0], [6.7, 849.0], [6.8, 849.0], [6.9, 849.0], [7.0, 862.0], [7.1, 862.0], [7.2, 862.0], [7.3, 862.0], [7.4, 862.0], [7.5, 891.0], [7.6, 891.0], [7.7, 891.0], [7.8, 891.0], [7.9, 891.0], [8.0, 892.0], [8.1, 892.0], [8.2, 892.0], [8.3, 892.0], [8.4, 892.0], [8.5, 909.0], [8.6, 909.0], [8.7, 909.0], [8.8, 909.0], [8.9, 909.0], [9.0, 916.0], [9.1, 916.0], [9.2, 916.0], [9.3, 916.0], [9.4, 916.0], [9.5, 991.0], [9.6, 991.0], [9.7, 991.0], [9.8, 991.0], [9.9, 991.0], [10.0, 1000.0], [10.1, 1000.0], [10.2, 1000.0], [10.3, 1000.0], [10.4, 1000.0], [10.5, 1000.0], [10.6, 1000.0], [10.7, 1000.0], [10.8, 1000.0], [10.9, 1000.0], [11.0, 1020.0], [11.1, 1020.0], [11.2, 1020.0], [11.3, 1020.0], [11.4, 1020.0], [11.5, 1036.0], [11.6, 1036.0], [11.7, 1036.0], [11.8, 1036.0], [11.9, 1036.0], [12.0, 1070.0], [12.1, 1070.0], [12.2, 1070.0], [12.3, 1070.0], [12.4, 1070.0], [12.5, 1072.0], [12.6, 1072.0], [12.7, 1072.0], [12.8, 1072.0], [12.9, 1072.0], [13.0, 1107.0], [13.1, 1107.0], [13.2, 1107.0], [13.3, 1107.0], [13.4, 1107.0], [13.5, 1110.0], [13.6, 1110.0], [13.7, 1110.0], [13.8, 1110.0], [13.9, 1110.0], [14.0, 1119.0], [14.1, 1119.0], [14.2, 1119.0], [14.3, 1119.0], [14.4, 1119.0], [14.5, 1150.0], [14.6, 1150.0], [14.7, 1150.0], [14.8, 1150.0], [14.9, 1150.0], [15.0, 1165.0], [15.1, 1165.0], [15.2, 1165.0], [15.3, 1165.0], [15.4, 1165.0], [15.5, 1190.0], [15.6, 1190.0], [15.7, 1190.0], [15.8, 1190.0], [15.9, 1190.0], [16.0, 1200.0], [16.1, 1200.0], [16.2, 1200.0], [16.3, 1200.0], [16.4, 1200.0], [16.5, 1209.0], [16.6, 1209.0], [16.7, 1209.0], [16.8, 1209.0], [16.9, 1209.0], [17.0, 1235.0], [17.1, 1235.0], [17.2, 1235.0], [17.3, 1235.0], [17.4, 1235.0], [17.5, 1250.0], [17.6, 1250.0], [17.7, 1250.0], [17.8, 1250.0], [17.9, 1250.0], [18.0, 1257.0], [18.1, 1257.0], [18.2, 1257.0], [18.3, 1257.0], [18.4, 1257.0], [18.5, 1287.0], [18.6, 1287.0], [18.7, 1287.0], [18.8, 1287.0], [18.9, 1287.0], [19.0, 1299.0], [19.1, 1299.0], [19.2, 1299.0], [19.3, 1299.0], [19.4, 1299.0], [19.5, 1301.0], [19.6, 1301.0], [19.7, 1301.0], [19.8, 1301.0], [19.9, 1301.0], [20.0, 1316.0], [20.1, 1316.0], [20.2, 1316.0], [20.3, 1316.0], [20.4, 1316.0], [20.5, 1329.0], [20.6, 1329.0], [20.7, 1329.0], [20.8, 1329.0], [20.9, 1329.0], [21.0, 1331.0], [21.1, 1331.0], [21.2, 1331.0], [21.3, 1331.0], [21.4, 1331.0], [21.5, 1339.0], [21.6, 1339.0], [21.7, 1339.0], [21.8, 1339.0], [21.9, 1339.0], [22.0, 1352.0], [22.1, 1352.0], [22.2, 1352.0], [22.3, 1352.0], [22.4, 1352.0], [22.5, 1364.0], [22.6, 1364.0], [22.7, 1364.0], [22.8, 1364.0], [22.9, 1364.0], [23.0, 1365.0], [23.1, 1365.0], [23.2, 1365.0], [23.3, 1365.0], [23.4, 1365.0], [23.5, 1365.0], [23.6, 1365.0], [23.7, 1365.0], [23.8, 1365.0], [23.9, 1365.0], [24.0, 1369.0], [24.1, 1369.0], [24.2, 1369.0], [24.3, 1369.0], [24.4, 1369.0], [24.5, 1370.0], [24.6, 1370.0], [24.7, 1370.0], [24.8, 1370.0], [24.9, 1370.0], [25.0, 1380.0], [25.1, 1380.0], [25.2, 1380.0], [25.3, 1380.0], [25.4, 1380.0], [25.5, 1380.0], [25.6, 1380.0], [25.7, 1380.0], [25.8, 1380.0], [25.9, 1380.0], [26.0, 1388.0], [26.1, 1388.0], [26.2, 1388.0], [26.3, 1388.0], [26.4, 1388.0], [26.5, 1391.0], [26.6, 1391.0], [26.7, 1391.0], [26.8, 1391.0], [26.9, 1391.0], [27.0, 1392.0], [27.1, 1392.0], [27.2, 1392.0], [27.3, 1392.0], [27.4, 1392.0], [27.5, 1393.0], [27.6, 1393.0], [27.7, 1393.0], [27.8, 1393.0], [27.9, 1393.0], [28.0, 1393.0], [28.1, 1393.0], [28.2, 1393.0], [28.3, 1393.0], [28.4, 1393.0], [28.5, 1399.0], [28.6, 1399.0], [28.7, 1399.0], [28.8, 1399.0], [28.9, 1399.0], [29.0, 1400.0], [29.1, 1400.0], [29.2, 1400.0], [29.3, 1400.0], [29.4, 1400.0], [29.5, 1410.0], [29.6, 1410.0], [29.7, 1410.0], [29.8, 1410.0], [29.9, 1410.0], [30.0, 1417.0], [30.1, 1417.0], [30.2, 1417.0], [30.3, 1417.0], [30.4, 1417.0], [30.5, 1420.0], [30.6, 1420.0], [30.7, 1420.0], [30.8, 1420.0], [30.9, 1420.0], [31.0, 1424.0], [31.1, 1424.0], [31.2, 1424.0], [31.3, 1424.0], [31.4, 1424.0], [31.5, 1429.0], [31.6, 1429.0], [31.7, 1429.0], [31.8, 1429.0], [31.9, 1429.0], [32.0, 1440.0], [32.1, 1440.0], [32.2, 1440.0], [32.3, 1440.0], [32.4, 1440.0], [32.5, 1454.0], [32.6, 1454.0], [32.7, 1454.0], [32.8, 1454.0], [32.9, 1454.0], [33.0, 1458.0], [33.1, 1458.0], [33.2, 1458.0], [33.3, 1458.0], [33.4, 1458.0], [33.5, 1460.0], [33.6, 1460.0], [33.7, 1460.0], [33.8, 1460.0], [33.9, 1460.0], [34.0, 1461.0], [34.1, 1461.0], [34.2, 1461.0], [34.3, 1461.0], [34.4, 1461.0], [34.5, 1480.0], [34.6, 1480.0], [34.7, 1480.0], [34.8, 1480.0], [34.9, 1480.0], [35.0, 1483.0], [35.1, 1483.0], [35.2, 1483.0], [35.3, 1483.0], [35.4, 1483.0], [35.5, 1499.0], [35.6, 1499.0], [35.7, 1499.0], [35.8, 1499.0], [35.9, 1499.0], [36.0, 1500.0], [36.1, 1500.0], [36.2, 1500.0], [36.3, 1500.0], [36.4, 1500.0], [36.5, 1529.0], [36.6, 1529.0], [36.7, 1529.0], [36.8, 1529.0], [36.9, 1529.0], [37.0, 1529.0], [37.1, 1529.0], [37.2, 1529.0], [37.3, 1529.0], [37.4, 1529.0], [37.5, 1529.0], [37.6, 1529.0], [37.7, 1529.0], [37.8, 1529.0], [37.9, 1529.0], [38.0, 1539.0], [38.1, 1539.0], [38.2, 1539.0], [38.3, 1539.0], [38.4, 1539.0], [38.5, 1539.0], [38.6, 1539.0], [38.7, 1539.0], [38.8, 1539.0], [38.9, 1539.0], [39.0, 1540.0], [39.1, 1540.0], [39.2, 1540.0], [39.3, 1540.0], [39.4, 1540.0], [39.5, 1542.0], [39.6, 1542.0], [39.7, 1542.0], [39.8, 1542.0], [39.9, 1542.0], [40.0, 1550.0], [40.1, 1550.0], [40.2, 1550.0], [40.3, 1550.0], [40.4, 1550.0], [40.5, 1564.0], [40.6, 1564.0], [40.7, 1564.0], [40.8, 1564.0], [40.9, 1564.0], [41.0, 1566.0], [41.1, 1566.0], [41.2, 1566.0], [41.3, 1566.0], [41.4, 1566.0], [41.5, 1569.0], [41.6, 1569.0], [41.7, 1569.0], [41.8, 1569.0], [41.9, 1569.0], [42.0, 1579.0], [42.1, 1579.0], [42.2, 1579.0], [42.3, 1579.0], [42.4, 1579.0], [42.5, 1579.0], [42.6, 1579.0], [42.7, 1579.0], [42.8, 1579.0], [42.9, 1579.0], [43.0, 1589.0], [43.1, 1589.0], [43.2, 1589.0], [43.3, 1589.0], [43.4, 1589.0], [43.5, 1600.0], [43.6, 1600.0], [43.7, 1600.0], [43.8, 1600.0], [43.9, 1600.0], [44.0, 1620.0], [44.1, 1620.0], [44.2, 1620.0], [44.3, 1620.0], [44.4, 1620.0], [44.5, 1621.0], [44.6, 1621.0], [44.7, 1621.0], [44.8, 1621.0], [44.9, 1621.0], [45.0, 1639.0], [45.1, 1639.0], [45.2, 1639.0], [45.3, 1639.0], [45.4, 1639.0], [45.5, 1647.0], [45.6, 1647.0], [45.7, 1647.0], [45.8, 1647.0], [45.9, 1647.0], [46.0, 1670.0], [46.1, 1670.0], [46.2, 1670.0], [46.3, 1670.0], [46.4, 1670.0], [46.5, 1679.0], [46.6, 1679.0], [46.7, 1679.0], [46.8, 1679.0], [46.9, 1679.0], [47.0, 1679.0], [47.1, 1679.0], [47.2, 1679.0], [47.3, 1679.0], [47.4, 1679.0], [47.5, 1680.0], [47.6, 1680.0], [47.7, 1680.0], [47.8, 1680.0], [47.9, 1680.0], [48.0, 1680.0], [48.1, 1680.0], [48.2, 1680.0], [48.3, 1680.0], [48.4, 1680.0], [48.5, 1683.0], [48.6, 1683.0], [48.7, 1683.0], [48.8, 1683.0], [48.9, 1683.0], [49.0, 1699.0], [49.1, 1699.0], [49.2, 1699.0], [49.3, 1699.0], [49.4, 1699.0], [49.5, 1700.0], [49.6, 1700.0], [49.7, 1700.0], [49.8, 1700.0], [49.9, 1700.0], [50.0, 1704.0], [50.1, 1704.0], [50.2, 1704.0], [50.3, 1704.0], [50.4, 1704.0], [50.5, 1712.0], [50.6, 1712.0], [50.7, 1712.0], [50.8, 1712.0], [50.9, 1712.0], [51.0, 1713.0], [51.1, 1713.0], [51.2, 1713.0], [51.3, 1713.0], [51.4, 1713.0], [51.5, 1720.0], [51.6, 1720.0], [51.7, 1720.0], [51.8, 1720.0], [51.9, 1720.0], [52.0, 1740.0], [52.1, 1740.0], [52.2, 1740.0], [52.3, 1740.0], [52.4, 1740.0], [52.5, 1740.0], [52.6, 1740.0], [52.7, 1740.0], [52.8, 1740.0], [52.9, 1740.0], [53.0, 1746.0], [53.1, 1746.0], [53.2, 1746.0], [53.3, 1746.0], [53.4, 1746.0], [53.5, 1749.0], [53.6, 1749.0], [53.7, 1749.0], [53.8, 1749.0], [53.9, 1749.0], [54.0, 1753.0], [54.1, 1753.0], [54.2, 1753.0], [54.3, 1753.0], [54.4, 1753.0], [54.5, 1759.0], [54.6, 1759.0], [54.7, 1759.0], [54.8, 1759.0], [54.9, 1759.0], [55.0, 1763.0], [55.1, 1763.0], [55.2, 1763.0], [55.3, 1763.0], [55.4, 1763.0], [55.5, 1770.0], [55.6, 1770.0], [55.7, 1770.0], [55.8, 1770.0], [55.9, 1770.0], [56.0, 1770.0], [56.1, 1770.0], [56.2, 1770.0], [56.3, 1770.0], [56.4, 1770.0], [56.5, 1780.0], [56.6, 1780.0], [56.7, 1780.0], [56.8, 1780.0], [56.9, 1780.0], [57.0, 1789.0], [57.1, 1789.0], [57.2, 1789.0], [57.3, 1789.0], [57.4, 1789.0], [57.5, 1789.0], [57.6, 1789.0], [57.7, 1789.0], [57.8, 1789.0], [57.9, 1789.0], [58.0, 1790.0], [58.1, 1790.0], [58.2, 1790.0], [58.3, 1790.0], [58.4, 1790.0], [58.5, 1791.0], [58.6, 1791.0], [58.7, 1791.0], [58.8, 1791.0], [58.9, 1791.0], [59.0, 1809.0], [59.1, 1809.0], [59.2, 1809.0], [59.3, 1809.0], [59.4, 1809.0], [59.5, 1810.0], [59.6, 1810.0], [59.7, 1810.0], [59.8, 1810.0], [59.9, 1810.0], [60.0, 1816.0], [60.1, 1816.0], [60.2, 1816.0], [60.3, 1816.0], [60.4, 1816.0], [60.5, 1820.0], [60.6, 1820.0], [60.7, 1820.0], [60.8, 1820.0], [60.9, 1820.0], [61.0, 1820.0], [61.1, 1820.0], [61.2, 1820.0], [61.3, 1820.0], [61.4, 1820.0], [61.5, 1839.0], [61.6, 1839.0], [61.7, 1839.0], [61.8, 1839.0], [61.9, 1839.0], [62.0, 1845.0], [62.1, 1845.0], [62.2, 1845.0], [62.3, 1845.0], [62.4, 1845.0], [62.5, 1859.0], [62.6, 1859.0], [62.7, 1859.0], [62.8, 1859.0], [62.9, 1859.0], [63.0, 1859.0], [63.1, 1859.0], [63.2, 1859.0], [63.3, 1859.0], [63.4, 1859.0], [63.5, 1860.0], [63.6, 1860.0], [63.7, 1860.0], [63.8, 1860.0], [63.9, 1860.0], [64.0, 1869.0], [64.1, 1869.0], [64.2, 1869.0], [64.3, 1869.0], [64.4, 1869.0], [64.5, 1873.0], [64.6, 1873.0], [64.7, 1873.0], [64.8, 1873.0], [64.9, 1873.0], [65.0, 1873.0], [65.1, 1873.0], [65.2, 1873.0], [65.3, 1873.0], [65.4, 1873.0], [65.5, 1877.0], [65.6, 1877.0], [65.7, 1877.0], [65.8, 1877.0], [65.9, 1877.0], [66.0, 1886.0], [66.1, 1886.0], [66.2, 1886.0], [66.3, 1886.0], [66.4, 1886.0], [66.5, 1902.0], [66.6, 1902.0], [66.7, 1902.0], [66.8, 1902.0], [66.9, 1902.0], [67.0, 1905.0], [67.1, 1905.0], [67.2, 1905.0], [67.3, 1905.0], [67.4, 1905.0], [67.5, 1911.0], [67.6, 1911.0], [67.7, 1911.0], [67.8, 1911.0], [67.9, 1911.0], [68.0, 1911.0], [68.1, 1911.0], [68.2, 1911.0], [68.3, 1911.0], [68.4, 1911.0], [68.5, 1914.0], [68.6, 1914.0], [68.7, 1914.0], [68.8, 1914.0], [68.9, 1914.0], [69.0, 1920.0], [69.1, 1920.0], [69.2, 1920.0], [69.3, 1920.0], [69.4, 1920.0], [69.5, 1929.0], [69.6, 1929.0], [69.7, 1929.0], [69.8, 1929.0], [69.9, 1929.0], [70.0, 1940.0], [70.1, 1940.0], [70.2, 1940.0], [70.3, 1940.0], [70.4, 1940.0], [70.5, 1960.0], [70.6, 1960.0], [70.7, 1960.0], [70.8, 1960.0], [70.9, 1960.0], [71.0, 1986.0], [71.1, 1986.0], [71.2, 1986.0], [71.3, 1986.0], [71.4, 1986.0], [71.5, 2028.0], [71.6, 2028.0], [71.7, 2028.0], [71.8, 2028.0], [71.9, 2028.0], [72.0, 2040.0], [72.1, 2040.0], [72.2, 2040.0], [72.3, 2040.0], [72.4, 2040.0], [72.5, 2046.0], [72.6, 2046.0], [72.7, 2046.0], [72.8, 2046.0], [72.9, 2046.0], [73.0, 2069.0], [73.1, 2069.0], [73.2, 2069.0], [73.3, 2069.0], [73.4, 2069.0], [73.5, 2071.0], [73.6, 2071.0], [73.7, 2071.0], [73.8, 2071.0], [73.9, 2071.0], [74.0, 2079.0], [74.1, 2079.0], [74.2, 2079.0], [74.3, 2079.0], [74.4, 2079.0], [74.5, 2082.0], [74.6, 2082.0], [74.7, 2082.0], [74.8, 2082.0], [74.9, 2082.0], [75.0, 2088.0], [75.1, 2088.0], [75.2, 2088.0], [75.3, 2088.0], [75.4, 2088.0], [75.5, 2089.0], [75.6, 2089.0], [75.7, 2089.0], [75.8, 2089.0], [75.9, 2089.0], [76.0, 2119.0], [76.1, 2119.0], [76.2, 2119.0], [76.3, 2119.0], [76.4, 2119.0], [76.5, 2120.0], [76.6, 2120.0], [76.7, 2120.0], [76.8, 2120.0], [76.9, 2120.0], [77.0, 2129.0], [77.1, 2129.0], [77.2, 2129.0], [77.3, 2129.0], [77.4, 2129.0], [77.5, 2129.0], [77.6, 2129.0], [77.7, 2129.0], [77.8, 2129.0], [77.9, 2129.0], [78.0, 2130.0], [78.1, 2130.0], [78.2, 2130.0], [78.3, 2130.0], [78.4, 2130.0], [78.5, 2135.0], [78.6, 2135.0], [78.7, 2135.0], [78.8, 2135.0], [78.9, 2135.0], [79.0, 2138.0], [79.1, 2138.0], [79.2, 2138.0], [79.3, 2138.0], [79.4, 2138.0], [79.5, 2146.0], [79.6, 2146.0], [79.7, 2146.0], [79.8, 2146.0], [79.9, 2146.0], [80.0, 2152.0], [80.1, 2152.0], [80.2, 2152.0], [80.3, 2152.0], [80.4, 2152.0], [80.5, 2174.0], [80.6, 2174.0], [80.7, 2174.0], [80.8, 2174.0], [80.9, 2174.0], [81.0, 2181.0], [81.1, 2181.0], [81.2, 2181.0], [81.3, 2181.0], [81.4, 2181.0], [81.5, 2189.0], [81.6, 2189.0], [81.7, 2189.0], [81.8, 2189.0], [81.9, 2189.0], [82.0, 2200.0], [82.1, 2200.0], [82.2, 2200.0], [82.3, 2200.0], [82.4, 2200.0], [82.5, 2218.0], [82.6, 2218.0], [82.7, 2218.0], [82.8, 2218.0], [82.9, 2218.0], [83.0, 2260.0], [83.1, 2260.0], [83.2, 2260.0], [83.3, 2260.0], [83.4, 2260.0], [83.5, 2261.0], [83.6, 2261.0], [83.7, 2261.0], [83.8, 2261.0], [83.9, 2261.0], [84.0, 2296.0], [84.1, 2296.0], [84.2, 2296.0], [84.3, 2296.0], [84.4, 2296.0], [84.5, 2297.0], [84.6, 2297.0], [84.7, 2297.0], [84.8, 2297.0], [84.9, 2297.0], [85.0, 2329.0], [85.1, 2329.0], [85.2, 2329.0], [85.3, 2329.0], [85.4, 2329.0], [85.5, 2342.0], [85.6, 2342.0], [85.7, 2342.0], [85.8, 2342.0], [85.9, 2342.0], [86.0, 2370.0], [86.1, 2370.0], [86.2, 2370.0], [86.3, 2370.0], [86.4, 2370.0], [86.5, 2389.0], [86.6, 2389.0], [86.7, 2389.0], [86.8, 2389.0], [86.9, 2389.0], [87.0, 2390.0], [87.1, 2390.0], [87.2, 2390.0], [87.3, 2390.0], [87.4, 2390.0], [87.5, 2399.0], [87.6, 2399.0], [87.7, 2399.0], [87.8, 2399.0], [87.9, 2399.0], [88.0, 2399.0], [88.1, 2399.0], [88.2, 2399.0], [88.3, 2399.0], [88.4, 2399.0], [88.5, 2430.0], [88.6, 2430.0], [88.7, 2430.0], [88.8, 2430.0], [88.9, 2430.0], [89.0, 2434.0], [89.1, 2434.0], [89.2, 2434.0], [89.3, 2434.0], [89.4, 2434.0], [89.5, 2447.0], [89.6, 2447.0], [89.7, 2447.0], [89.8, 2447.0], [89.9, 2447.0], [90.0, 2450.0], [90.1, 2450.0], [90.2, 2450.0], [90.3, 2450.0], [90.4, 2450.0], [90.5, 2450.0], [90.6, 2450.0], [90.7, 2450.0], [90.8, 2450.0], [90.9, 2450.0], [91.0, 2459.0], [91.1, 2459.0], [91.2, 2459.0], [91.3, 2459.0], [91.4, 2459.0], [91.5, 2460.0], [91.6, 2460.0], [91.7, 2460.0], [91.8, 2460.0], [91.9, 2460.0], [92.0, 2470.0], [92.1, 2470.0], [92.2, 2470.0], [92.3, 2470.0], [92.4, 2470.0], [92.5, 2498.0], [92.6, 2498.0], [92.7, 2498.0], [92.8, 2498.0], [92.9, 2498.0], [93.0, 2510.0], [93.1, 2510.0], [93.2, 2510.0], [93.3, 2510.0], [93.4, 2510.0], [93.5, 2514.0], [93.6, 2514.0], [93.7, 2514.0], [93.8, 2514.0], [93.9, 2514.0], [94.0, 2520.0], [94.1, 2520.0], [94.2, 2520.0], [94.3, 2520.0], [94.4, 2520.0], [94.5, 2589.0], [94.6, 2589.0], [94.7, 2589.0], [94.8, 2589.0], [94.9, 2589.0], [95.0, 2592.0], [95.1, 2592.0], [95.2, 2592.0], [95.3, 2592.0], [95.4, 2592.0], [95.5, 2601.0], [95.6, 2601.0], [95.7, 2601.0], [95.8, 2601.0], [95.9, 2601.0], [96.0, 2637.0], [96.1, 2637.0], [96.2, 2637.0], [96.3, 2637.0], [96.4, 2637.0], [96.5, 2667.0], [96.6, 2667.0], [96.7, 2667.0], [96.8, 2667.0], [96.9, 2667.0], [97.0, 2690.0], [97.1, 2690.0], [97.2, 2690.0], [97.3, 2690.0], [97.4, 2690.0], [97.5, 3150.0], [97.6, 3150.0], [97.7, 3150.0], [97.8, 3150.0], [97.9, 3150.0], [98.0, 3180.0], [98.1, 3180.0], [98.2, 3180.0], [98.3, 3180.0], [98.4, 3180.0], [98.5, 3606.0], [98.6, 3606.0], [98.7, 3606.0], [98.8, 3606.0], [98.9, 3606.0], [99.0, 4202.0], [99.1, 4202.0], [99.2, 4202.0], [99.3, 4202.0], [99.4, 4202.0], [99.5, 13009.0], [99.6, 13009.0], [99.7, 13009.0], [99.8, 13009.0], [99.9, 13009.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[0.0, 37.0], [0.1, 37.0], [0.2, 37.0], [0.3, 37.0], [0.4, 37.0], [0.5, 39.0], [0.6, 39.0], [0.7, 39.0], [0.8, 39.0], [0.9, 39.0], [1.0, 40.0], [1.1, 40.0], [1.2, 40.0], [1.3, 40.0], [1.4, 40.0], [1.5, 41.0], [1.6, 41.0], [1.7, 41.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 41.0], [2.3, 41.0], [2.4, 41.0], [2.5, 50.0], [2.6, 50.0], [2.7, 50.0], [2.8, 50.0], [2.9, 50.0], [3.0, 239.0], [3.1, 239.0], [3.2, 239.0], [3.3, 239.0], [3.4, 239.0], [3.5, 240.0], [3.6, 240.0], [3.7, 240.0], [3.8, 240.0], [3.9, 240.0], [4.0, 244.0], [4.1, 244.0], [4.2, 244.0], [4.3, 244.0], [4.4, 244.0], [4.5, 249.0], [4.6, 249.0], [4.7, 249.0], [4.8, 249.0], [4.9, 249.0], [5.0, 250.0], [5.1, 250.0], [5.2, 250.0], [5.3, 250.0], [5.4, 250.0], [5.5, 250.0], [5.6, 250.0], [5.7, 250.0], [5.8, 250.0], [5.9, 250.0], [6.0, 257.0], [6.1, 257.0], [6.2, 257.0], [6.3, 257.0], [6.4, 257.0], [6.5, 261.0], [6.6, 261.0], [6.7, 261.0], [6.8, 261.0], [6.9, 261.0], [7.0, 261.0], [7.1, 261.0], [7.2, 261.0], [7.3, 261.0], [7.4, 261.0], [7.5, 277.0], [7.6, 277.0], [7.7, 277.0], [7.8, 277.0], [7.9, 277.0], [8.0, 321.0], [8.1, 321.0], [8.2, 321.0], [8.3, 321.0], [8.4, 321.0], [8.5, 339.0], [8.6, 339.0], [8.7, 339.0], [8.8, 339.0], [8.9, 339.0], [9.0, 341.0], [9.1, 341.0], [9.2, 341.0], [9.3, 341.0], [9.4, 341.0], [9.5, 350.0], [9.6, 350.0], [9.7, 350.0], [9.8, 350.0], [9.9, 350.0], [10.0, 422.0], [10.1, 422.0], [10.2, 422.0], [10.3, 422.0], [10.4, 422.0], [10.5, 440.0], [10.6, 440.0], [10.7, 440.0], [10.8, 440.0], [10.9, 440.0], [11.0, 533.0], [11.1, 533.0], [11.2, 533.0], [11.3, 533.0], [11.4, 533.0], [11.5, 534.0], [11.6, 534.0], [11.7, 534.0], [11.8, 534.0], [11.9, 534.0], [12.0, 660.0], [12.1, 660.0], [12.2, 660.0], [12.3, 660.0], [12.4, 660.0], [12.5, 660.0], [12.6, 660.0], [12.7, 660.0], [12.8, 660.0], [12.9, 660.0], [13.0, 672.0], [13.1, 672.0], [13.2, 672.0], [13.3, 672.0], [13.4, 672.0], [13.5, 680.0], [13.6, 680.0], [13.7, 680.0], [13.8, 680.0], [13.9, 680.0], [14.0, 690.0], [14.1, 690.0], [14.2, 690.0], [14.3, 690.0], [14.4, 690.0], [14.5, 700.0], [14.6, 700.0], [14.7, 700.0], [14.8, 700.0], [14.9, 700.0], [15.0, 701.0], [15.1, 701.0], [15.2, 701.0], [15.3, 701.0], [15.4, 701.0], [15.5, 720.0], [15.6, 720.0], [15.7, 720.0], [15.8, 720.0], [15.9, 720.0], [16.0, 723.0], [16.1, 723.0], [16.2, 723.0], [16.3, 723.0], [16.4, 723.0], [16.5, 729.0], [16.6, 729.0], [16.7, 729.0], [16.8, 729.0], [16.9, 729.0], [17.0, 740.0], [17.1, 740.0], [17.2, 740.0], [17.3, 740.0], [17.4, 740.0], [17.5, 751.0], [17.6, 751.0], [17.7, 751.0], [17.8, 751.0], [17.9, 751.0], [18.0, 774.0], [18.1, 774.0], [18.2, 774.0], [18.3, 774.0], [18.4, 774.0], [18.5, 791.0], [18.6, 791.0], [18.7, 791.0], [18.8, 791.0], [18.9, 791.0], [19.0, 806.0], [19.1, 806.0], [19.2, 806.0], [19.3, 806.0], [19.4, 806.0], [19.5, 809.0], [19.6, 809.0], [19.7, 809.0], [19.8, 809.0], [19.9, 809.0], [20.0, 830.0], [20.1, 830.0], [20.2, 830.0], [20.3, 830.0], [20.4, 830.0], [20.5, 870.0], [20.6, 870.0], [20.7, 870.0], [20.8, 870.0], [20.9, 870.0], [21.0, 889.0], [21.1, 889.0], [21.2, 889.0], [21.3, 889.0], [21.4, 889.0], [21.5, 901.0], [21.6, 901.0], [21.7, 901.0], [21.8, 901.0], [21.9, 901.0], [22.0, 907.0], [22.1, 907.0], [22.2, 907.0], [22.3, 907.0], [22.4, 907.0], [22.5, 918.0], [22.6, 918.0], [22.7, 918.0], [22.8, 918.0], [22.9, 918.0], [23.0, 950.0], [23.1, 950.0], [23.2, 950.0], [23.3, 950.0], [23.4, 950.0], [23.5, 960.0], [23.6, 960.0], [23.7, 960.0], [23.8, 960.0], [23.9, 960.0], [24.0, 980.0], [24.1, 980.0], [24.2, 980.0], [24.3, 980.0], [24.4, 980.0], [24.5, 983.0], [24.6, 983.0], [24.7, 983.0], [24.8, 983.0], [24.9, 983.0], [25.0, 984.0], [25.1, 984.0], [25.2, 984.0], [25.3, 984.0], [25.4, 984.0], [25.5, 1000.0], [25.6, 1000.0], [25.7, 1000.0], [25.8, 1000.0], [25.9, 1000.0], [26.0, 1010.0], [26.1, 1010.0], [26.2, 1010.0], [26.3, 1010.0], [26.4, 1010.0], [26.5, 1010.0], [26.6, 1010.0], [26.7, 1010.0], [26.8, 1010.0], [26.9, 1010.0], [27.0, 1010.0], [27.1, 1010.0], [27.2, 1010.0], [27.3, 1010.0], [27.4, 1010.0], [27.5, 1019.0], [27.6, 1019.0], [27.7, 1019.0], [27.8, 1019.0], [27.9, 1019.0], [28.0, 1026.0], [28.1, 1026.0], [28.2, 1026.0], [28.3, 1026.0], [28.4, 1026.0], [28.5, 1029.0], [28.6, 1029.0], [28.7, 1029.0], [28.8, 1029.0], [28.9, 1029.0], [29.0, 1030.0], [29.1, 1030.0], [29.2, 1030.0], [29.3, 1030.0], [29.4, 1030.0], [29.5, 1030.0], [29.6, 1030.0], [29.7, 1030.0], [29.8, 1030.0], [29.9, 1030.0], [30.0, 1033.0], [30.1, 1033.0], [30.2, 1033.0], [30.3, 1033.0], [30.4, 1033.0], [30.5, 1039.0], [30.6, 1039.0], [30.7, 1039.0], [30.8, 1039.0], [30.9, 1039.0], [31.0, 1039.0], [31.1, 1039.0], [31.2, 1039.0], [31.3, 1039.0], [31.4, 1039.0], [31.5, 1040.0], [31.6, 1040.0], [31.7, 1040.0], [31.8, 1040.0], [31.9, 1040.0], [32.0, 1043.0], [32.1, 1043.0], [32.2, 1043.0], [32.3, 1043.0], [32.4, 1043.0], [32.5, 1060.0], [32.6, 1060.0], [32.7, 1060.0], [32.8, 1060.0], [32.9, 1060.0], [33.0, 1060.0], [33.1, 1060.0], [33.2, 1060.0], [33.3, 1060.0], [33.4, 1060.0], [33.5, 1069.0], [33.6, 1069.0], [33.7, 1069.0], [33.8, 1069.0], [33.9, 1069.0], [34.0, 1074.0], [34.1, 1074.0], [34.2, 1074.0], [34.3, 1074.0], [34.4, 1074.0], [34.5, 1079.0], [34.6, 1079.0], [34.7, 1079.0], [34.8, 1079.0], [34.9, 1079.0], [35.0, 1081.0], [35.1, 1081.0], [35.2, 1081.0], [35.3, 1081.0], [35.4, 1081.0], [35.5, 1082.0], [35.6, 1082.0], [35.7, 1082.0], [35.8, 1082.0], [35.9, 1082.0], [36.0, 1110.0], [36.1, 1110.0], [36.2, 1110.0], [36.3, 1110.0], [36.4, 1110.0], [36.5, 1115.0], [36.6, 1115.0], [36.7, 1115.0], [36.8, 1115.0], [36.9, 1115.0], [37.0, 1130.0], [37.1, 1130.0], [37.2, 1130.0], [37.3, 1130.0], [37.4, 1130.0], [37.5, 1130.0], [37.6, 1130.0], [37.7, 1130.0], [37.8, 1130.0], [37.9, 1130.0], [38.0, 1140.0], [38.1, 1140.0], [38.2, 1140.0], [38.3, 1140.0], [38.4, 1140.0], [38.5, 1141.0], [38.6, 1141.0], [38.7, 1141.0], [38.8, 1141.0], [38.9, 1141.0], [39.0, 1149.0], [39.1, 1149.0], [39.2, 1149.0], [39.3, 1149.0], [39.4, 1149.0], [39.5, 1160.0], [39.6, 1160.0], [39.7, 1160.0], [39.8, 1160.0], [39.9, 1160.0], [40.0, 1169.0], [40.1, 1169.0], [40.2, 1169.0], [40.3, 1169.0], [40.4, 1169.0], [40.5, 1180.0], [40.6, 1180.0], [40.7, 1180.0], [40.8, 1180.0], [40.9, 1180.0], [41.0, 1210.0], [41.1, 1210.0], [41.2, 1210.0], [41.3, 1210.0], [41.4, 1210.0], [41.5, 1225.0], [41.6, 1225.0], [41.7, 1225.0], [41.8, 1225.0], [41.9, 1225.0], [42.0, 1229.0], [42.1, 1229.0], [42.2, 1229.0], [42.3, 1229.0], [42.4, 1229.0], [42.5, 1240.0], [42.6, 1240.0], [42.7, 1240.0], [42.8, 1240.0], [42.9, 1240.0], [43.0, 1241.0], [43.1, 1241.0], [43.2, 1241.0], [43.3, 1241.0], [43.4, 1241.0], [43.5, 1253.0], [43.6, 1253.0], [43.7, 1253.0], [43.8, 1253.0], [43.9, 1253.0], [44.0, 1262.0], [44.1, 1262.0], [44.2, 1262.0], [44.3, 1262.0], [44.4, 1262.0], [44.5, 1267.0], [44.6, 1267.0], [44.7, 1267.0], [44.8, 1267.0], [44.9, 1267.0], [45.0, 1271.0], [45.1, 1271.0], [45.2, 1271.0], [45.3, 1271.0], [45.4, 1271.0], [45.5, 1279.0], [45.6, 1279.0], [45.7, 1279.0], [45.8, 1279.0], [45.9, 1279.0], [46.0, 1280.0], [46.1, 1280.0], [46.2, 1280.0], [46.3, 1280.0], [46.4, 1280.0], [46.5, 1287.0], [46.6, 1287.0], [46.7, 1287.0], [46.8, 1287.0], [46.9, 1287.0], [47.0, 1290.0], [47.1, 1290.0], [47.2, 1290.0], [47.3, 1290.0], [47.4, 1290.0], [47.5, 1292.0], [47.6, 1292.0], [47.7, 1292.0], [47.8, 1292.0], [47.9, 1292.0], [48.0, 1292.0], [48.1, 1292.0], [48.2, 1292.0], [48.3, 1292.0], [48.4, 1292.0], [48.5, 1296.0], [48.6, 1296.0], [48.7, 1296.0], [48.8, 1296.0], [48.9, 1296.0], [49.0, 1310.0], [49.1, 1310.0], [49.2, 1310.0], [49.3, 1310.0], [49.4, 1310.0], [49.5, 1310.0], [49.6, 1310.0], [49.7, 1310.0], [49.8, 1310.0], [49.9, 1310.0], [50.0, 1317.0], [50.1, 1317.0], [50.2, 1317.0], [50.3, 1317.0], [50.4, 1317.0], [50.5, 1318.0], [50.6, 1318.0], [50.7, 1318.0], [50.8, 1318.0], [50.9, 1318.0], [51.0, 1325.0], [51.1, 1325.0], [51.2, 1325.0], [51.3, 1325.0], [51.4, 1325.0], [51.5, 1330.0], [51.6, 1330.0], [51.7, 1330.0], [51.8, 1330.0], [51.9, 1330.0], [52.0, 1332.0], [52.1, 1332.0], [52.2, 1332.0], [52.3, 1332.0], [52.4, 1332.0], [52.5, 1370.0], [52.6, 1370.0], [52.7, 1370.0], [52.8, 1370.0], [52.9, 1370.0], [53.0, 1380.0], [53.1, 1380.0], [53.2, 1380.0], [53.3, 1380.0], [53.4, 1380.0], [53.5, 1380.0], [53.6, 1380.0], [53.7, 1380.0], [53.8, 1380.0], [53.9, 1380.0], [54.0, 1381.0], [54.1, 1381.0], [54.2, 1381.0], [54.3, 1381.0], [54.4, 1381.0], [54.5, 1381.0], [54.6, 1381.0], [54.7, 1381.0], [54.8, 1381.0], [54.9, 1381.0], [55.0, 1430.0], [55.1, 1430.0], [55.2, 1430.0], [55.3, 1430.0], [55.4, 1430.0], [55.5, 1430.0], [55.6, 1430.0], [55.7, 1430.0], [55.8, 1430.0], [55.9, 1430.0], [56.0, 1434.0], [56.1, 1434.0], [56.2, 1434.0], [56.3, 1434.0], [56.4, 1434.0], [56.5, 1440.0], [56.6, 1440.0], [56.7, 1440.0], [56.8, 1440.0], [56.9, 1440.0], [57.0, 1454.0], [57.1, 1454.0], [57.2, 1454.0], [57.3, 1454.0], [57.4, 1454.0], [57.5, 1461.0], [57.6, 1461.0], [57.7, 1461.0], [57.8, 1461.0], [57.9, 1461.0], [58.0, 1465.0], [58.1, 1465.0], [58.2, 1465.0], [58.3, 1465.0], [58.4, 1465.0], [58.5, 1470.0], [58.6, 1470.0], [58.7, 1470.0], [58.8, 1470.0], [58.9, 1470.0], [59.0, 1472.0], [59.1, 1472.0], [59.2, 1472.0], [59.3, 1472.0], [59.4, 1472.0], [59.5, 1489.0], [59.6, 1489.0], [59.7, 1489.0], [59.8, 1489.0], [59.9, 1489.0], [60.0, 1490.0], [60.1, 1490.0], [60.2, 1490.0], [60.3, 1490.0], [60.4, 1490.0], [60.5, 1500.0], [60.6, 1500.0], [60.7, 1500.0], [60.8, 1500.0], [60.9, 1500.0], [61.0, 1502.0], [61.1, 1502.0], [61.2, 1502.0], [61.3, 1502.0], [61.4, 1502.0], [61.5, 1508.0], [61.6, 1508.0], [61.7, 1508.0], [61.8, 1508.0], [61.9, 1508.0], [62.0, 1525.0], [62.1, 1525.0], [62.2, 1525.0], [62.3, 1525.0], [62.4, 1525.0], [62.5, 1525.0], [62.6, 1525.0], [62.7, 1525.0], [62.8, 1525.0], [62.9, 1525.0], [63.0, 1529.0], [63.1, 1529.0], [63.2, 1529.0], [63.3, 1529.0], [63.4, 1529.0], [63.5, 1530.0], [63.6, 1530.0], [63.7, 1530.0], [63.8, 1530.0], [63.9, 1530.0], [64.0, 1543.0], [64.1, 1543.0], [64.2, 1543.0], [64.3, 1543.0], [64.4, 1543.0], [64.5, 1556.0], [64.6, 1556.0], [64.7, 1556.0], [64.8, 1556.0], [64.9, 1556.0], [65.0, 1589.0], [65.1, 1589.0], [65.2, 1589.0], [65.3, 1589.0], [65.4, 1589.0], [65.5, 1608.0], [65.6, 1608.0], [65.7, 1608.0], [65.8, 1608.0], [65.9, 1608.0], [66.0, 1619.0], [66.1, 1619.0], [66.2, 1619.0], [66.3, 1619.0], [66.4, 1619.0], [66.5, 1624.0], [66.6, 1624.0], [66.7, 1624.0], [66.8, 1624.0], [66.9, 1624.0], [67.0, 1630.0], [67.1, 1630.0], [67.2, 1630.0], [67.3, 1630.0], [67.4, 1630.0], [67.5, 1640.0], [67.6, 1640.0], [67.7, 1640.0], [67.8, 1640.0], [67.9, 1640.0], [68.0, 1643.0], [68.1, 1643.0], [68.2, 1643.0], [68.3, 1643.0], [68.4, 1643.0], [68.5, 1655.0], [68.6, 1655.0], [68.7, 1655.0], [68.8, 1655.0], [68.9, 1655.0], [69.0, 1676.0], [69.1, 1676.0], [69.2, 1676.0], [69.3, 1676.0], [69.4, 1676.0], [69.5, 1679.0], [69.6, 1679.0], [69.7, 1679.0], [69.8, 1679.0], [69.9, 1679.0], [70.0, 1682.0], [70.1, 1682.0], [70.2, 1682.0], [70.3, 1682.0], [70.4, 1682.0], [70.5, 1684.0], [70.6, 1684.0], [70.7, 1684.0], [70.8, 1684.0], [70.9, 1684.0], [71.0, 1711.0], [71.1, 1711.0], [71.2, 1711.0], [71.3, 1711.0], [71.4, 1711.0], [71.5, 1719.0], [71.6, 1719.0], [71.7, 1719.0], [71.8, 1719.0], [71.9, 1719.0], [72.0, 1730.0], [72.1, 1730.0], [72.2, 1730.0], [72.3, 1730.0], [72.4, 1730.0], [72.5, 1739.0], [72.6, 1739.0], [72.7, 1739.0], [72.8, 1739.0], [72.9, 1739.0], [73.0, 1739.0], [73.1, 1739.0], [73.2, 1739.0], [73.3, 1739.0], [73.4, 1739.0], [73.5, 1750.0], [73.6, 1750.0], [73.7, 1750.0], [73.8, 1750.0], [73.9, 1750.0], [74.0, 1750.0], [74.1, 1750.0], [74.2, 1750.0], [74.3, 1750.0], [74.4, 1750.0], [74.5, 1799.0], [74.6, 1799.0], [74.7, 1799.0], [74.8, 1799.0], [74.9, 1799.0], [75.0, 1807.0], [75.1, 1807.0], [75.2, 1807.0], [75.3, 1807.0], [75.4, 1807.0], [75.5, 1809.0], [75.6, 1809.0], [75.7, 1809.0], [75.8, 1809.0], [75.9, 1809.0], [76.0, 1823.0], [76.1, 1823.0], [76.2, 1823.0], [76.3, 1823.0], [76.4, 1823.0], [76.5, 1831.0], [76.6, 1831.0], [76.7, 1831.0], [76.8, 1831.0], [76.9, 1831.0], [77.0, 1839.0], [77.1, 1839.0], [77.2, 1839.0], [77.3, 1839.0], [77.4, 1839.0], [77.5, 1849.0], [77.6, 1849.0], [77.7, 1849.0], [77.8, 1849.0], [77.9, 1849.0], [78.0, 1876.0], [78.1, 1876.0], [78.2, 1876.0], [78.3, 1876.0], [78.4, 1876.0], [78.5, 1881.0], [78.6, 1881.0], [78.7, 1881.0], [78.8, 1881.0], [78.9, 1881.0], [79.0, 1889.0], [79.1, 1889.0], [79.2, 1889.0], [79.3, 1889.0], [79.4, 1889.0], [79.5, 1929.0], [79.6, 1929.0], [79.7, 1929.0], [79.8, 1929.0], [79.9, 1929.0], [80.0, 1934.0], [80.1, 1934.0], [80.2, 1934.0], [80.3, 1934.0], [80.4, 1934.0], [80.5, 1939.0], [80.6, 1939.0], [80.7, 1939.0], [80.8, 1939.0], [80.9, 1939.0], [81.0, 1949.0], [81.1, 1949.0], [81.2, 1949.0], [81.3, 1949.0], [81.4, 1949.0], [81.5, 1954.0], [81.6, 1954.0], [81.7, 1954.0], [81.8, 1954.0], [81.9, 1954.0], [82.0, 1960.0], [82.1, 1960.0], [82.2, 1960.0], [82.3, 1960.0], [82.4, 1960.0], [82.5, 1986.0], [82.6, 1986.0], [82.7, 1986.0], [82.8, 1986.0], [82.9, 1986.0], [83.0, 2008.0], [83.1, 2008.0], [83.2, 2008.0], [83.3, 2008.0], [83.4, 2008.0], [83.5, 2056.0], [83.6, 2056.0], [83.7, 2056.0], [83.8, 2056.0], [83.9, 2056.0], [84.0, 2080.0], [84.1, 2080.0], [84.2, 2080.0], [84.3, 2080.0], [84.4, 2080.0], [84.5, 2100.0], [84.6, 2100.0], [84.7, 2100.0], [84.8, 2100.0], [84.9, 2100.0], [85.0, 2141.0], [85.1, 2141.0], [85.2, 2141.0], [85.3, 2141.0], [85.4, 2141.0], [85.5, 2200.0], [85.6, 2200.0], [85.7, 2200.0], [85.8, 2200.0], [85.9, 2200.0], [86.0, 2230.0], [86.1, 2230.0], [86.2, 2230.0], [86.3, 2230.0], [86.4, 2230.0], [86.5, 2278.0], [86.6, 2278.0], [86.7, 2278.0], [86.8, 2278.0], [86.9, 2278.0], [87.0, 2326.0], [87.1, 2326.0], [87.2, 2326.0], [87.3, 2326.0], [87.4, 2326.0], [87.5, 2399.0], [87.6, 2399.0], [87.7, 2399.0], [87.8, 2399.0], [87.9, 2399.0], [88.0, 2422.0], [88.1, 2422.0], [88.2, 2422.0], [88.3, 2422.0], [88.4, 2422.0], [88.5, 2464.0], [88.6, 2464.0], [88.7, 2464.0], [88.8, 2464.0], [88.9, 2464.0], [89.0, 2519.0], [89.1, 2519.0], [89.2, 2519.0], [89.3, 2519.0], [89.4, 2519.0], [89.5, 2550.0], [89.6, 2550.0], [89.7, 2550.0], [89.8, 2550.0], [89.9, 2550.0], [90.0, 2560.0], [90.1, 2560.0], [90.2, 2560.0], [90.3, 2560.0], [90.4, 2560.0], [90.5, 2609.0], [90.6, 2609.0], [90.7, 2609.0], [90.8, 2609.0], [90.9, 2609.0], [91.0, 2717.0], [91.1, 2717.0], [91.2, 2717.0], [91.3, 2717.0], [91.4, 2717.0], [91.5, 2724.0], [91.6, 2724.0], [91.7, 2724.0], [91.8, 2724.0], [91.9, 2724.0], [92.0, 2790.0], [92.1, 2790.0], [92.2, 2790.0], [92.3, 2790.0], [92.4, 2790.0], [92.5, 2851.0], [92.6, 2851.0], [92.7, 2851.0], [92.8, 2851.0], [92.9, 2851.0], [93.0, 2881.0], [93.1, 2881.0], [93.2, 2881.0], [93.3, 2881.0], [93.4, 2881.0], [93.5, 2912.0], [93.6, 2912.0], [93.7, 2912.0], [93.8, 2912.0], [93.9, 2912.0], [94.0, 2945.0], [94.1, 2945.0], [94.2, 2945.0], [94.3, 2945.0], [94.4, 2945.0], [94.5, 2980.0], [94.6, 2980.0], [94.7, 2980.0], [94.8, 2980.0], [94.9, 2980.0], [95.0, 2983.0], [95.1, 2983.0], [95.2, 2983.0], [95.3, 2983.0], [95.4, 2983.0], [95.5, 3030.0], [95.6, 3030.0], [95.7, 3030.0], [95.8, 3030.0], [95.9, 3030.0], [96.0, 3179.0], [96.1, 3179.0], [96.2, 3179.0], [96.3, 3179.0], [96.4, 3179.0], [96.5, 3232.0], [96.6, 3232.0], [96.7, 3232.0], [96.8, 3232.0], [96.9, 3232.0], [97.0, 3268.0], [97.1, 3268.0], [97.2, 3268.0], [97.3, 3268.0], [97.4, 3268.0], [97.5, 3940.0], [97.6, 3940.0], [97.7, 3940.0], [97.8, 3940.0], [97.9, 3940.0], [98.0, 3950.0], [98.1, 3950.0], [98.2, 3950.0], [98.3, 3950.0], [98.4, 3950.0], [98.5, 5050.0], [98.6, 5050.0], [98.7, 5050.0], [98.8, 5050.0], [98.9, 5050.0], [99.0, 5462.0], [99.1, 5462.0], [99.2, 5462.0], [99.3, 5462.0], [99.4, 5462.0], [99.5, 6337.0], [99.6, 6337.0], [99.7, 6337.0], [99.8, 6337.0], [99.9, 6337.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 930.0], [0.1, 930.0], [0.2, 930.0], [0.3, 930.0], [0.4, 930.0], [0.5, 939.0], [0.6, 939.0], [0.7, 939.0], [0.8, 939.0], [0.9, 939.0], [1.0, 940.0], [1.1, 940.0], [1.2, 940.0], [1.3, 940.0], [1.4, 940.0], [1.5, 950.0], [1.6, 950.0], [1.7, 950.0], [1.8, 950.0], [1.9, 950.0], [2.0, 980.0], [2.1, 980.0], [2.2, 980.0], [2.3, 980.0], [2.4, 980.0], [2.5, 1059.0], [2.6, 1059.0], [2.7, 1059.0], [2.8, 1059.0], [2.9, 1059.0], [3.0, 1095.0], [3.1, 1095.0], [3.2, 1095.0], [3.3, 1095.0], [3.4, 1095.0], [3.5, 1097.0], [3.6, 1097.0], [3.7, 1097.0], [3.8, 1097.0], [3.9, 1097.0], [4.0, 1100.0], [4.1, 1100.0], [4.2, 1100.0], [4.3, 1100.0], [4.4, 1100.0], [4.5, 1100.0], [4.6, 1100.0], [4.7, 1100.0], [4.8, 1100.0], [4.9, 1100.0], [5.0, 1110.0], [5.1, 1110.0], [5.2, 1110.0], [5.3, 1110.0], [5.4, 1110.0], [5.5, 1130.0], [5.6, 1130.0], [5.7, 1130.0], [5.8, 1130.0], [5.9, 1130.0], [6.0, 1130.0], [6.1, 1130.0], [6.2, 1130.0], [6.3, 1130.0], [6.4, 1130.0], [6.5, 1151.0], [6.6, 1151.0], [6.7, 1151.0], [6.8, 1151.0], [6.9, 1151.0], [7.0, 1155.0], [7.1, 1155.0], [7.2, 1155.0], [7.3, 1155.0], [7.4, 1155.0], [7.5, 1216.0], [7.6, 1216.0], [7.7, 1216.0], [7.8, 1216.0], [7.9, 1216.0], [8.0, 1231.0], [8.1, 1231.0], [8.2, 1231.0], [8.3, 1231.0], [8.4, 1231.0], [8.5, 1282.0], [8.6, 1282.0], [8.7, 1282.0], [8.8, 1282.0], [8.9, 1282.0], [9.0, 1354.0], [9.1, 1354.0], [9.2, 1354.0], [9.3, 1354.0], [9.4, 1354.0], [9.5, 1409.0], [9.6, 1409.0], [9.7, 1409.0], [9.8, 1409.0], [9.9, 1409.0], [10.0, 1437.0], [10.1, 1437.0], [10.2, 1437.0], [10.3, 1437.0], [10.4, 1437.0], [10.5, 1453.0], [10.6, 1453.0], [10.7, 1453.0], [10.8, 1453.0], [10.9, 1453.0], [11.0, 1455.0], [11.1, 1455.0], [11.2, 1455.0], [11.3, 1455.0], [11.4, 1455.0], [11.5, 1461.0], [11.6, 1461.0], [11.7, 1461.0], [11.8, 1461.0], [11.9, 1461.0], [12.0, 1471.0], [12.1, 1471.0], [12.2, 1471.0], [12.3, 1471.0], [12.4, 1471.0], [12.5, 1491.0], [12.6, 1491.0], [12.7, 1491.0], [12.8, 1491.0], [12.9, 1491.0], [13.0, 1493.0], [13.1, 1493.0], [13.2, 1493.0], [13.3, 1493.0], [13.4, 1493.0], [13.5, 1499.0], [13.6, 1499.0], [13.7, 1499.0], [13.8, 1499.0], [13.9, 1499.0], [14.0, 1529.0], [14.1, 1529.0], [14.2, 1529.0], [14.3, 1529.0], [14.4, 1529.0], [14.5, 1539.0], [14.6, 1539.0], [14.7, 1539.0], [14.8, 1539.0], [14.9, 1539.0], [15.0, 1559.0], [15.1, 1559.0], [15.2, 1559.0], [15.3, 1559.0], [15.4, 1559.0], [15.5, 1559.0], [15.6, 1559.0], [15.7, 1559.0], [15.8, 1559.0], [15.9, 1559.0], [16.0, 1609.0], [16.1, 1609.0], [16.2, 1609.0], [16.3, 1609.0], [16.4, 1609.0], [16.5, 1620.0], [16.6, 1620.0], [16.7, 1620.0], [16.8, 1620.0], [16.9, 1620.0], [17.0, 1624.0], [17.1, 1624.0], [17.2, 1624.0], [17.3, 1624.0], [17.4, 1624.0], [17.5, 1632.0], [17.6, 1632.0], [17.7, 1632.0], [17.8, 1632.0], [17.9, 1632.0], [18.0, 1639.0], [18.1, 1639.0], [18.2, 1639.0], [18.3, 1639.0], [18.4, 1639.0], [18.5, 1650.0], [18.6, 1650.0], [18.7, 1650.0], [18.8, 1650.0], [18.9, 1650.0], [19.0, 1700.0], [19.1, 1700.0], [19.2, 1700.0], [19.3, 1700.0], [19.4, 1700.0], [19.5, 1704.0], [19.6, 1704.0], [19.7, 1704.0], [19.8, 1704.0], [19.9, 1704.0], [20.0, 1730.0], [20.1, 1730.0], [20.2, 1730.0], [20.3, 1730.0], [20.4, 1730.0], [20.5, 1740.0], [20.6, 1740.0], [20.7, 1740.0], [20.8, 1740.0], [20.9, 1740.0], [21.0, 1754.0], [21.1, 1754.0], [21.2, 1754.0], [21.3, 1754.0], [21.4, 1754.0], [21.5, 1770.0], [21.6, 1770.0], [21.7, 1770.0], [21.8, 1770.0], [21.9, 1770.0], [22.0, 1800.0], [22.1, 1800.0], [22.2, 1800.0], [22.3, 1800.0], [22.4, 1800.0], [22.5, 1804.0], [22.6, 1804.0], [22.7, 1804.0], [22.8, 1804.0], [22.9, 1804.0], [23.0, 1806.0], [23.1, 1806.0], [23.2, 1806.0], [23.3, 1806.0], [23.4, 1806.0], [23.5, 1820.0], [23.6, 1820.0], [23.7, 1820.0], [23.8, 1820.0], [23.9, 1820.0], [24.0, 1830.0], [24.1, 1830.0], [24.2, 1830.0], [24.3, 1830.0], [24.4, 1830.0], [24.5, 1859.0], [24.6, 1859.0], [24.7, 1859.0], [24.8, 1859.0], [24.9, 1859.0], [25.0, 1860.0], [25.1, 1860.0], [25.2, 1860.0], [25.3, 1860.0], [25.4, 1860.0], [25.5, 1897.0], [25.6, 1897.0], [25.7, 1897.0], [25.8, 1897.0], [25.9, 1897.0], [26.0, 1916.0], [26.1, 1916.0], [26.2, 1916.0], [26.3, 1916.0], [26.4, 1916.0], [26.5, 1916.0], [26.6, 1916.0], [26.7, 1916.0], [26.8, 1916.0], [26.9, 1916.0], [27.0, 1920.0], [27.1, 1920.0], [27.2, 1920.0], [27.3, 1920.0], [27.4, 1920.0], [27.5, 1923.0], [27.6, 1923.0], [27.7, 1923.0], [27.8, 1923.0], [27.9, 1923.0], [28.0, 1930.0], [28.1, 1930.0], [28.2, 1930.0], [28.3, 1930.0], [28.4, 1930.0], [28.5, 1931.0], [28.6, 1931.0], [28.7, 1931.0], [28.8, 1931.0], [28.9, 1931.0], [29.0, 1932.0], [29.1, 1932.0], [29.2, 1932.0], [29.3, 1932.0], [29.4, 1932.0], [29.5, 1935.0], [29.6, 1935.0], [29.7, 1935.0], [29.8, 1935.0], [29.9, 1935.0], [30.0, 1939.0], [30.1, 1939.0], [30.2, 1939.0], [30.3, 1939.0], [30.4, 1939.0], [30.5, 1939.0], [30.6, 1939.0], [30.7, 1939.0], [30.8, 1939.0], [30.9, 1939.0], [31.0, 1948.0], [31.1, 1948.0], [31.2, 1948.0], [31.3, 1948.0], [31.4, 1948.0], [31.5, 1950.0], [31.6, 1950.0], [31.7, 1950.0], [31.8, 1950.0], [31.9, 1950.0], [32.0, 1955.0], [32.1, 1955.0], [32.2, 1955.0], [32.3, 1955.0], [32.4, 1955.0], [32.5, 1960.0], [32.6, 1960.0], [32.7, 1960.0], [32.8, 1960.0], [32.9, 1960.0], [33.0, 1962.0], [33.1, 1962.0], [33.2, 1962.0], [33.3, 1962.0], [33.4, 1962.0], [33.5, 1966.0], [33.6, 1966.0], [33.7, 1966.0], [33.8, 1966.0], [33.9, 1966.0], [34.0, 1968.0], [34.1, 1968.0], [34.2, 1968.0], [34.3, 1968.0], [34.4, 1968.0], [34.5, 1979.0], [34.6, 1979.0], [34.7, 1979.0], [34.8, 1979.0], [34.9, 1979.0], [35.0, 1980.0], [35.1, 1980.0], [35.2, 1980.0], [35.3, 1980.0], [35.4, 1980.0], [35.5, 1989.0], [35.6, 1989.0], [35.7, 1989.0], [35.8, 1989.0], [35.9, 1989.0], [36.0, 1990.0], [36.1, 1990.0], [36.2, 1990.0], [36.3, 1990.0], [36.4, 1990.0], [36.5, 1990.0], [36.6, 1990.0], [36.7, 1990.0], [36.8, 1990.0], [36.9, 1990.0], [37.0, 1990.0], [37.1, 1990.0], [37.2, 1990.0], [37.3, 1990.0], [37.4, 1990.0], [37.5, 1994.0], [37.6, 1994.0], [37.7, 1994.0], [37.8, 1994.0], [37.9, 1994.0], [38.0, 2000.0], [38.1, 2000.0], [38.2, 2000.0], [38.3, 2000.0], [38.4, 2000.0], [38.5, 2002.0], [38.6, 2002.0], [38.7, 2002.0], [38.8, 2002.0], [38.9, 2002.0], [39.0, 2007.0], [39.1, 2007.0], [39.2, 2007.0], [39.3, 2007.0], [39.4, 2007.0], [39.5, 2009.0], [39.6, 2009.0], [39.7, 2009.0], [39.8, 2009.0], [39.9, 2009.0], [40.0, 2009.0], [40.1, 2009.0], [40.2, 2009.0], [40.3, 2009.0], [40.4, 2009.0], [40.5, 2010.0], [40.6, 2010.0], [40.7, 2010.0], [40.8, 2010.0], [40.9, 2010.0], [41.0, 2010.0], [41.1, 2010.0], [41.2, 2010.0], [41.3, 2010.0], [41.4, 2010.0], [41.5, 2010.0], [41.6, 2010.0], [41.7, 2010.0], [41.8, 2010.0], [41.9, 2010.0], [42.0, 2019.0], [42.1, 2019.0], [42.2, 2019.0], [42.3, 2019.0], [42.4, 2019.0], [42.5, 2021.0], [42.6, 2021.0], [42.7, 2021.0], [42.8, 2021.0], [42.9, 2021.0], [43.0, 2030.0], [43.1, 2030.0], [43.2, 2030.0], [43.3, 2030.0], [43.4, 2030.0], [43.5, 2032.0], [43.6, 2032.0], [43.7, 2032.0], [43.8, 2032.0], [43.9, 2032.0], [44.0, 2033.0], [44.1, 2033.0], [44.2, 2033.0], [44.3, 2033.0], [44.4, 2033.0], [44.5, 2038.0], [44.6, 2038.0], [44.7, 2038.0], [44.8, 2038.0], [44.9, 2038.0], [45.0, 2050.0], [45.1, 2050.0], [45.2, 2050.0], [45.3, 2050.0], [45.4, 2050.0], [45.5, 2051.0], [45.6, 2051.0], [45.7, 2051.0], [45.8, 2051.0], [45.9, 2051.0], [46.0, 2059.0], [46.1, 2059.0], [46.2, 2059.0], [46.3, 2059.0], [46.4, 2059.0], [46.5, 2059.0], [46.6, 2059.0], [46.7, 2059.0], [46.8, 2059.0], [46.9, 2059.0], [47.0, 2060.0], [47.1, 2060.0], [47.2, 2060.0], [47.3, 2060.0], [47.4, 2060.0], [47.5, 2064.0], [47.6, 2064.0], [47.7, 2064.0], [47.8, 2064.0], [47.9, 2064.0], [48.0, 2069.0], [48.1, 2069.0], [48.2, 2069.0], [48.3, 2069.0], [48.4, 2069.0], [48.5, 2070.0], [48.6, 2070.0], [48.7, 2070.0], [48.8, 2070.0], [48.9, 2070.0], [49.0, 2080.0], [49.1, 2080.0], [49.2, 2080.0], [49.3, 2080.0], [49.4, 2080.0], [49.5, 2086.0], [49.6, 2086.0], [49.7, 2086.0], [49.8, 2086.0], [49.9, 2086.0], [50.0, 2107.0], [50.1, 2107.0], [50.2, 2107.0], [50.3, 2107.0], [50.4, 2107.0], [50.5, 2109.0], [50.6, 2109.0], [50.7, 2109.0], [50.8, 2109.0], [50.9, 2109.0], [51.0, 2120.0], [51.1, 2120.0], [51.2, 2120.0], [51.3, 2120.0], [51.4, 2120.0], [51.5, 2120.0], [51.6, 2120.0], [51.7, 2120.0], [51.8, 2120.0], [51.9, 2120.0], [52.0, 2132.0], [52.1, 2132.0], [52.2, 2132.0], [52.3, 2132.0], [52.4, 2132.0], [52.5, 2136.0], [52.6, 2136.0], [52.7, 2136.0], [52.8, 2136.0], [52.9, 2136.0], [53.0, 2147.0], [53.1, 2147.0], [53.2, 2147.0], [53.3, 2147.0], [53.4, 2147.0], [53.5, 2149.0], [53.6, 2149.0], [53.7, 2149.0], [53.8, 2149.0], [53.9, 2149.0], [54.0, 2150.0], [54.1, 2150.0], [54.2, 2150.0], [54.3, 2150.0], [54.4, 2150.0], [54.5, 2159.0], [54.6, 2159.0], [54.7, 2159.0], [54.8, 2159.0], [54.9, 2159.0], [55.0, 2170.0], [55.1, 2170.0], [55.2, 2170.0], [55.3, 2170.0], [55.4, 2170.0], [55.5, 2176.0], [55.6, 2176.0], [55.7, 2176.0], [55.8, 2176.0], [55.9, 2176.0], [56.0, 2179.0], [56.1, 2179.0], [56.2, 2179.0], [56.3, 2179.0], [56.4, 2179.0], [56.5, 2180.0], [56.6, 2180.0], [56.7, 2180.0], [56.8, 2180.0], [56.9, 2180.0], [57.0, 2181.0], [57.1, 2181.0], [57.2, 2181.0], [57.3, 2181.0], [57.4, 2181.0], [57.5, 2190.0], [57.6, 2190.0], [57.7, 2190.0], [57.8, 2190.0], [57.9, 2190.0], [58.0, 2191.0], [58.1, 2191.0], [58.2, 2191.0], [58.3, 2191.0], [58.4, 2191.0], [58.5, 2218.0], [58.6, 2218.0], [58.7, 2218.0], [58.8, 2218.0], [58.9, 2218.0], [59.0, 2237.0], [59.1, 2237.0], [59.2, 2237.0], [59.3, 2237.0], [59.4, 2237.0], [59.5, 2237.0], [59.6, 2237.0], [59.7, 2237.0], [59.8, 2237.0], [59.9, 2237.0], [60.0, 2240.0], [60.1, 2240.0], [60.2, 2240.0], [60.3, 2240.0], [60.4, 2240.0], [60.5, 2260.0], [60.6, 2260.0], [60.7, 2260.0], [60.8, 2260.0], [60.9, 2260.0], [61.0, 2275.0], [61.1, 2275.0], [61.2, 2275.0], [61.3, 2275.0], [61.4, 2275.0], [61.5, 2331.0], [61.6, 2331.0], [61.7, 2331.0], [61.8, 2331.0], [61.9, 2331.0], [62.0, 2333.0], [62.1, 2333.0], [62.2, 2333.0], [62.3, 2333.0], [62.4, 2333.0], [62.5, 2359.0], [62.6, 2359.0], [62.7, 2359.0], [62.8, 2359.0], [62.9, 2359.0], [63.0, 2359.0], [63.1, 2359.0], [63.2, 2359.0], [63.3, 2359.0], [63.4, 2359.0], [63.5, 2365.0], [63.6, 2365.0], [63.7, 2365.0], [63.8, 2365.0], [63.9, 2365.0], [64.0, 2378.0], [64.1, 2378.0], [64.2, 2378.0], [64.3, 2378.0], [64.4, 2378.0], [64.5, 2387.0], [64.6, 2387.0], [64.7, 2387.0], [64.8, 2387.0], [64.9, 2387.0], [65.0, 2390.0], [65.1, 2390.0], [65.2, 2390.0], [65.3, 2390.0], [65.4, 2390.0], [65.5, 2410.0], [65.6, 2410.0], [65.7, 2410.0], [65.8, 2410.0], [65.9, 2410.0], [66.0, 2410.0], [66.1, 2410.0], [66.2, 2410.0], [66.3, 2410.0], [66.4, 2410.0], [66.5, 2426.0], [66.6, 2426.0], [66.7, 2426.0], [66.8, 2426.0], [66.9, 2426.0], [67.0, 2429.0], [67.1, 2429.0], [67.2, 2429.0], [67.3, 2429.0], [67.4, 2429.0], [67.5, 2430.0], [67.6, 2430.0], [67.7, 2430.0], [67.8, 2430.0], [67.9, 2430.0], [68.0, 2435.0], [68.1, 2435.0], [68.2, 2435.0], [68.3, 2435.0], [68.4, 2435.0], [68.5, 2447.0], [68.6, 2447.0], [68.7, 2447.0], [68.8, 2447.0], [68.9, 2447.0], [69.0, 2465.0], [69.1, 2465.0], [69.2, 2465.0], [69.3, 2465.0], [69.4, 2465.0], [69.5, 2519.0], [69.6, 2519.0], [69.7, 2519.0], [69.8, 2519.0], [69.9, 2519.0], [70.0, 2559.0], [70.1, 2559.0], [70.2, 2559.0], [70.3, 2559.0], [70.4, 2559.0], [70.5, 2568.0], [70.6, 2568.0], [70.7, 2568.0], [70.8, 2568.0], [70.9, 2568.0], [71.0, 2574.0], [71.1, 2574.0], [71.2, 2574.0], [71.3, 2574.0], [71.4, 2574.0], [71.5, 2574.0], [71.6, 2574.0], [71.7, 2574.0], [71.8, 2574.0], [71.9, 2574.0], [72.0, 2586.0], [72.1, 2586.0], [72.2, 2586.0], [72.3, 2586.0], [72.4, 2586.0], [72.5, 2590.0], [72.6, 2590.0], [72.7, 2590.0], [72.8, 2590.0], [72.9, 2590.0], [73.0, 2609.0], [73.1, 2609.0], [73.2, 2609.0], [73.3, 2609.0], [73.4, 2609.0], [73.5, 2620.0], [73.6, 2620.0], [73.7, 2620.0], [73.8, 2620.0], [73.9, 2620.0], [74.0, 2629.0], [74.1, 2629.0], [74.2, 2629.0], [74.3, 2629.0], [74.4, 2629.0], [74.5, 2630.0], [74.6, 2630.0], [74.7, 2630.0], [74.8, 2630.0], [74.9, 2630.0], [75.0, 2630.0], [75.1, 2630.0], [75.2, 2630.0], [75.3, 2630.0], [75.4, 2630.0], [75.5, 2634.0], [75.6, 2634.0], [75.7, 2634.0], [75.8, 2634.0], [75.9, 2634.0], [76.0, 2659.0], [76.1, 2659.0], [76.2, 2659.0], [76.3, 2659.0], [76.4, 2659.0], [76.5, 2671.0], [76.6, 2671.0], [76.7, 2671.0], [76.8, 2671.0], [76.9, 2671.0], [77.0, 2685.0], [77.1, 2685.0], [77.2, 2685.0], [77.3, 2685.0], [77.4, 2685.0], [77.5, 2710.0], [77.6, 2710.0], [77.7, 2710.0], [77.8, 2710.0], [77.9, 2710.0], [78.0, 2720.0], [78.1, 2720.0], [78.2, 2720.0], [78.3, 2720.0], [78.4, 2720.0], [78.5, 2740.0], [78.6, 2740.0], [78.7, 2740.0], [78.8, 2740.0], [78.9, 2740.0], [79.0, 2749.0], [79.1, 2749.0], [79.2, 2749.0], [79.3, 2749.0], [79.4, 2749.0], [79.5, 2750.0], [79.6, 2750.0], [79.7, 2750.0], [79.8, 2750.0], [79.9, 2750.0], [80.0, 2769.0], [80.1, 2769.0], [80.2, 2769.0], [80.3, 2769.0], [80.4, 2769.0], [80.5, 2770.0], [80.6, 2770.0], [80.7, 2770.0], [80.8, 2770.0], [80.9, 2770.0], [81.0, 2771.0], [81.1, 2771.0], [81.2, 2771.0], [81.3, 2771.0], [81.4, 2771.0], [81.5, 2809.0], [81.6, 2809.0], [81.7, 2809.0], [81.8, 2809.0], [81.9, 2809.0], [82.0, 2848.0], [82.1, 2848.0], [82.2, 2848.0], [82.3, 2848.0], [82.4, 2848.0], [82.5, 2848.0], [82.6, 2848.0], [82.7, 2848.0], [82.8, 2848.0], [82.9, 2848.0], [83.0, 2850.0], [83.1, 2850.0], [83.2, 2850.0], [83.3, 2850.0], [83.4, 2850.0], [83.5, 2886.0], [83.6, 2886.0], [83.7, 2886.0], [83.8, 2886.0], [83.9, 2886.0], [84.0, 2889.0], [84.1, 2889.0], [84.2, 2889.0], [84.3, 2889.0], [84.4, 2889.0], [84.5, 2890.0], [84.6, 2890.0], [84.7, 2890.0], [84.8, 2890.0], [84.9, 2890.0], [85.0, 2896.0], [85.1, 2896.0], [85.2, 2896.0], [85.3, 2896.0], [85.4, 2896.0], [85.5, 2913.0], [85.6, 2913.0], [85.7, 2913.0], [85.8, 2913.0], [85.9, 2913.0], [86.0, 2917.0], [86.1, 2917.0], [86.2, 2917.0], [86.3, 2917.0], [86.4, 2917.0], [86.5, 2920.0], [86.6, 2920.0], [86.7, 2920.0], [86.8, 2920.0], [86.9, 2920.0], [87.0, 2929.0], [87.1, 2929.0], [87.2, 2929.0], [87.3, 2929.0], [87.4, 2929.0], [87.5, 3047.0], [87.6, 3047.0], [87.7, 3047.0], [87.8, 3047.0], [87.9, 3047.0], [88.0, 3048.0], [88.1, 3048.0], [88.2, 3048.0], [88.3, 3048.0], [88.4, 3048.0], [88.5, 3049.0], [88.6, 3049.0], [88.7, 3049.0], [88.8, 3049.0], [88.9, 3049.0], [89.0, 3089.0], [89.1, 3089.0], [89.2, 3089.0], [89.3, 3089.0], [89.4, 3089.0], [89.5, 3124.0], [89.6, 3124.0], [89.7, 3124.0], [89.8, 3124.0], [89.9, 3124.0], [90.0, 3139.0], [90.1, 3139.0], [90.2, 3139.0], [90.3, 3139.0], [90.4, 3139.0], [90.5, 3170.0], [90.6, 3170.0], [90.7, 3170.0], [90.8, 3170.0], [90.9, 3170.0], [91.0, 3171.0], [91.1, 3171.0], [91.2, 3171.0], [91.3, 3171.0], [91.4, 3171.0], [91.5, 3234.0], [91.6, 3234.0], [91.7, 3234.0], [91.8, 3234.0], [91.9, 3234.0], [92.0, 3266.0], [92.1, 3266.0], [92.2, 3266.0], [92.3, 3266.0], [92.4, 3266.0], [92.5, 3305.0], [92.6, 3305.0], [92.7, 3305.0], [92.8, 3305.0], [92.9, 3305.0], [93.0, 3352.0], [93.1, 3352.0], [93.2, 3352.0], [93.3, 3352.0], [93.4, 3352.0], [93.5, 3366.0], [93.6, 3366.0], [93.7, 3366.0], [93.8, 3366.0], [93.9, 3366.0], [94.0, 3425.0], [94.1, 3425.0], [94.2, 3425.0], [94.3, 3425.0], [94.4, 3425.0], [94.5, 3470.0], [94.6, 3470.0], [94.7, 3470.0], [94.8, 3470.0], [94.9, 3470.0], [95.0, 3493.0], [95.1, 3493.0], [95.2, 3493.0], [95.3, 3493.0], [95.4, 3493.0], [95.5, 3519.0], [95.6, 3519.0], [95.7, 3519.0], [95.8, 3519.0], [95.9, 3519.0], [96.0, 3590.0], [96.1, 3590.0], [96.2, 3590.0], [96.3, 3590.0], [96.4, 3590.0], [96.5, 3597.0], [96.6, 3597.0], [96.7, 3597.0], [96.8, 3597.0], [96.9, 3597.0], [97.0, 3792.0], [97.1, 3792.0], [97.2, 3792.0], [97.3, 3792.0], [97.4, 3792.0], [97.5, 3819.0], [97.6, 3819.0], [97.7, 3819.0], [97.8, 3819.0], [97.9, 3819.0], [98.0, 3964.0], [98.1, 3964.0], [98.2, 3964.0], [98.3, 3964.0], [98.4, 3964.0], [98.5, 4056.0], [98.6, 4056.0], [98.7, 4056.0], [98.8, 4056.0], [98.9, 4056.0], [99.0, 4340.0], [99.1, 4340.0], [99.2, 4340.0], [99.3, 4340.0], [99.4, 4340.0], [99.5, 9550.0], [99.6, 9550.0], [99.7, 9550.0], [99.8, 9550.0], [99.9, 9550.0]], "isOverall": false, "label": "Update profile", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 25.0, "series": [{"data": [[0.0, 6.0], [600.0, 5.0], [700.0, 7.0], [800.0, 11.0], [900.0, 13.0], [1000.0, 25.0], [1100.0, 17.0], [1200.0, 12.0], [1300.0, 12.0], [1400.0, 14.0], [1500.0, 11.0], [1600.0, 12.0], [100.0, 1.0], [1700.0, 10.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 4.0], [2300.0, 3.0], [2400.0, 1.0], [2500.0, 2.0], [2700.0, 2.0], [3300.0, 1.0], [200.0, 10.0], [3500.0, 1.0], [300.0, 2.0], [400.0, 3.0], [112800.0, 1.0], [500.0, 4.0]], "isOverall": false, "label": "Get profile", "isController": false}, {"data": [[700.0, 4.0], [800.0, 4.0], [13000.0, 1.0], [900.0, 3.0], [1000.0, 6.0], [1100.0, 6.0], [1200.0, 7.0], [1300.0, 19.0], [1400.0, 14.0], [1500.0, 15.0], [1600.0, 12.0], [1700.0, 19.0], [1800.0, 15.0], [1900.0, 10.0], [2000.0, 9.0], [2100.0, 12.0], [2300.0, 7.0], [2200.0, 6.0], [2400.0, 9.0], [2500.0, 5.0], [2600.0, 4.0], [3100.0, 2.0], [3600.0, 1.0], [4200.0, 1.0], [300.0, 6.0], [500.0, 3.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[0.0, 6.0], [600.0, 5.0], [700.0, 9.0], [800.0, 5.0], [900.0, 8.0], [1000.0, 21.0], [1100.0, 10.0], [1200.0, 16.0], [1300.0, 12.0], [1400.0, 11.0], [1500.0, 10.0], [1600.0, 11.0], [1700.0, 8.0], [1800.0, 9.0], [1900.0, 7.0], [2000.0, 3.0], [2100.0, 2.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 2.0], [2700.0, 3.0], [2900.0, 4.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [200.0, 10.0], [3900.0, 2.0], [300.0, 4.0], [5000.0, 1.0], [5400.0, 1.0], [6300.0, 1.0], [400.0, 2.0], [500.0, 2.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[9500.0, 1.0], [900.0, 5.0], [1000.0, 3.0], [1100.0, 7.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 9.0], [1500.0, 4.0], [1600.0, 6.0], [1700.0, 6.0], [1800.0, 8.0], [1900.0, 24.0], [2000.0, 24.0], [2100.0, 17.0], [2300.0, 8.0], [2200.0, 6.0], [2400.0, 8.0], [2500.0, 7.0], [2600.0, 9.0], [2700.0, 8.0], [2800.0, 8.0], [2900.0, 4.0], [3000.0, 4.0], [3100.0, 4.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [3500.0, 3.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 1.0]], "isOverall": false, "label": "Update profile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 112800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 45.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 308.0, "series": [{"data": [[0.0, 45.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 248.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 308.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 199.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.69588758E12, "maxY": 19.965009208103126, "series": [{"data": [[1.69588758E12, 19.965009208103126], [1.6958877E12, 1.0], [1.69588764E12, 16.008474576271187], [1.69588776E12, 1.0]], "isOverall": false, "label": "Personal", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69588776E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 37.0, "minX": 1.0, "maxY": 18847.333333333332, "series": [{"data": [[8.0, 190.0], [2.0, 841.5], [9.0, 248.0], [10.0, 1120.0], [11.0, 303.0], [12.0, 936.0], [3.0, 270.0], [13.0, 1419.3333333333333], [14.0, 2711.0], [15.0, 1244.0], [16.0, 1280.0], [4.0, 876.2857142857143], [1.0, 18847.333333333332], [17.0, 1059.0], [18.0, 1030.0], [19.0, 1371.0], [20.0, 1321.62048192771], [5.0, 247.0], [6.0, 45.0], [7.0, 611.5]], "isOverall": false, "label": "Get profile", "isController": false}, {"data": [[17.87, 1789.124999999999]], "isOverall": false, "label": "Get profile-Aggregated", "isController": false}, {"data": [[4.0, 1089.7142857142858], [2.0, 2181.0], [1.0, 327.6], [17.0, 2459.0], [18.0, 1744.0], [19.0, 1561.0], [10.0, 393.0], [20.0, 1836.0726256983237], [5.0, 945.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[18.630000000000003, 1757.28]], "isOverall": false, "label": "Register-Aggregated", "isController": false}, {"data": [[16.0, 1380.0], [4.0, 263.0], [2.0, 3297.0], [1.0, 42.2], [17.0, 1141.0], [19.0, 1530.4], [20.0, 1542.379310344827], [5.0, 261.0], [11.0, 37.0], [13.0, 1330.0], [14.0, 1248.5]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[18.515000000000008, 1456.5800000000004]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 1094.5], [11.0, 1231.0], [12.0, 2317.6666666666665], [3.0, 1100.0], [13.0, 2287.25], [14.0, 4340.0], [4.0, 1146.142857142857], [1.0, 947.8], [18.0, 2033.0], [19.0, 1985.2], [20.0, 2359.5059523809514], [5.0, 1923.0], [6.0, 1632.0]], "isOverall": false, "label": "Update profile", "isController": false}, {"data": [[18.185000000000002, 2248.174999999999]], "isOverall": false, "label": "Update profile-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 94.65, "minX": 1.69588758E12, "maxY": 25620.0, "series": [{"data": [[1.69588758E12, 12821.633333333333], [1.6958877E12, 405.01666666666665], [1.69588764E12, 5677.55], [1.69588776E12, 94.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69588758E12, 25620.0], [1.6958877E12, 799.6833333333333], [1.69588764E12, 12495.966666666667], [1.69588776E12, 197.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69588776E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.69588758E12, "maxY": 22609.0, "series": [{"data": [[1.69588758E12, 1383.953124999999], [1.6958877E12, 22609.0], [1.69588764E12, 1024.1666666666665], [1.69588776E12, 39.0]], "isOverall": false, "label": "Get profile", "isController": false}, {"data": [[1.69588758E12, 1860.6666666666665], [1.6958877E12, 329.5], [1.69588764E12, 1605.529411764706], [1.69588776E12, 320.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.69588758E12, 1599.0638297872342], [1.6958877E12, 42.5], [1.69588764E12, 1215.4999999999993], [1.69588776E12, 41.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.69588758E12, 2390.876923076922], [1.6958877E12, 952.25], [1.69588764E12, 2062.7999999999997], [1.69588776E12, 930.0]], "isOverall": false, "label": "Update profile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69588776E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.69588758E12, "maxY": 22609.0, "series": [{"data": [[1.69588758E12, 1383.953124999999], [1.6958877E12, 22609.0], [1.69588764E12, 1024.1666666666665], [1.69588776E12, 39.0]], "isOverall": false, "label": "Get profile", "isController": false}, {"data": [[1.69588758E12, 1860.6597222222224], [1.6958877E12, 329.5], [1.69588764E12, 1605.5098039215688], [1.69588776E12, 320.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.69588758E12, 1599.0638297872342], [1.6958877E12, 42.5], [1.69588764E12, 1215.4814814814815], [1.69588776E12, 41.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.69588758E12, 2390.876923076922], [1.6958877E12, 952.25], [1.69588764E12, 2062.7692307692314], [1.69588776E12, 930.0]], "isOverall": false, "label": "Update profile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69588776E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69588758E12, "maxY": 102.26388888888894, "series": [{"data": [[1.69588758E12, 0.0], [1.6958877E12, 0.0], [1.69588764E12, 20.15151515151515], [1.69588776E12, 0.0]], "isOverall": false, "label": "Get profile", "isController": false}, {"data": [[1.69588758E12, 102.26388888888894], [1.6958877E12, 13.249999999999998], [1.69588764E12, 12.529411764705882], [1.69588776E12, 0.0]], "isOverall": false, "label": "Register", "isController": false}, {"data": [[1.69588758E12, 0.0], [1.6958877E12, 0.0], [1.69588764E12, 27.277777777777786], [1.69588776E12, 0.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.69588758E12, 0.0], [1.6958877E12, 0.0], [1.69588764E12, 38.93846153846154], [1.69588776E12, 0.0]], "isOverall": false, "label": "Update profile", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69588776E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 37.0, "minX": 1.69588758E12, "maxY": 112876.0, "series": [{"data": [[1.69588758E12, 5462.0], [1.6958877E12, 112876.0], [1.69588764E12, 9550.0], [1.69588776E12, 930.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69588758E12, 37.0], [1.6958877E12, 39.0], [1.69588764E12, 45.0], [1.69588776E12, 39.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69588758E12, 2878.000000000001], [1.6958877E12, 68117.59999999996], [1.69588764E12, 2575.0000000000005], [1.69588776E12, 930.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69588758E12, 3963.86], [1.6958877E12, 112876.0], [1.69588764E12, 6786.819999999956], [1.69588776E12, 930.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69588758E12, 1673.0], [1.6958877E12, 49.0], [1.69588764E12, 1292.0], [1.69588776E12, 41.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.69588758E12, 3233.9], [1.6958877E12, 112876.0], [1.69588764E12, 2859.299999999999], [1.69588776E12, 930.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69588776E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 240.0, "minX": 1.0, "maxY": 2896.5, "series": [{"data": [[2.0, 240.0], [8.0, 1949.5], [9.0, 1694.0], [10.0, 1732.0], [11.0, 1380.0], [12.0, 1720.0], [3.0, 677.0], [13.0, 1736.0], [14.0, 1246.0], [15.0, 1465.5], [4.0, 1095.0], [16.0, 1438.0], [1.0, 664.5], [17.0, 1619.0], [19.0, 1082.0], [5.0, 2485.0], [20.0, 1077.5], [21.0, 1670.0], [6.0, 1700.0], [7.0, 2896.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 2149.0], [2.0, 320.0], [9.0, 1574.0], [10.0, 1621.0], [11.0, 1424.0], [12.0, 1679.0], [3.0, 995.5], [13.0, 1706.5], [14.0, 1759.0], [15.0, 1911.0], [16.0, 1818.0], [4.0, 530.0], [1.0, 2181.0], [17.0, 1974.5], [19.0, 1754.0], [5.0, 1050.5], [20.0, 2248.0], [21.0, 2187.5], [6.0, 1365.0], [7.0, 1804.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 240.0, "minX": 1.0, "maxY": 2896.5, "series": [{"data": [[2.0, 240.0], [8.0, 1949.5], [9.0, 1694.0], [10.0, 1732.0], [11.0, 1380.0], [12.0, 1720.0], [3.0, 677.0], [13.0, 1736.0], [14.0, 1246.0], [15.0, 1465.5], [4.0, 1095.0], [16.0, 1438.0], [1.0, 664.5], [17.0, 1619.0], [19.0, 1082.0], [5.0, 2485.0], [20.0, 1077.5], [21.0, 1670.0], [6.0, 1700.0], [7.0, 2896.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 2149.0], [2.0, 320.0], [9.0, 1574.0], [10.0, 1621.0], [11.0, 1424.0], [12.0, 1679.0], [3.0, 995.5], [13.0, 1706.5], [14.0, 1759.0], [15.0, 1911.0], [16.0, 1818.0], [4.0, 530.0], [1.0, 2181.0], [17.0, 1974.5], [19.0, 1754.0], [5.0, 1050.5], [20.0, 2248.0], [21.0, 2187.5], [6.0, 1365.0], [7.0, 1804.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.69588758E12, "maxY": 9.383333333333333, "series": [{"data": [[1.69588758E12, 9.383333333333333], [1.6958877E12, 0.2833333333333333], [1.69588764E12, 3.6166666666666667], [1.69588776E12, 0.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69588776E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69588758E12, "maxY": 6.666666666666667, "series": [{"data": [[1.69588758E12, 6.666666666666667], [1.6958877E12, 0.21666666666666667], [1.69588764E12, 3.0833333333333335], [1.69588776E12, 0.05]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69588758E12, 2.3833333333333333], [1.6958877E12, 0.06666666666666667], [1.69588764E12, 0.85], [1.69588776E12, 0.016666666666666666]], "isOverall": false, "label": "401", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69588776E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69588758E12, "maxY": 2.3833333333333333, "series": [{"data": [[1.69588758E12, 2.1333333333333333], [1.6958877E12, 0.08333333333333333], [1.69588764E12, 1.1], [1.69588776E12, 0.016666666666666666]], "isOverall": false, "label": "Get profile-success", "isController": false}, {"data": [[1.69588758E12, 0.016666666666666666]], "isOverall": false, "label": "Register-success", "isController": false}, {"data": [[1.69588758E12, 2.3833333333333333], [1.6958877E12, 0.06666666666666667], [1.69588764E12, 0.85], [1.69588776E12, 0.016666666666666666]], "isOverall": false, "label": "Register-failure", "isController": false}, {"data": [[1.69588758E12, 2.1666666666666665], [1.6958877E12, 0.06666666666666667], [1.69588764E12, 1.0833333333333333], [1.69588776E12, 0.016666666666666666]], "isOverall": false, "label": "Update profile-success", "isController": false}, {"data": [[1.69588758E12, 2.35], [1.6958877E12, 0.06666666666666667], [1.69588764E12, 0.9], [1.69588776E12, 0.016666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69588776E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69588758E12, "maxY": 6.666666666666667, "series": [{"data": [[1.69588758E12, 6.666666666666667], [1.6958877E12, 0.21666666666666667], [1.69588764E12, 3.0833333333333335], [1.69588776E12, 0.05]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69588758E12, 2.3833333333333333], [1.6958877E12, 0.06666666666666667], [1.69588764E12, 0.85], [1.69588776E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69588776E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

