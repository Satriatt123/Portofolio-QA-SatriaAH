/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 60.0, "minX": 0.0, "maxY": 8330.0, "series": [{"data": [[0.0, 112.0], [0.1, 112.0], [0.2, 112.0], [0.3, 112.0], [0.4, 112.0], [0.5, 130.0], [0.6, 130.0], [0.7, 130.0], [0.8, 130.0], [0.9, 130.0], [1.0, 139.0], [1.1, 139.0], [1.2, 139.0], [1.3, 139.0], [1.4, 139.0], [1.5, 140.0], [1.6, 140.0], [1.7, 140.0], [1.8, 140.0], [1.9, 140.0], [2.0, 140.0], [2.1, 140.0], [2.2, 140.0], [2.3, 140.0], [2.4, 140.0], [2.5, 140.0], [2.6, 140.0], [2.7, 140.0], [2.8, 140.0], [2.9, 140.0], [3.0, 141.0], [3.1, 141.0], [3.2, 141.0], [3.3, 141.0], [3.4, 141.0], [3.5, 157.0], [3.6, 157.0], [3.7, 157.0], [3.8, 157.0], [3.9, 157.0], [4.0, 160.0], [4.1, 160.0], [4.2, 160.0], [4.3, 160.0], [4.4, 160.0], [4.5, 161.0], [4.6, 161.0], [4.7, 161.0], [4.8, 161.0], [4.9, 161.0], [5.0, 164.0], [5.1, 164.0], [5.2, 164.0], [5.3, 164.0], [5.4, 164.0], [5.5, 201.0], [5.6, 201.0], [5.7, 201.0], [5.8, 201.0], [5.9, 201.0], [6.0, 209.0], [6.1, 209.0], [6.2, 209.0], [6.3, 209.0], [6.4, 209.0], [6.5, 222.0], [6.6, 222.0], [6.7, 222.0], [6.8, 222.0], [6.9, 222.0], [7.0, 242.0], [7.1, 242.0], [7.2, 242.0], [7.3, 242.0], [7.4, 242.0], [7.5, 266.0], [7.6, 266.0], [7.7, 266.0], [7.8, 266.0], [7.9, 266.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 269.0], [8.5, 273.0], [8.6, 273.0], [8.7, 273.0], [8.8, 273.0], [8.9, 273.0], [9.0, 280.0], [9.1, 280.0], [9.2, 280.0], [9.3, 280.0], [9.4, 280.0], [9.5, 280.0], [9.6, 280.0], [9.7, 280.0], [9.8, 280.0], [9.9, 280.0], [10.0, 294.0], [10.1, 294.0], [10.2, 294.0], [10.3, 294.0], [10.4, 294.0], [10.5, 298.0], [10.6, 298.0], [10.7, 298.0], [10.8, 298.0], [10.9, 298.0], [11.0, 300.0], [11.1, 300.0], [11.2, 300.0], [11.3, 300.0], [11.4, 300.0], [11.5, 301.0], [11.6, 301.0], [11.7, 301.0], [11.8, 301.0], [11.9, 301.0], [12.0, 312.0], [12.1, 312.0], [12.2, 312.0], [12.3, 312.0], [12.4, 312.0], [12.5, 315.0], [12.6, 315.0], [12.7, 315.0], [12.8, 315.0], [12.9, 315.0], [13.0, 317.0], [13.1, 317.0], [13.2, 317.0], [13.3, 317.0], [13.4, 317.0], [13.5, 319.0], [13.6, 319.0], [13.7, 319.0], [13.8, 319.0], [13.9, 319.0], [14.0, 320.0], [14.1, 320.0], [14.2, 320.0], [14.3, 320.0], [14.4, 320.0], [14.5, 331.0], [14.6, 331.0], [14.7, 331.0], [14.8, 331.0], [14.9, 331.0], [15.0, 359.0], [15.1, 359.0], [15.2, 359.0], [15.3, 359.0], [15.4, 359.0], [15.5, 360.0], [15.6, 360.0], [15.7, 360.0], [15.8, 360.0], [15.9, 360.0], [16.0, 360.0], [16.1, 360.0], [16.2, 360.0], [16.3, 360.0], [16.4, 360.0], [16.5, 368.0], [16.6, 368.0], [16.7, 368.0], [16.8, 368.0], [16.9, 368.0], [17.0, 369.0], [17.1, 369.0], [17.2, 369.0], [17.3, 369.0], [17.4, 369.0], [17.5, 370.0], [17.6, 370.0], [17.7, 370.0], [17.8, 370.0], [17.9, 370.0], [18.0, 378.0], [18.1, 378.0], [18.2, 378.0], [18.3, 378.0], [18.4, 378.0], [18.5, 390.0], [18.6, 390.0], [18.7, 390.0], [18.8, 390.0], [18.9, 390.0], [19.0, 390.0], [19.1, 390.0], [19.2, 390.0], [19.3, 390.0], [19.4, 390.0], [19.5, 391.0], [19.6, 391.0], [19.7, 391.0], [19.8, 391.0], [19.9, 391.0], [20.0, 392.0], [20.1, 392.0], [20.2, 392.0], [20.3, 392.0], [20.4, 392.0], [20.5, 397.0], [20.6, 397.0], [20.7, 397.0], [20.8, 397.0], [20.9, 397.0], [21.0, 406.0], [21.1, 406.0], [21.2, 406.0], [21.3, 406.0], [21.4, 406.0], [21.5, 408.0], [21.6, 408.0], [21.7, 408.0], [21.8, 408.0], [21.9, 408.0], [22.0, 412.0], [22.1, 412.0], [22.2, 412.0], [22.3, 412.0], [22.4, 412.0], [22.5, 413.0], [22.6, 413.0], [22.7, 413.0], [22.8, 413.0], [22.9, 413.0], [23.0, 419.0], [23.1, 419.0], [23.2, 419.0], [23.3, 419.0], [23.4, 419.0], [23.5, 420.0], [23.6, 420.0], [23.7, 420.0], [23.8, 420.0], [23.9, 420.0], [24.0, 420.0], [24.1, 420.0], [24.2, 420.0], [24.3, 420.0], [24.4, 420.0], [24.5, 430.0], [24.6, 430.0], [24.7, 430.0], [24.8, 430.0], [24.9, 430.0], [25.0, 437.0], [25.1, 437.0], [25.2, 437.0], [25.3, 437.0], [25.4, 437.0], [25.5, 450.0], [25.6, 450.0], [25.7, 450.0], [25.8, 450.0], [25.9, 450.0], [26.0, 457.0], [26.1, 457.0], [26.2, 457.0], [26.3, 457.0], [26.4, 457.0], [26.5, 461.0], [26.6, 461.0], [26.7, 461.0], [26.8, 461.0], [26.9, 461.0], [27.0, 468.0], [27.1, 468.0], [27.2, 468.0], [27.3, 468.0], [27.4, 468.0], [27.5, 475.0], [27.6, 475.0], [27.7, 475.0], [27.8, 475.0], [27.9, 475.0], [28.0, 479.0], [28.1, 479.0], [28.2, 479.0], [28.3, 479.0], [28.4, 479.0], [28.5, 480.0], [28.6, 480.0], [28.7, 480.0], [28.8, 480.0], [28.9, 480.0], [29.0, 482.0], [29.1, 482.0], [29.2, 482.0], [29.3, 482.0], [29.4, 482.0], [29.5, 483.0], [29.6, 483.0], [29.7, 483.0], [29.8, 483.0], [29.9, 483.0], [30.0, 498.0], [30.1, 498.0], [30.2, 498.0], [30.3, 498.0], [30.4, 498.0], [30.5, 501.0], [30.6, 501.0], [30.7, 501.0], [30.8, 501.0], [30.9, 501.0], [31.0, 510.0], [31.1, 510.0], [31.2, 510.0], [31.3, 510.0], [31.4, 510.0], [31.5, 530.0], [31.6, 530.0], [31.7, 530.0], [31.8, 530.0], [31.9, 530.0], [32.0, 539.0], [32.1, 539.0], [32.2, 539.0], [32.3, 539.0], [32.4, 539.0], [32.5, 551.0], [32.6, 551.0], [32.7, 551.0], [32.8, 551.0], [32.9, 551.0], [33.0, 561.0], [33.1, 561.0], [33.2, 561.0], [33.3, 561.0], [33.4, 561.0], [33.5, 565.0], [33.6, 565.0], [33.7, 565.0], [33.8, 565.0], [33.9, 565.0], [34.0, 569.0], [34.1, 569.0], [34.2, 569.0], [34.3, 569.0], [34.4, 569.0], [34.5, 570.0], [34.6, 570.0], [34.7, 570.0], [34.8, 570.0], [34.9, 570.0], [35.0, 574.0], [35.1, 574.0], [35.2, 574.0], [35.3, 574.0], [35.4, 574.0], [35.5, 574.0], [35.6, 574.0], [35.7, 574.0], [35.8, 574.0], [35.9, 574.0], [36.0, 576.0], [36.1, 576.0], [36.2, 576.0], [36.3, 576.0], [36.4, 576.0], [36.5, 586.0], [36.6, 586.0], [36.7, 586.0], [36.8, 586.0], [36.9, 586.0], [37.0, 589.0], [37.1, 589.0], [37.2, 589.0], [37.3, 589.0], [37.4, 589.0], [37.5, 590.0], [37.6, 590.0], [37.7, 590.0], [37.8, 590.0], [37.9, 590.0], [38.0, 593.0], [38.1, 593.0], [38.2, 593.0], [38.3, 593.0], [38.4, 593.0], [38.5, 595.0], [38.6, 595.0], [38.7, 595.0], [38.8, 595.0], [38.9, 595.0], [39.0, 597.0], [39.1, 597.0], [39.2, 597.0], [39.3, 597.0], [39.4, 597.0], [39.5, 610.0], [39.6, 610.0], [39.7, 610.0], [39.8, 610.0], [39.9, 610.0], [40.0, 631.0], [40.1, 631.0], [40.2, 631.0], [40.3, 631.0], [40.4, 631.0], [40.5, 640.0], [40.6, 640.0], [40.7, 640.0], [40.8, 640.0], [40.9, 640.0], [41.0, 641.0], [41.1, 641.0], [41.2, 641.0], [41.3, 641.0], [41.4, 641.0], [41.5, 647.0], [41.6, 647.0], [41.7, 647.0], [41.8, 647.0], [41.9, 647.0], [42.0, 650.0], [42.1, 650.0], [42.2, 650.0], [42.3, 650.0], [42.4, 650.0], [42.5, 651.0], [42.6, 651.0], [42.7, 651.0], [42.8, 651.0], [42.9, 651.0], [43.0, 656.0], [43.1, 656.0], [43.2, 656.0], [43.3, 656.0], [43.4, 656.0], [43.5, 670.0], [43.6, 670.0], [43.7, 670.0], [43.8, 670.0], [43.9, 670.0], [44.0, 675.0], [44.1, 675.0], [44.2, 675.0], [44.3, 675.0], [44.4, 675.0], [44.5, 679.0], [44.6, 679.0], [44.7, 679.0], [44.8, 679.0], [44.9, 679.0], [45.0, 680.0], [45.1, 680.0], [45.2, 680.0], [45.3, 680.0], [45.4, 680.0], [45.5, 680.0], [45.6, 680.0], [45.7, 680.0], [45.8, 680.0], [45.9, 680.0], [46.0, 680.0], [46.1, 680.0], [46.2, 680.0], [46.3, 680.0], [46.4, 680.0], [46.5, 682.0], [46.6, 682.0], [46.7, 682.0], [46.8, 682.0], [46.9, 682.0], [47.0, 698.0], [47.1, 698.0], [47.2, 698.0], [47.3, 698.0], [47.4, 698.0], [47.5, 698.0], [47.6, 698.0], [47.7, 698.0], [47.8, 698.0], [47.9, 698.0], [48.0, 698.0], [48.1, 698.0], [48.2, 698.0], [48.3, 698.0], [48.4, 698.0], [48.5, 720.0], [48.6, 720.0], [48.7, 720.0], [48.8, 720.0], [48.9, 720.0], [49.0, 720.0], [49.1, 720.0], [49.2, 720.0], [49.3, 720.0], [49.4, 720.0], [49.5, 720.0], [49.6, 720.0], [49.7, 720.0], [49.8, 720.0], [49.9, 720.0], [50.0, 721.0], [50.1, 721.0], [50.2, 721.0], [50.3, 721.0], [50.4, 721.0], [50.5, 721.0], [50.6, 721.0], [50.7, 721.0], [50.8, 721.0], [50.9, 721.0], [51.0, 728.0], [51.1, 728.0], [51.2, 728.0], [51.3, 728.0], [51.4, 728.0], [51.5, 730.0], [51.6, 730.0], [51.7, 730.0], [51.8, 730.0], [51.9, 730.0], [52.0, 730.0], [52.1, 730.0], [52.2, 730.0], [52.3, 730.0], [52.4, 730.0], [52.5, 750.0], [52.6, 750.0], [52.7, 750.0], [52.8, 750.0], [52.9, 750.0], [53.0, 752.0], [53.1, 752.0], [53.2, 752.0], [53.3, 752.0], [53.4, 752.0], [53.5, 752.0], [53.6, 752.0], [53.7, 752.0], [53.8, 752.0], [53.9, 752.0], [54.0, 759.0], [54.1, 759.0], [54.2, 759.0], [54.3, 759.0], [54.4, 759.0], [54.5, 759.0], [54.6, 759.0], [54.7, 759.0], [54.8, 759.0], [54.9, 759.0], [55.0, 773.0], [55.1, 773.0], [55.2, 773.0], [55.3, 773.0], [55.4, 773.0], [55.5, 789.0], [55.6, 789.0], [55.7, 789.0], [55.8, 789.0], [55.9, 789.0], [56.0, 790.0], [56.1, 790.0], [56.2, 790.0], [56.3, 790.0], [56.4, 790.0], [56.5, 813.0], [56.6, 813.0], [56.7, 813.0], [56.8, 813.0], [56.9, 813.0], [57.0, 830.0], [57.1, 830.0], [57.2, 830.0], [57.3, 830.0], [57.4, 830.0], [57.5, 833.0], [57.6, 833.0], [57.7, 833.0], [57.8, 833.0], [57.9, 833.0], [58.0, 840.0], [58.1, 840.0], [58.2, 840.0], [58.3, 840.0], [58.4, 840.0], [58.5, 844.0], [58.6, 844.0], [58.7, 844.0], [58.8, 844.0], [58.9, 844.0], [59.0, 854.0], [59.1, 854.0], [59.2, 854.0], [59.3, 854.0], [59.4, 854.0], [59.5, 883.0], [59.6, 883.0], [59.7, 883.0], [59.8, 883.0], [59.9, 883.0], [60.0, 890.0], [60.1, 890.0], [60.2, 890.0], [60.3, 890.0], [60.4, 890.0], [60.5, 905.0], [60.6, 905.0], [60.7, 905.0], [60.8, 905.0], [60.9, 905.0], [61.0, 909.0], [61.1, 909.0], [61.2, 909.0], [61.3, 909.0], [61.4, 909.0], [61.5, 920.0], [61.6, 920.0], [61.7, 920.0], [61.8, 920.0], [61.9, 920.0], [62.0, 934.0], [62.1, 934.0], [62.2, 934.0], [62.3, 934.0], [62.4, 934.0], [62.5, 946.0], [62.6, 946.0], [62.7, 946.0], [62.8, 946.0], [62.9, 946.0], [63.0, 979.0], [63.1, 979.0], [63.2, 979.0], [63.3, 979.0], [63.4, 979.0], [63.5, 998.0], [63.6, 998.0], [63.7, 998.0], [63.8, 998.0], [63.9, 998.0], [64.0, 999.0], [64.1, 999.0], [64.2, 999.0], [64.3, 999.0], [64.4, 999.0], [64.5, 1031.0], [64.6, 1031.0], [64.7, 1031.0], [64.8, 1031.0], [64.9, 1031.0], [65.0, 1033.0], [65.1, 1033.0], [65.2, 1033.0], [65.3, 1033.0], [65.4, 1033.0], [65.5, 1069.0], [65.6, 1069.0], [65.7, 1069.0], [65.8, 1069.0], [65.9, 1069.0], [66.0, 1079.0], [66.1, 1079.0], [66.2, 1079.0], [66.3, 1079.0], [66.4, 1079.0], [66.5, 1081.0], [66.6, 1081.0], [66.7, 1081.0], [66.8, 1081.0], [66.9, 1081.0], [67.0, 1085.0], [67.1, 1085.0], [67.2, 1085.0], [67.3, 1085.0], [67.4, 1085.0], [67.5, 1130.0], [67.6, 1130.0], [67.7, 1130.0], [67.8, 1130.0], [67.9, 1130.0], [68.0, 1144.0], [68.1, 1144.0], [68.2, 1144.0], [68.3, 1144.0], [68.4, 1144.0], [68.5, 1160.0], [68.6, 1160.0], [68.7, 1160.0], [68.8, 1160.0], [68.9, 1160.0], [69.0, 1195.0], [69.1, 1195.0], [69.2, 1195.0], [69.3, 1195.0], [69.4, 1195.0], [69.5, 1254.0], [69.6, 1254.0], [69.7, 1254.0], [69.8, 1254.0], [69.9, 1254.0], [70.0, 1305.0], [70.1, 1305.0], [70.2, 1305.0], [70.3, 1305.0], [70.4, 1305.0], [70.5, 1309.0], [70.6, 1309.0], [70.7, 1309.0], [70.8, 1309.0], [70.9, 1309.0], [71.0, 1320.0], [71.1, 1320.0], [71.2, 1320.0], [71.3, 1320.0], [71.4, 1320.0], [71.5, 1347.0], [71.6, 1347.0], [71.7, 1347.0], [71.8, 1347.0], [71.9, 1347.0], [72.0, 1350.0], [72.1, 1350.0], [72.2, 1350.0], [72.3, 1350.0], [72.4, 1350.0], [72.5, 1356.0], [72.6, 1356.0], [72.7, 1356.0], [72.8, 1356.0], [72.9, 1356.0], [73.0, 1380.0], [73.1, 1380.0], [73.2, 1380.0], [73.3, 1380.0], [73.4, 1380.0], [73.5, 1390.0], [73.6, 1390.0], [73.7, 1390.0], [73.8, 1390.0], [73.9, 1390.0], [74.0, 1399.0], [74.1, 1399.0], [74.2, 1399.0], [74.3, 1399.0], [74.4, 1399.0], [74.5, 1400.0], [74.6, 1400.0], [74.7, 1400.0], [74.8, 1400.0], [74.9, 1400.0], [75.0, 1408.0], [75.1, 1408.0], [75.2, 1408.0], [75.3, 1408.0], [75.4, 1408.0], [75.5, 1423.0], [75.6, 1423.0], [75.7, 1423.0], [75.8, 1423.0], [75.9, 1423.0], [76.0, 1449.0], [76.1, 1449.0], [76.2, 1449.0], [76.3, 1449.0], [76.4, 1449.0], [76.5, 1451.0], [76.6, 1451.0], [76.7, 1451.0], [76.8, 1451.0], [76.9, 1451.0], [77.0, 1490.0], [77.1, 1490.0], [77.2, 1490.0], [77.3, 1490.0], [77.4, 1490.0], [77.5, 1500.0], [77.6, 1500.0], [77.7, 1500.0], [77.8, 1500.0], [77.9, 1500.0], [78.0, 1500.0], [78.1, 1500.0], [78.2, 1500.0], [78.3, 1500.0], [78.4, 1500.0], [78.5, 1504.0], [78.6, 1504.0], [78.7, 1504.0], [78.8, 1504.0], [78.9, 1504.0], [79.0, 1541.0], [79.1, 1541.0], [79.2, 1541.0], [79.3, 1541.0], [79.4, 1541.0], [79.5, 1555.0], [79.6, 1555.0], [79.7, 1555.0], [79.8, 1555.0], [79.9, 1555.0], [80.0, 1561.0], [80.1, 1561.0], [80.2, 1561.0], [80.3, 1561.0], [80.4, 1561.0], [80.5, 1579.0], [80.6, 1579.0], [80.7, 1579.0], [80.8, 1579.0], [80.9, 1579.0], [81.0, 1610.0], [81.1, 1610.0], [81.2, 1610.0], [81.3, 1610.0], [81.4, 1610.0], [81.5, 1681.0], [81.6, 1681.0], [81.7, 1681.0], [81.8, 1681.0], [81.9, 1681.0], [82.0, 1780.0], [82.1, 1780.0], [82.2, 1780.0], [82.3, 1780.0], [82.4, 1780.0], [82.5, 1783.0], [82.6, 1783.0], [82.7, 1783.0], [82.8, 1783.0], [82.9, 1783.0], [83.0, 1799.0], [83.1, 1799.0], [83.2, 1799.0], [83.3, 1799.0], [83.4, 1799.0], [83.5, 1810.0], [83.6, 1810.0], [83.7, 1810.0], [83.8, 1810.0], [83.9, 1810.0], [84.0, 1835.0], [84.1, 1835.0], [84.2, 1835.0], [84.3, 1835.0], [84.4, 1835.0], [84.5, 1942.0], [84.6, 1942.0], [84.7, 1942.0], [84.8, 1942.0], [84.9, 1942.0], [85.0, 1970.0], [85.1, 1970.0], [85.2, 1970.0], [85.3, 1970.0], [85.4, 1970.0], [85.5, 2000.0], [85.6, 2000.0], [85.7, 2000.0], [85.8, 2000.0], [85.9, 2000.0], [86.0, 2041.0], [86.1, 2041.0], [86.2, 2041.0], [86.3, 2041.0], [86.4, 2041.0], [86.5, 2081.0], [86.6, 2081.0], [86.7, 2081.0], [86.8, 2081.0], [86.9, 2081.0], [87.0, 2101.0], [87.1, 2101.0], [87.2, 2101.0], [87.3, 2101.0], [87.4, 2101.0], [87.5, 2190.0], [87.6, 2190.0], [87.7, 2190.0], [87.8, 2190.0], [87.9, 2190.0], [88.0, 2229.0], [88.1, 2229.0], [88.2, 2229.0], [88.3, 2229.0], [88.4, 2229.0], [88.5, 2286.0], [88.6, 2286.0], [88.7, 2286.0], [88.8, 2286.0], [88.9, 2286.0], [89.0, 2333.0], [89.1, 2333.0], [89.2, 2333.0], [89.3, 2333.0], [89.4, 2333.0], [89.5, 2341.0], [89.6, 2341.0], [89.7, 2341.0], [89.8, 2341.0], [89.9, 2341.0], [90.0, 2430.0], [90.1, 2430.0], [90.2, 2430.0], [90.3, 2430.0], [90.4, 2430.0], [90.5, 2455.0], [90.6, 2455.0], [90.7, 2455.0], [90.8, 2455.0], [90.9, 2455.0], [91.0, 2500.0], [91.1, 2500.0], [91.2, 2500.0], [91.3, 2500.0], [91.4, 2500.0], [91.5, 2655.0], [91.6, 2655.0], [91.7, 2655.0], [91.8, 2655.0], [91.9, 2655.0], [92.0, 2821.0], [92.1, 2821.0], [92.2, 2821.0], [92.3, 2821.0], [92.4, 2821.0], [92.5, 2948.0], [92.6, 2948.0], [92.7, 2948.0], [92.8, 2948.0], [92.9, 2948.0], [93.0, 3109.0], [93.1, 3109.0], [93.2, 3109.0], [93.3, 3109.0], [93.4, 3109.0], [93.5, 3150.0], [93.6, 3150.0], [93.7, 3150.0], [93.8, 3150.0], [93.9, 3150.0], [94.0, 3191.0], [94.1, 3191.0], [94.2, 3191.0], [94.3, 3191.0], [94.4, 3191.0], [94.5, 3284.0], [94.6, 3284.0], [94.7, 3284.0], [94.8, 3284.0], [94.9, 3284.0], [95.0, 3357.0], [95.1, 3357.0], [95.2, 3357.0], [95.3, 3357.0], [95.4, 3357.0], [95.5, 3410.0], [95.6, 3410.0], [95.7, 3410.0], [95.8, 3410.0], [95.9, 3410.0], [96.0, 4140.0], [96.1, 4140.0], [96.2, 4140.0], [96.3, 4140.0], [96.4, 4140.0], [96.5, 4231.0], [96.6, 4231.0], [96.7, 4231.0], [96.8, 4231.0], [96.9, 4231.0], [97.0, 4449.0], [97.1, 4449.0], [97.2, 4449.0], [97.3, 4449.0], [97.4, 4449.0], [97.5, 4517.0], [97.6, 4517.0], [97.7, 4517.0], [97.8, 4517.0], [97.9, 4517.0], [98.0, 4669.0], [98.1, 4669.0], [98.2, 4669.0], [98.3, 4669.0], [98.4, 4669.0], [98.5, 4749.0], [98.6, 4749.0], [98.7, 4749.0], [98.8, 4749.0], [98.9, 4749.0], [99.0, 5069.0], [99.1, 5069.0], [99.2, 5069.0], [99.3, 5069.0], [99.4, 5069.0], [99.5, 6440.0], [99.6, 6440.0], [99.7, 6440.0], [99.8, 6440.0], [99.9, 6440.0]], "isOverall": false, "label": "PUT Buyer order", "isController": false}, {"data": [[0.0, 60.0], [0.1, 60.0], [0.2, 60.0], [0.3, 60.0], [0.4, 60.0], [0.5, 61.0], [0.6, 61.0], [0.7, 61.0], [0.8, 61.0], [0.9, 61.0], [1.0, 68.0], [1.1, 68.0], [1.2, 68.0], [1.3, 68.0], [1.4, 68.0], [1.5, 69.0], [1.6, 69.0], [1.7, 69.0], [1.8, 69.0], [1.9, 69.0], [2.0, 70.0], [2.1, 70.0], [2.2, 70.0], [2.3, 70.0], [2.4, 70.0], [2.5, 71.0], [2.6, 71.0], [2.7, 71.0], [2.8, 71.0], [2.9, 71.0], [3.0, 72.0], [3.1, 72.0], [3.2, 72.0], [3.3, 72.0], [3.4, 72.0], [3.5, 73.0], [3.6, 73.0], [3.7, 73.0], [3.8, 73.0], [3.9, 73.0], [4.0, 75.0], [4.1, 75.0], [4.2, 75.0], [4.3, 75.0], [4.4, 75.0], [4.5, 77.0], [4.6, 77.0], [4.7, 77.0], [4.8, 77.0], [4.9, 77.0], [5.0, 79.0], [5.1, 79.0], [5.2, 79.0], [5.3, 79.0], [5.4, 79.0], [5.5, 79.0], [5.6, 79.0], [5.7, 79.0], [5.8, 79.0], [5.9, 79.0], [6.0, 82.0], [6.1, 82.0], [6.2, 82.0], [6.3, 82.0], [6.4, 82.0], [6.5, 95.0], [6.6, 95.0], [6.7, 95.0], [6.8, 95.0], [6.9, 95.0], [7.0, 101.0], [7.1, 101.0], [7.2, 101.0], [7.3, 101.0], [7.4, 101.0], [7.5, 103.0], [7.6, 103.0], [7.7, 103.0], [7.8, 103.0], [7.9, 103.0], [8.0, 105.0], [8.1, 105.0], [8.2, 105.0], [8.3, 105.0], [8.4, 105.0], [8.5, 112.0], [8.6, 112.0], [8.7, 112.0], [8.8, 112.0], [8.9, 112.0], [9.0, 122.0], [9.1, 122.0], [9.2, 122.0], [9.3, 122.0], [9.4, 122.0], [9.5, 129.0], [9.6, 129.0], [9.7, 129.0], [9.8, 129.0], [9.9, 129.0], [10.0, 129.0], [10.1, 129.0], [10.2, 129.0], [10.3, 129.0], [10.4, 129.0], [10.5, 131.0], [10.6, 131.0], [10.7, 131.0], [10.8, 131.0], [10.9, 131.0], [11.0, 131.0], [11.1, 131.0], [11.2, 131.0], [11.3, 131.0], [11.4, 131.0], [11.5, 138.0], [11.6, 138.0], [11.7, 138.0], [11.8, 138.0], [11.9, 138.0], [12.0, 138.0], [12.1, 138.0], [12.2, 138.0], [12.3, 138.0], [12.4, 138.0], [12.5, 143.0], [12.6, 143.0], [12.7, 143.0], [12.8, 143.0], [12.9, 143.0], [13.0, 150.0], [13.1, 150.0], [13.2, 150.0], [13.3, 150.0], [13.4, 150.0], [13.5, 158.0], [13.6, 158.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 158.0], [14.1, 158.0], [14.2, 158.0], [14.3, 158.0], [14.4, 158.0], [14.5, 159.0], [14.6, 159.0], [14.7, 159.0], [14.8, 159.0], [14.9, 159.0], [15.0, 159.0], [15.1, 159.0], [15.2, 159.0], [15.3, 159.0], [15.4, 159.0], [15.5, 159.0], [15.6, 159.0], [15.7, 159.0], [15.8, 159.0], [15.9, 159.0], [16.0, 160.0], [16.1, 160.0], [16.2, 160.0], [16.3, 160.0], [16.4, 160.0], [16.5, 170.0], [16.6, 170.0], [16.7, 170.0], [16.8, 170.0], [16.9, 170.0], [17.0, 170.0], [17.1, 170.0], [17.2, 170.0], [17.3, 170.0], [17.4, 170.0], [17.5, 172.0], [17.6, 172.0], [17.7, 172.0], [17.8, 172.0], [17.9, 172.0], [18.0, 173.0], [18.1, 173.0], [18.2, 173.0], [18.3, 173.0], [18.4, 173.0], [18.5, 179.0], [18.6, 179.0], [18.7, 179.0], [18.8, 179.0], [18.9, 179.0], [19.0, 179.0], [19.1, 179.0], [19.2, 179.0], [19.3, 179.0], [19.4, 179.0], [19.5, 180.0], [19.6, 180.0], [19.7, 180.0], [19.8, 180.0], [19.9, 180.0], [20.0, 194.0], [20.1, 194.0], [20.2, 194.0], [20.3, 194.0], [20.4, 194.0], [20.5, 201.0], [20.6, 201.0], [20.7, 201.0], [20.8, 201.0], [20.9, 201.0], [21.0, 201.0], [21.1, 201.0], [21.2, 201.0], [21.3, 201.0], [21.4, 201.0], [21.5, 204.0], [21.6, 204.0], [21.7, 204.0], [21.8, 204.0], [21.9, 204.0], [22.0, 204.0], [22.1, 204.0], [22.2, 204.0], [22.3, 204.0], [22.4, 204.0], [22.5, 209.0], [22.6, 209.0], [22.7, 209.0], [22.8, 209.0], [22.9, 209.0], [23.0, 209.0], [23.1, 209.0], [23.2, 209.0], [23.3, 209.0], [23.4, 209.0], [23.5, 220.0], [23.6, 220.0], [23.7, 220.0], [23.8, 220.0], [23.9, 220.0], [24.0, 221.0], [24.1, 221.0], [24.2, 221.0], [24.3, 221.0], [24.4, 221.0], [24.5, 221.0], [24.6, 221.0], [24.7, 221.0], [24.8, 221.0], [24.9, 221.0], [25.0, 229.0], [25.1, 229.0], [25.2, 229.0], [25.3, 229.0], [25.4, 229.0], [25.5, 230.0], [25.6, 230.0], [25.7, 230.0], [25.8, 230.0], [25.9, 230.0], [26.0, 230.0], [26.1, 230.0], [26.2, 230.0], [26.3, 230.0], [26.4, 230.0], [26.5, 235.0], [26.6, 235.0], [26.7, 235.0], [26.8, 235.0], [26.9, 235.0], [27.0, 236.0], [27.1, 236.0], [27.2, 236.0], [27.3, 236.0], [27.4, 236.0], [27.5, 241.0], [27.6, 241.0], [27.7, 241.0], [27.8, 241.0], [27.9, 241.0], [28.0, 241.0], [28.1, 241.0], [28.2, 241.0], [28.3, 241.0], [28.4, 241.0], [28.5, 241.0], [28.6, 241.0], [28.7, 241.0], [28.8, 241.0], [28.9, 241.0], [29.0, 241.0], [29.1, 241.0], [29.2, 241.0], [29.3, 241.0], [29.4, 241.0], [29.5, 244.0], [29.6, 244.0], [29.7, 244.0], [29.8, 244.0], [29.9, 244.0], [30.0, 245.0], [30.1, 245.0], [30.2, 245.0], [30.3, 245.0], [30.4, 245.0], [30.5, 249.0], [30.6, 249.0], [30.7, 249.0], [30.8, 249.0], [30.9, 249.0], [31.0, 249.0], [31.1, 249.0], [31.2, 249.0], [31.3, 249.0], [31.4, 249.0], [31.5, 249.0], [31.6, 249.0], [31.7, 249.0], [31.8, 249.0], [31.9, 249.0], [32.0, 258.0], [32.1, 258.0], [32.2, 258.0], [32.3, 258.0], [32.4, 258.0], [32.5, 258.0], [32.6, 258.0], [32.7, 258.0], [32.8, 258.0], [32.9, 258.0], [33.0, 260.0], [33.1, 260.0], [33.2, 260.0], [33.3, 260.0], [33.4, 260.0], [33.5, 261.0], [33.6, 261.0], [33.7, 261.0], [33.8, 261.0], [33.9, 261.0], [34.0, 262.0], [34.1, 262.0], [34.2, 262.0], [34.3, 262.0], [34.4, 262.0], [34.5, 263.0], [34.6, 263.0], [34.7, 263.0], [34.8, 263.0], [34.9, 263.0], [35.0, 265.0], [35.1, 265.0], [35.2, 265.0], [35.3, 265.0], [35.4, 265.0], [35.5, 270.0], [35.6, 270.0], [35.7, 270.0], [35.8, 270.0], [35.9, 270.0], [36.0, 271.0], [36.1, 271.0], [36.2, 271.0], [36.3, 271.0], [36.4, 271.0], [36.5, 274.0], [36.6, 274.0], [36.7, 274.0], [36.8, 274.0], [36.9, 274.0], [37.0, 275.0], [37.1, 275.0], [37.2, 275.0], [37.3, 275.0], [37.4, 275.0], [37.5, 279.0], [37.6, 279.0], [37.7, 279.0], [37.8, 279.0], [37.9, 279.0], [38.0, 280.0], [38.1, 280.0], [38.2, 280.0], [38.3, 280.0], [38.4, 280.0], [38.5, 280.0], [38.6, 280.0], [38.7, 280.0], [38.8, 280.0], [38.9, 280.0], [39.0, 280.0], [39.1, 280.0], [39.2, 280.0], [39.3, 280.0], [39.4, 280.0], [39.5, 282.0], [39.6, 282.0], [39.7, 282.0], [39.8, 282.0], [39.9, 282.0], [40.0, 294.0], [40.1, 294.0], [40.2, 294.0], [40.3, 294.0], [40.4, 294.0], [40.5, 295.0], [40.6, 295.0], [40.7, 295.0], [40.8, 295.0], [40.9, 295.0], [41.0, 300.0], [41.1, 300.0], [41.2, 300.0], [41.3, 300.0], [41.4, 300.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 307.0], [41.9, 307.0], [42.0, 307.0], [42.1, 307.0], [42.2, 307.0], [42.3, 307.0], [42.4, 307.0], [42.5, 308.0], [42.6, 308.0], [42.7, 308.0], [42.8, 308.0], [42.9, 308.0], [43.0, 311.0], [43.1, 311.0], [43.2, 311.0], [43.3, 311.0], [43.4, 311.0], [43.5, 313.0], [43.6, 313.0], [43.7, 313.0], [43.8, 313.0], [43.9, 313.0], [44.0, 313.0], [44.1, 313.0], [44.2, 313.0], [44.3, 313.0], [44.4, 313.0], [44.5, 317.0], [44.6, 317.0], [44.7, 317.0], [44.8, 317.0], [44.9, 317.0], [45.0, 319.0], [45.1, 319.0], [45.2, 319.0], [45.3, 319.0], [45.4, 319.0], [45.5, 321.0], [45.6, 321.0], [45.7, 321.0], [45.8, 321.0], [45.9, 321.0], [46.0, 325.0], [46.1, 325.0], [46.2, 325.0], [46.3, 325.0], [46.4, 325.0], [46.5, 329.0], [46.6, 329.0], [46.7, 329.0], [46.8, 329.0], [46.9, 329.0], [47.0, 330.0], [47.1, 330.0], [47.2, 330.0], [47.3, 330.0], [47.4, 330.0], [47.5, 330.0], [47.6, 330.0], [47.7, 330.0], [47.8, 330.0], [47.9, 330.0], [48.0, 332.0], [48.1, 332.0], [48.2, 332.0], [48.3, 332.0], [48.4, 332.0], [48.5, 332.0], [48.6, 332.0], [48.7, 332.0], [48.8, 332.0], [48.9, 332.0], [49.0, 335.0], [49.1, 335.0], [49.2, 335.0], [49.3, 335.0], [49.4, 335.0], [49.5, 339.0], [49.6, 339.0], [49.7, 339.0], [49.8, 339.0], [49.9, 339.0], [50.0, 339.0], [50.1, 339.0], [50.2, 339.0], [50.3, 339.0], [50.4, 339.0], [50.5, 339.0], [50.6, 339.0], [50.7, 339.0], [50.8, 339.0], [50.9, 339.0], [51.0, 339.0], [51.1, 339.0], [51.2, 339.0], [51.3, 339.0], [51.4, 339.0], [51.5, 343.0], [51.6, 343.0], [51.7, 343.0], [51.8, 343.0], [51.9, 343.0], [52.0, 345.0], [52.1, 345.0], [52.2, 345.0], [52.3, 345.0], [52.4, 345.0], [52.5, 346.0], [52.6, 346.0], [52.7, 346.0], [52.8, 346.0], [52.9, 346.0], [53.0, 349.0], [53.1, 349.0], [53.2, 349.0], [53.3, 349.0], [53.4, 349.0], [53.5, 350.0], [53.6, 350.0], [53.7, 350.0], [53.8, 350.0], [53.9, 350.0], [54.0, 359.0], [54.1, 359.0], [54.2, 359.0], [54.3, 359.0], [54.4, 359.0], [54.5, 359.0], [54.6, 359.0], [54.7, 359.0], [54.8, 359.0], [54.9, 359.0], [55.0, 363.0], [55.1, 363.0], [55.2, 363.0], [55.3, 363.0], [55.4, 363.0], [55.5, 364.0], [55.6, 364.0], [55.7, 364.0], [55.8, 364.0], [55.9, 364.0], [56.0, 364.0], [56.1, 364.0], [56.2, 364.0], [56.3, 364.0], [56.4, 364.0], [56.5, 368.0], [56.6, 368.0], [56.7, 368.0], [56.8, 368.0], [56.9, 368.0], [57.0, 370.0], [57.1, 370.0], [57.2, 370.0], [57.3, 370.0], [57.4, 370.0], [57.5, 370.0], [57.6, 370.0], [57.7, 370.0], [57.8, 370.0], [57.9, 370.0], [58.0, 370.0], [58.1, 370.0], [58.2, 370.0], [58.3, 370.0], [58.4, 370.0], [58.5, 371.0], [58.6, 371.0], [58.7, 371.0], [58.8, 371.0], [58.9, 371.0], [59.0, 371.0], [59.1, 371.0], [59.2, 371.0], [59.3, 371.0], [59.4, 371.0], [59.5, 373.0], [59.6, 373.0], [59.7, 373.0], [59.8, 373.0], [59.9, 373.0], [60.0, 373.0], [60.1, 373.0], [60.2, 373.0], [60.3, 373.0], [60.4, 373.0], [60.5, 377.0], [60.6, 377.0], [60.7, 377.0], [60.8, 377.0], [60.9, 377.0], [61.0, 380.0], [61.1, 380.0], [61.2, 380.0], [61.3, 380.0], [61.4, 380.0], [61.5, 381.0], [61.6, 381.0], [61.7, 381.0], [61.8, 381.0], [61.9, 381.0], [62.0, 382.0], [62.1, 382.0], [62.2, 382.0], [62.3, 382.0], [62.4, 382.0], [62.5, 389.0], [62.6, 389.0], [62.7, 389.0], [62.8, 389.0], [62.9, 389.0], [63.0, 393.0], [63.1, 393.0], [63.2, 393.0], [63.3, 393.0], [63.4, 393.0], [63.5, 394.0], [63.6, 394.0], [63.7, 394.0], [63.8, 394.0], [63.9, 394.0], [64.0, 397.0], [64.1, 397.0], [64.2, 397.0], [64.3, 397.0], [64.4, 397.0], [64.5, 397.0], [64.6, 397.0], [64.7, 397.0], [64.8, 397.0], [64.9, 397.0], [65.0, 397.0], [65.1, 397.0], [65.2, 397.0], [65.3, 397.0], [65.4, 397.0], [65.5, 399.0], [65.6, 399.0], [65.7, 399.0], [65.8, 399.0], [65.9, 399.0], [66.0, 400.0], [66.1, 400.0], [66.2, 400.0], [66.3, 400.0], [66.4, 400.0], [66.5, 401.0], [66.6, 401.0], [66.7, 401.0], [66.8, 401.0], [66.9, 401.0], [67.0, 403.0], [67.1, 403.0], [67.2, 403.0], [67.3, 403.0], [67.4, 403.0], [67.5, 403.0], [67.6, 403.0], [67.7, 403.0], [67.8, 403.0], [67.9, 403.0], [68.0, 407.0], [68.1, 407.0], [68.2, 407.0], [68.3, 407.0], [68.4, 407.0], [68.5, 409.0], [68.6, 409.0], [68.7, 409.0], [68.8, 409.0], [68.9, 409.0], [69.0, 409.0], [69.1, 409.0], [69.2, 409.0], [69.3, 409.0], [69.4, 409.0], [69.5, 410.0], [69.6, 410.0], [69.7, 410.0], [69.8, 410.0], [69.9, 410.0], [70.0, 411.0], [70.1, 411.0], [70.2, 411.0], [70.3, 411.0], [70.4, 411.0], [70.5, 422.0], [70.6, 422.0], [70.7, 422.0], [70.8, 422.0], [70.9, 422.0], [71.0, 423.0], [71.1, 423.0], [71.2, 423.0], [71.3, 423.0], [71.4, 423.0], [71.5, 424.0], [71.6, 424.0], [71.7, 424.0], [71.8, 424.0], [71.9, 424.0], [72.0, 429.0], [72.1, 429.0], [72.2, 429.0], [72.3, 429.0], [72.4, 429.0], [72.5, 429.0], [72.6, 429.0], [72.7, 429.0], [72.8, 429.0], [72.9, 429.0], [73.0, 440.0], [73.1, 440.0], [73.2, 440.0], [73.3, 440.0], [73.4, 440.0], [73.5, 444.0], [73.6, 444.0], [73.7, 444.0], [73.8, 444.0], [73.9, 444.0], [74.0, 445.0], [74.1, 445.0], [74.2, 445.0], [74.3, 445.0], [74.4, 445.0], [74.5, 459.0], [74.6, 459.0], [74.7, 459.0], [74.8, 459.0], [74.9, 459.0], [75.0, 470.0], [75.1, 470.0], [75.2, 470.0], [75.3, 470.0], [75.4, 470.0], [75.5, 472.0], [75.6, 472.0], [75.7, 472.0], [75.8, 472.0], [75.9, 472.0], [76.0, 490.0], [76.1, 490.0], [76.2, 490.0], [76.3, 490.0], [76.4, 490.0], [76.5, 490.0], [76.6, 490.0], [76.7, 490.0], [76.8, 490.0], [76.9, 490.0], [77.0, 490.0], [77.1, 490.0], [77.2, 490.0], [77.3, 490.0], [77.4, 490.0], [77.5, 501.0], [77.6, 501.0], [77.7, 501.0], [77.8, 501.0], [77.9, 501.0], [78.0, 504.0], [78.1, 504.0], [78.2, 504.0], [78.3, 504.0], [78.4, 504.0], [78.5, 511.0], [78.6, 511.0], [78.7, 511.0], [78.8, 511.0], [78.9, 511.0], [79.0, 518.0], [79.1, 518.0], [79.2, 518.0], [79.3, 518.0], [79.4, 518.0], [79.5, 518.0], [79.6, 518.0], [79.7, 518.0], [79.8, 518.0], [79.9, 518.0], [80.0, 520.0], [80.1, 520.0], [80.2, 520.0], [80.3, 520.0], [80.4, 520.0], [80.5, 528.0], [80.6, 528.0], [80.7, 528.0], [80.8, 528.0], [80.9, 528.0], [81.0, 530.0], [81.1, 530.0], [81.2, 530.0], [81.3, 530.0], [81.4, 530.0], [81.5, 531.0], [81.6, 531.0], [81.7, 531.0], [81.8, 531.0], [81.9, 531.0], [82.0, 534.0], [82.1, 534.0], [82.2, 534.0], [82.3, 534.0], [82.4, 534.0], [82.5, 547.0], [82.6, 547.0], [82.7, 547.0], [82.8, 547.0], [82.9, 547.0], [83.0, 550.0], [83.1, 550.0], [83.2, 550.0], [83.3, 550.0], [83.4, 550.0], [83.5, 559.0], [83.6, 559.0], [83.7, 559.0], [83.8, 559.0], [83.9, 559.0], [84.0, 565.0], [84.1, 565.0], [84.2, 565.0], [84.3, 565.0], [84.4, 565.0], [84.5, 567.0], [84.6, 567.0], [84.7, 567.0], [84.8, 567.0], [84.9, 567.0], [85.0, 568.0], [85.1, 568.0], [85.2, 568.0], [85.3, 568.0], [85.4, 568.0], [85.5, 580.0], [85.6, 580.0], [85.7, 580.0], [85.8, 580.0], [85.9, 580.0], [86.0, 599.0], [86.1, 599.0], [86.2, 599.0], [86.3, 599.0], [86.4, 599.0], [86.5, 617.0], [86.6, 617.0], [86.7, 617.0], [86.8, 617.0], [86.9, 617.0], [87.0, 635.0], [87.1, 635.0], [87.2, 635.0], [87.3, 635.0], [87.4, 635.0], [87.5, 650.0], [87.6, 650.0], [87.7, 650.0], [87.8, 650.0], [87.9, 650.0], [88.0, 700.0], [88.1, 700.0], [88.2, 700.0], [88.3, 700.0], [88.4, 700.0], [88.5, 721.0], [88.6, 721.0], [88.7, 721.0], [88.8, 721.0], [88.9, 721.0], [89.0, 725.0], [89.1, 725.0], [89.2, 725.0], [89.3, 725.0], [89.4, 725.0], [89.5, 727.0], [89.6, 727.0], [89.7, 727.0], [89.8, 727.0], [89.9, 727.0], [90.0, 729.0], [90.1, 729.0], [90.2, 729.0], [90.3, 729.0], [90.4, 729.0], [90.5, 750.0], [90.6, 750.0], [90.7, 750.0], [90.8, 750.0], [90.9, 750.0], [91.0, 760.0], [91.1, 760.0], [91.2, 760.0], [91.3, 760.0], [91.4, 760.0], [91.5, 761.0], [91.6, 761.0], [91.7, 761.0], [91.8, 761.0], [91.9, 761.0], [92.0, 765.0], [92.1, 765.0], [92.2, 765.0], [92.3, 765.0], [92.4, 765.0], [92.5, 768.0], [92.6, 768.0], [92.7, 768.0], [92.8, 768.0], [92.9, 768.0], [93.0, 799.0], [93.1, 799.0], [93.2, 799.0], [93.3, 799.0], [93.4, 799.0], [93.5, 810.0], [93.6, 810.0], [93.7, 810.0], [93.8, 810.0], [93.9, 810.0], [94.0, 1000.0], [94.1, 1000.0], [94.2, 1000.0], [94.3, 1000.0], [94.4, 1000.0], [94.5, 1047.0], [94.6, 1047.0], [94.7, 1047.0], [94.8, 1047.0], [94.9, 1047.0], [95.0, 1090.0], [95.1, 1090.0], [95.2, 1090.0], [95.3, 1090.0], [95.4, 1090.0], [95.5, 1109.0], [95.6, 1109.0], [95.7, 1109.0], [95.8, 1109.0], [95.9, 1109.0], [96.0, 1120.0], [96.1, 1120.0], [96.2, 1120.0], [96.3, 1120.0], [96.4, 1120.0], [96.5, 1130.0], [96.6, 1130.0], [96.7, 1130.0], [96.8, 1130.0], [96.9, 1130.0], [97.0, 1149.0], [97.1, 1149.0], [97.2, 1149.0], [97.3, 1149.0], [97.4, 1149.0], [97.5, 1269.0], [97.6, 1269.0], [97.7, 1269.0], [97.8, 1269.0], [97.9, 1269.0], [98.0, 1276.0], [98.1, 1276.0], [98.2, 1276.0], [98.3, 1276.0], [98.4, 1276.0], [98.5, 1340.0], [98.6, 1340.0], [98.7, 1340.0], [98.8, 1340.0], [98.9, 1340.0], [99.0, 1500.0], [99.1, 1500.0], [99.2, 1500.0], [99.3, 1500.0], [99.4, 1500.0], [99.5, 1991.0], [99.6, 1991.0], [99.7, 1991.0], [99.8, 1991.0], [99.9, 1991.0]], "isOverall": false, "label": "PUT Buy order ID", "isController": false}, {"data": [[0.0, 115.0], [0.1, 115.0], [0.2, 115.0], [0.3, 115.0], [0.4, 115.0], [0.5, 119.0], [0.6, 119.0], [0.7, 119.0], [0.8, 119.0], [0.9, 119.0], [1.0, 120.0], [1.1, 120.0], [1.2, 120.0], [1.3, 120.0], [1.4, 120.0], [1.5, 120.0], [1.6, 120.0], [1.7, 120.0], [1.8, 120.0], [1.9, 120.0], [2.0, 130.0], [2.1, 130.0], [2.2, 130.0], [2.3, 130.0], [2.4, 130.0], [2.5, 139.0], [2.6, 139.0], [2.7, 139.0], [2.8, 139.0], [2.9, 139.0], [3.0, 139.0], [3.1, 139.0], [3.2, 139.0], [3.3, 139.0], [3.4, 139.0], [3.5, 139.0], [3.6, 139.0], [3.7, 139.0], [3.8, 139.0], [3.9, 139.0], [4.0, 145.0], [4.1, 145.0], [4.2, 145.0], [4.3, 145.0], [4.4, 145.0], [4.5, 149.0], [4.6, 149.0], [4.7, 149.0], [4.8, 149.0], [4.9, 149.0], [5.0, 154.0], [5.1, 154.0], [5.2, 154.0], [5.3, 154.0], [5.4, 154.0], [5.5, 159.0], [5.6, 159.0], [5.7, 159.0], [5.8, 159.0], [5.9, 159.0], [6.0, 159.0], [6.1, 159.0], [6.2, 159.0], [6.3, 159.0], [6.4, 159.0], [6.5, 160.0], [6.6, 160.0], [6.7, 160.0], [6.8, 160.0], [6.9, 160.0], [7.0, 160.0], [7.1, 160.0], [7.2, 160.0], [7.3, 160.0], [7.4, 160.0], [7.5, 163.0], [7.6, 163.0], [7.7, 163.0], [7.8, 163.0], [7.9, 163.0], [8.0, 165.0], [8.1, 165.0], [8.2, 165.0], [8.3, 165.0], [8.4, 165.0], [8.5, 177.0], [8.6, 177.0], [8.7, 177.0], [8.8, 177.0], [8.9, 177.0], [9.0, 178.0], [9.1, 178.0], [9.2, 178.0], [9.3, 178.0], [9.4, 178.0], [9.5, 179.0], [9.6, 179.0], [9.7, 179.0], [9.8, 179.0], [9.9, 179.0], [10.0, 180.0], [10.1, 180.0], [10.2, 180.0], [10.3, 180.0], [10.4, 180.0], [10.5, 182.0], [10.6, 182.0], [10.7, 182.0], [10.8, 182.0], [10.9, 182.0], [11.0, 191.0], [11.1, 191.0], [11.2, 191.0], [11.3, 191.0], [11.4, 191.0], [11.5, 191.0], [11.6, 191.0], [11.7, 191.0], [11.8, 191.0], [11.9, 191.0], [12.0, 192.0], [12.1, 192.0], [12.2, 192.0], [12.3, 192.0], [12.4, 192.0], [12.5, 194.0], [12.6, 194.0], [12.7, 194.0], [12.8, 194.0], [12.9, 194.0], [13.0, 196.0], [13.1, 196.0], [13.2, 196.0], [13.3, 196.0], [13.4, 196.0], [13.5, 198.0], [13.6, 198.0], [13.7, 198.0], [13.8, 198.0], [13.9, 198.0], [14.0, 199.0], [14.1, 199.0], [14.2, 199.0], [14.3, 199.0], [14.4, 199.0], [14.5, 199.0], [14.6, 199.0], [14.7, 199.0], [14.8, 199.0], [14.9, 199.0], [15.0, 200.0], [15.1, 200.0], [15.2, 200.0], [15.3, 200.0], [15.4, 200.0], [15.5, 200.0], [15.6, 200.0], [15.7, 200.0], [15.8, 200.0], [15.9, 200.0], [16.0, 201.0], [16.1, 201.0], [16.2, 201.0], [16.3, 201.0], [16.4, 201.0], [16.5, 210.0], [16.6, 210.0], [16.7, 210.0], [16.8, 210.0], [16.9, 210.0], [17.0, 210.0], [17.1, 210.0], [17.2, 210.0], [17.3, 210.0], [17.4, 210.0], [17.5, 215.0], [17.6, 215.0], [17.7, 215.0], [17.8, 215.0], [17.9, 215.0], [18.0, 219.0], [18.1, 219.0], [18.2, 219.0], [18.3, 219.0], [18.4, 219.0], [18.5, 220.0], [18.6, 220.0], [18.7, 220.0], [18.8, 220.0], [18.9, 220.0], [19.0, 229.0], [19.1, 229.0], [19.2, 229.0], [19.3, 229.0], [19.4, 229.0], [19.5, 231.0], [19.6, 231.0], [19.7, 231.0], [19.8, 231.0], [19.9, 231.0], [20.0, 233.0], [20.1, 233.0], [20.2, 233.0], [20.3, 233.0], [20.4, 233.0], [20.5, 245.0], [20.6, 245.0], [20.7, 245.0], [20.8, 245.0], [20.9, 245.0], [21.0, 252.0], [21.1, 252.0], [21.2, 252.0], [21.3, 252.0], [21.4, 252.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 261.0], [22.6, 261.0], [22.7, 261.0], [22.8, 261.0], [22.9, 261.0], [23.0, 264.0], [23.1, 264.0], [23.2, 264.0], [23.3, 264.0], [23.4, 264.0], [23.5, 265.0], [23.6, 265.0], [23.7, 265.0], [23.8, 265.0], [23.9, 265.0], [24.0, 267.0], [24.1, 267.0], [24.2, 267.0], [24.3, 267.0], [24.4, 267.0], [24.5, 269.0], [24.6, 269.0], [24.7, 269.0], [24.8, 269.0], [24.9, 269.0], [25.0, 270.0], [25.1, 270.0], [25.2, 270.0], [25.3, 270.0], [25.4, 270.0], [25.5, 275.0], [25.6, 275.0], [25.7, 275.0], [25.8, 275.0], [25.9, 275.0], [26.0, 275.0], [26.1, 275.0], [26.2, 275.0], [26.3, 275.0], [26.4, 275.0], [26.5, 276.0], [26.6, 276.0], [26.7, 276.0], [26.8, 276.0], [26.9, 276.0], [27.0, 276.0], [27.1, 276.0], [27.2, 276.0], [27.3, 276.0], [27.4, 276.0], [27.5, 277.0], [27.6, 277.0], [27.7, 277.0], [27.8, 277.0], [27.9, 277.0], [28.0, 278.0], [28.1, 278.0], [28.2, 278.0], [28.3, 278.0], [28.4, 278.0], [28.5, 279.0], [28.6, 279.0], [28.7, 279.0], [28.8, 279.0], [28.9, 279.0], [29.0, 279.0], [29.1, 279.0], [29.2, 279.0], [29.3, 279.0], [29.4, 279.0], [29.5, 281.0], [29.6, 281.0], [29.7, 281.0], [29.8, 281.0], [29.9, 281.0], [30.0, 281.0], [30.1, 281.0], [30.2, 281.0], [30.3, 281.0], [30.4, 281.0], [30.5, 282.0], [30.6, 282.0], [30.7, 282.0], [30.8, 282.0], [30.9, 282.0], [31.0, 282.0], [31.1, 282.0], [31.2, 282.0], [31.3, 282.0], [31.4, 282.0], [31.5, 285.0], [31.6, 285.0], [31.7, 285.0], [31.8, 285.0], [31.9, 285.0], [32.0, 287.0], [32.1, 287.0], [32.2, 287.0], [32.3, 287.0], [32.4, 287.0], [32.5, 293.0], [32.6, 293.0], [32.7, 293.0], [32.8, 293.0], [32.9, 293.0], [33.0, 293.0], [33.1, 293.0], [33.2, 293.0], [33.3, 293.0], [33.4, 293.0], [33.5, 299.0], [33.6, 299.0], [33.7, 299.0], [33.8, 299.0], [33.9, 299.0], [34.0, 303.0], [34.1, 303.0], [34.2, 303.0], [34.3, 303.0], [34.4, 303.0], [34.5, 320.0], [34.6, 320.0], [34.7, 320.0], [34.8, 320.0], [34.9, 320.0], [35.0, 326.0], [35.1, 326.0], [35.2, 326.0], [35.3, 326.0], [35.4, 326.0], [35.5, 328.0], [35.6, 328.0], [35.7, 328.0], [35.8, 328.0], [35.9, 328.0], [36.0, 328.0], [36.1, 328.0], [36.2, 328.0], [36.3, 328.0], [36.4, 328.0], [36.5, 329.0], [36.6, 329.0], [36.7, 329.0], [36.8, 329.0], [36.9, 329.0], [37.0, 329.0], [37.1, 329.0], [37.2, 329.0], [37.3, 329.0], [37.4, 329.0], [37.5, 329.0], [37.6, 329.0], [37.7, 329.0], [37.8, 329.0], [37.9, 329.0], [38.0, 330.0], [38.1, 330.0], [38.2, 330.0], [38.3, 330.0], [38.4, 330.0], [38.5, 339.0], [38.6, 339.0], [38.7, 339.0], [38.8, 339.0], [38.9, 339.0], [39.0, 340.0], [39.1, 340.0], [39.2, 340.0], [39.3, 340.0], [39.4, 340.0], [39.5, 344.0], [39.6, 344.0], [39.7, 344.0], [39.8, 344.0], [39.9, 344.0], [40.0, 346.0], [40.1, 346.0], [40.2, 346.0], [40.3, 346.0], [40.4, 346.0], [40.5, 347.0], [40.6, 347.0], [40.7, 347.0], [40.8, 347.0], [40.9, 347.0], [41.0, 347.0], [41.1, 347.0], [41.2, 347.0], [41.3, 347.0], [41.4, 347.0], [41.5, 349.0], [41.6, 349.0], [41.7, 349.0], [41.8, 349.0], [41.9, 349.0], [42.0, 350.0], [42.1, 350.0], [42.2, 350.0], [42.3, 350.0], [42.4, 350.0], [42.5, 350.0], [42.6, 350.0], [42.7, 350.0], [42.8, 350.0], [42.9, 350.0], [43.0, 350.0], [43.1, 350.0], [43.2, 350.0], [43.3, 350.0], [43.4, 350.0], [43.5, 351.0], [43.6, 351.0], [43.7, 351.0], [43.8, 351.0], [43.9, 351.0], [44.0, 356.0], [44.1, 356.0], [44.2, 356.0], [44.3, 356.0], [44.4, 356.0], [44.5, 359.0], [44.6, 359.0], [44.7, 359.0], [44.8, 359.0], [44.9, 359.0], [45.0, 359.0], [45.1, 359.0], [45.2, 359.0], [45.3, 359.0], [45.4, 359.0], [45.5, 361.0], [45.6, 361.0], [45.7, 361.0], [45.8, 361.0], [45.9, 361.0], [46.0, 366.0], [46.1, 366.0], [46.2, 366.0], [46.3, 366.0], [46.4, 366.0], [46.5, 380.0], [46.6, 380.0], [46.7, 380.0], [46.8, 380.0], [46.9, 380.0], [47.0, 386.0], [47.1, 386.0], [47.2, 386.0], [47.3, 386.0], [47.4, 386.0], [47.5, 389.0], [47.6, 389.0], [47.7, 389.0], [47.8, 389.0], [47.9, 389.0], [48.0, 391.0], [48.1, 391.0], [48.2, 391.0], [48.3, 391.0], [48.4, 391.0], [48.5, 394.0], [48.6, 394.0], [48.7, 394.0], [48.8, 394.0], [48.9, 394.0], [49.0, 394.0], [49.1, 394.0], [49.2, 394.0], [49.3, 394.0], [49.4, 394.0], [49.5, 399.0], [49.6, 399.0], [49.7, 399.0], [49.8, 399.0], [49.9, 399.0], [50.0, 399.0], [50.1, 399.0], [50.2, 399.0], [50.3, 399.0], [50.4, 399.0], [50.5, 409.0], [50.6, 409.0], [50.7, 409.0], [50.8, 409.0], [50.9, 409.0], [51.0, 411.0], [51.1, 411.0], [51.2, 411.0], [51.3, 411.0], [51.4, 411.0], [51.5, 412.0], [51.6, 412.0], [51.7, 412.0], [51.8, 412.0], [51.9, 412.0], [52.0, 420.0], [52.1, 420.0], [52.2, 420.0], [52.3, 420.0], [52.4, 420.0], [52.5, 421.0], [52.6, 421.0], [52.7, 421.0], [52.8, 421.0], [52.9, 421.0], [53.0, 421.0], [53.1, 421.0], [53.2, 421.0], [53.3, 421.0], [53.4, 421.0], [53.5, 431.0], [53.6, 431.0], [53.7, 431.0], [53.8, 431.0], [53.9, 431.0], [54.0, 434.0], [54.1, 434.0], [54.2, 434.0], [54.3, 434.0], [54.4, 434.0], [54.5, 439.0], [54.6, 439.0], [54.7, 439.0], [54.8, 439.0], [54.9, 439.0], [55.0, 441.0], [55.1, 441.0], [55.2, 441.0], [55.3, 441.0], [55.4, 441.0], [55.5, 453.0], [55.6, 453.0], [55.7, 453.0], [55.8, 453.0], [55.9, 453.0], [56.0, 459.0], [56.1, 459.0], [56.2, 459.0], [56.3, 459.0], [56.4, 459.0], [56.5, 460.0], [56.6, 460.0], [56.7, 460.0], [56.8, 460.0], [56.9, 460.0], [57.0, 461.0], [57.1, 461.0], [57.2, 461.0], [57.3, 461.0], [57.4, 461.0], [57.5, 466.0], [57.6, 466.0], [57.7, 466.0], [57.8, 466.0], [57.9, 466.0], [58.0, 470.0], [58.1, 470.0], [58.2, 470.0], [58.3, 470.0], [58.4, 470.0], [58.5, 480.0], [58.6, 480.0], [58.7, 480.0], [58.8, 480.0], [58.9, 480.0], [59.0, 480.0], [59.1, 480.0], [59.2, 480.0], [59.3, 480.0], [59.4, 480.0], [59.5, 483.0], [59.6, 483.0], [59.7, 483.0], [59.8, 483.0], [59.9, 483.0], [60.0, 499.0], [60.1, 499.0], [60.2, 499.0], [60.3, 499.0], [60.4, 499.0], [60.5, 500.0], [60.6, 500.0], [60.7, 500.0], [60.8, 500.0], [60.9, 500.0], [61.0, 519.0], [61.1, 519.0], [61.2, 519.0], [61.3, 519.0], [61.4, 519.0], [61.5, 522.0], [61.6, 522.0], [61.7, 522.0], [61.8, 522.0], [61.9, 522.0], [62.0, 525.0], [62.1, 525.0], [62.2, 525.0], [62.3, 525.0], [62.4, 525.0], [62.5, 528.0], [62.6, 528.0], [62.7, 528.0], [62.8, 528.0], [62.9, 528.0], [63.0, 531.0], [63.1, 531.0], [63.2, 531.0], [63.3, 531.0], [63.4, 531.0], [63.5, 535.0], [63.6, 535.0], [63.7, 535.0], [63.8, 535.0], [63.9, 535.0], [64.0, 541.0], [64.1, 541.0], [64.2, 541.0], [64.3, 541.0], [64.4, 541.0], [64.5, 553.0], [64.6, 553.0], [64.7, 553.0], [64.8, 553.0], [64.9, 553.0], [65.0, 561.0], [65.1, 561.0], [65.2, 561.0], [65.3, 561.0], [65.4, 561.0], [65.5, 568.0], [65.6, 568.0], [65.7, 568.0], [65.8, 568.0], [65.9, 568.0], [66.0, 569.0], [66.1, 569.0], [66.2, 569.0], [66.3, 569.0], [66.4, 569.0], [66.5, 570.0], [66.6, 570.0], [66.7, 570.0], [66.8, 570.0], [66.9, 570.0], [67.0, 571.0], [67.1, 571.0], [67.2, 571.0], [67.3, 571.0], [67.4, 571.0], [67.5, 578.0], [67.6, 578.0], [67.7, 578.0], [67.8, 578.0], [67.9, 578.0], [68.0, 602.0], [68.1, 602.0], [68.2, 602.0], [68.3, 602.0], [68.4, 602.0], [68.5, 618.0], [68.6, 618.0], [68.7, 618.0], [68.8, 618.0], [68.9, 618.0], [69.0, 630.0], [69.1, 630.0], [69.2, 630.0], [69.3, 630.0], [69.4, 630.0], [69.5, 636.0], [69.6, 636.0], [69.7, 636.0], [69.8, 636.0], [69.9, 636.0], [70.0, 640.0], [70.1, 640.0], [70.2, 640.0], [70.3, 640.0], [70.4, 640.0], [70.5, 659.0], [70.6, 659.0], [70.7, 659.0], [70.8, 659.0], [70.9, 659.0], [71.0, 660.0], [71.1, 660.0], [71.2, 660.0], [71.3, 660.0], [71.4, 660.0], [71.5, 664.0], [71.6, 664.0], [71.7, 664.0], [71.8, 664.0], [71.9, 664.0], [72.0, 667.0], [72.1, 667.0], [72.2, 667.0], [72.3, 667.0], [72.4, 667.0], [72.5, 720.0], [72.6, 720.0], [72.7, 720.0], [72.8, 720.0], [72.9, 720.0], [73.0, 724.0], [73.1, 724.0], [73.2, 724.0], [73.3, 724.0], [73.4, 724.0], [73.5, 730.0], [73.6, 730.0], [73.7, 730.0], [73.8, 730.0], [73.9, 730.0], [74.0, 750.0], [74.1, 750.0], [74.2, 750.0], [74.3, 750.0], [74.4, 750.0], [74.5, 758.0], [74.6, 758.0], [74.7, 758.0], [74.8, 758.0], [74.9, 758.0], [75.0, 780.0], [75.1, 780.0], [75.2, 780.0], [75.3, 780.0], [75.4, 780.0], [75.5, 780.0], [75.6, 780.0], [75.7, 780.0], [75.8, 780.0], [75.9, 780.0], [76.0, 780.0], [76.1, 780.0], [76.2, 780.0], [76.3, 780.0], [76.4, 780.0], [76.5, 820.0], [76.6, 820.0], [76.7, 820.0], [76.8, 820.0], [76.9, 820.0], [77.0, 828.0], [77.1, 828.0], [77.2, 828.0], [77.3, 828.0], [77.4, 828.0], [77.5, 830.0], [77.6, 830.0], [77.7, 830.0], [77.8, 830.0], [77.9, 830.0], [78.0, 839.0], [78.1, 839.0], [78.2, 839.0], [78.3, 839.0], [78.4, 839.0], [78.5, 850.0], [78.6, 850.0], [78.7, 850.0], [78.8, 850.0], [78.9, 850.0], [79.0, 859.0], [79.1, 859.0], [79.2, 859.0], [79.3, 859.0], [79.4, 859.0], [79.5, 860.0], [79.6, 860.0], [79.7, 860.0], [79.8, 860.0], [79.9, 860.0], [80.0, 869.0], [80.1, 869.0], [80.2, 869.0], [80.3, 869.0], [80.4, 869.0], [80.5, 920.0], [80.6, 920.0], [80.7, 920.0], [80.8, 920.0], [80.9, 920.0], [81.0, 960.0], [81.1, 960.0], [81.2, 960.0], [81.3, 960.0], [81.4, 960.0], [81.5, 969.0], [81.6, 969.0], [81.7, 969.0], [81.8, 969.0], [81.9, 969.0], [82.0, 993.0], [82.1, 993.0], [82.2, 993.0], [82.3, 993.0], [82.4, 993.0], [82.5, 1009.0], [82.6, 1009.0], [82.7, 1009.0], [82.8, 1009.0], [82.9, 1009.0], [83.0, 1041.0], [83.1, 1041.0], [83.2, 1041.0], [83.3, 1041.0], [83.4, 1041.0], [83.5, 1096.0], [83.6, 1096.0], [83.7, 1096.0], [83.8, 1096.0], [83.9, 1096.0], [84.0, 1164.0], [84.1, 1164.0], [84.2, 1164.0], [84.3, 1164.0], [84.4, 1164.0], [84.5, 1175.0], [84.6, 1175.0], [84.7, 1175.0], [84.8, 1175.0], [84.9, 1175.0], [85.0, 1190.0], [85.1, 1190.0], [85.2, 1190.0], [85.3, 1190.0], [85.4, 1190.0], [85.5, 1218.0], [85.6, 1218.0], [85.7, 1218.0], [85.8, 1218.0], [85.9, 1218.0], [86.0, 1245.0], [86.1, 1245.0], [86.2, 1245.0], [86.3, 1245.0], [86.4, 1245.0], [86.5, 1383.0], [86.6, 1383.0], [86.7, 1383.0], [86.8, 1383.0], [86.9, 1383.0], [87.0, 1534.0], [87.1, 1534.0], [87.2, 1534.0], [87.3, 1534.0], [87.4, 1534.0], [87.5, 1642.0], [87.6, 1642.0], [87.7, 1642.0], [87.8, 1642.0], [87.9, 1642.0], [88.0, 1700.0], [88.1, 1700.0], [88.2, 1700.0], [88.3, 1700.0], [88.4, 1700.0], [88.5, 1749.0], [88.6, 1749.0], [88.7, 1749.0], [88.8, 1749.0], [88.9, 1749.0], [89.0, 1760.0], [89.1, 1760.0], [89.2, 1760.0], [89.3, 1760.0], [89.4, 1760.0], [89.5, 1784.0], [89.6, 1784.0], [89.7, 1784.0], [89.8, 1784.0], [89.9, 1784.0], [90.0, 1879.0], [90.1, 1879.0], [90.2, 1879.0], [90.3, 1879.0], [90.4, 1879.0], [90.5, 1920.0], [90.6, 1920.0], [90.7, 1920.0], [90.8, 1920.0], [90.9, 1920.0], [91.0, 1928.0], [91.1, 1928.0], [91.2, 1928.0], [91.3, 1928.0], [91.4, 1928.0], [91.5, 1938.0], [91.6, 1938.0], [91.7, 1938.0], [91.8, 1938.0], [91.9, 1938.0], [92.0, 1952.0], [92.1, 1952.0], [92.2, 1952.0], [92.3, 1952.0], [92.4, 1952.0], [92.5, 1958.0], [92.6, 1958.0], [92.7, 1958.0], [92.8, 1958.0], [92.9, 1958.0], [93.0, 2033.0], [93.1, 2033.0], [93.2, 2033.0], [93.3, 2033.0], [93.4, 2033.0], [93.5, 2059.0], [93.6, 2059.0], [93.7, 2059.0], [93.8, 2059.0], [93.9, 2059.0], [94.0, 2218.0], [94.1, 2218.0], [94.2, 2218.0], [94.3, 2218.0], [94.4, 2218.0], [94.5, 2240.0], [94.6, 2240.0], [94.7, 2240.0], [94.8, 2240.0], [94.9, 2240.0], [95.0, 2308.0], [95.1, 2308.0], [95.2, 2308.0], [95.3, 2308.0], [95.4, 2308.0], [95.5, 2544.0], [95.6, 2544.0], [95.7, 2544.0], [95.8, 2544.0], [95.9, 2544.0], [96.0, 2911.0], [96.1, 2911.0], [96.2, 2911.0], [96.3, 2911.0], [96.4, 2911.0], [96.5, 2998.0], [96.6, 2998.0], [96.7, 2998.0], [96.8, 2998.0], [96.9, 2998.0], [97.0, 3049.0], [97.1, 3049.0], [97.2, 3049.0], [97.3, 3049.0], [97.4, 3049.0], [97.5, 3155.0], [97.6, 3155.0], [97.7, 3155.0], [97.8, 3155.0], [97.9, 3155.0], [98.0, 3200.0], [98.1, 3200.0], [98.2, 3200.0], [98.3, 3200.0], [98.4, 3200.0], [98.5, 3980.0], [98.6, 3980.0], [98.7, 3980.0], [98.8, 3980.0], [98.9, 3980.0], [99.0, 4183.0], [99.1, 4183.0], [99.2, 4183.0], [99.3, 4183.0], [99.4, 4183.0], [99.5, 4632.0], [99.6, 4632.0], [99.7, 4632.0], [99.8, 4632.0], [99.9, 4632.0]], "isOverall": false, "label": "GET Buyer order ID", "isController": false}, {"data": [[0.0, 120.0], [0.1, 120.0], [0.2, 120.0], [0.3, 120.0], [0.4, 120.0], [0.5, 129.0], [0.6, 129.0], [0.7, 129.0], [0.8, 129.0], [0.9, 129.0], [1.0, 132.0], [1.1, 132.0], [1.2, 132.0], [1.3, 132.0], [1.4, 132.0], [1.5, 133.0], [1.6, 133.0], [1.7, 133.0], [1.8, 133.0], [1.9, 133.0], [2.0, 134.0], [2.1, 134.0], [2.2, 134.0], [2.3, 134.0], [2.4, 134.0], [2.5, 138.0], [2.6, 138.0], [2.7, 138.0], [2.8, 138.0], [2.9, 138.0], [3.0, 139.0], [3.1, 139.0], [3.2, 139.0], [3.3, 139.0], [3.4, 139.0], [3.5, 149.0], [3.6, 149.0], [3.7, 149.0], [3.8, 149.0], [3.9, 149.0], [4.0, 149.0], [4.1, 149.0], [4.2, 149.0], [4.3, 149.0], [4.4, 149.0], [4.5, 159.0], [4.6, 159.0], [4.7, 159.0], [4.8, 159.0], [4.9, 159.0], [5.0, 160.0], [5.1, 160.0], [5.2, 160.0], [5.3, 160.0], [5.4, 160.0], [5.5, 170.0], [5.6, 170.0], [5.7, 170.0], [5.8, 170.0], [5.9, 170.0], [6.0, 171.0], [6.1, 171.0], [6.2, 171.0], [6.3, 171.0], [6.4, 171.0], [6.5, 177.0], [6.6, 177.0], [6.7, 177.0], [6.8, 177.0], [6.9, 177.0], [7.0, 180.0], [7.1, 180.0], [7.2, 180.0], [7.3, 180.0], [7.4, 180.0], [7.5, 191.0], [7.6, 191.0], [7.7, 191.0], [7.8, 191.0], [7.9, 191.0], [8.0, 195.0], [8.1, 195.0], [8.2, 195.0], [8.3, 195.0], [8.4, 195.0], [8.5, 200.0], [8.6, 200.0], [8.7, 200.0], [8.8, 200.0], [8.9, 200.0], [9.0, 201.0], [9.1, 201.0], [9.2, 201.0], [9.3, 201.0], [9.4, 201.0], [9.5, 207.0], [9.6, 207.0], [9.7, 207.0], [9.8, 207.0], [9.9, 207.0], [10.0, 209.0], [10.1, 209.0], [10.2, 209.0], [10.3, 209.0], [10.4, 209.0], [10.5, 209.0], [10.6, 209.0], [10.7, 209.0], [10.8, 209.0], [10.9, 209.0], [11.0, 211.0], [11.1, 211.0], [11.2, 211.0], [11.3, 211.0], [11.4, 211.0], [11.5, 224.0], [11.6, 224.0], [11.7, 224.0], [11.8, 224.0], [11.9, 224.0], [12.0, 230.0], [12.1, 230.0], [12.2, 230.0], [12.3, 230.0], [12.4, 230.0], [12.5, 235.0], [12.6, 235.0], [12.7, 235.0], [12.8, 235.0], [12.9, 235.0], [13.0, 236.0], [13.1, 236.0], [13.2, 236.0], [13.3, 236.0], [13.4, 236.0], [13.5, 239.0], [13.6, 239.0], [13.7, 239.0], [13.8, 239.0], [13.9, 239.0], [14.0, 244.0], [14.1, 244.0], [14.2, 244.0], [14.3, 244.0], [14.4, 244.0], [14.5, 254.0], [14.6, 254.0], [14.7, 254.0], [14.8, 254.0], [14.9, 254.0], [15.0, 254.0], [15.1, 254.0], [15.2, 254.0], [15.3, 254.0], [15.4, 254.0], [15.5, 260.0], [15.6, 260.0], [15.7, 260.0], [15.8, 260.0], [15.9, 260.0], [16.0, 264.0], [16.1, 264.0], [16.2, 264.0], [16.3, 264.0], [16.4, 264.0], [16.5, 264.0], [16.6, 264.0], [16.7, 264.0], [16.8, 264.0], [16.9, 264.0], [17.0, 265.0], [17.1, 265.0], [17.2, 265.0], [17.3, 265.0], [17.4, 265.0], [17.5, 266.0], [17.6, 266.0], [17.7, 266.0], [17.8, 266.0], [17.9, 266.0], [18.0, 269.0], [18.1, 269.0], [18.2, 269.0], [18.3, 269.0], [18.4, 269.0], [18.5, 269.0], [18.6, 269.0], [18.7, 269.0], [18.8, 269.0], [18.9, 269.0], [19.0, 274.0], [19.1, 274.0], [19.2, 274.0], [19.3, 274.0], [19.4, 274.0], [19.5, 280.0], [19.6, 280.0], [19.7, 280.0], [19.8, 280.0], [19.9, 280.0], [20.0, 283.0], [20.1, 283.0], [20.2, 283.0], [20.3, 283.0], [20.4, 283.0], [20.5, 289.0], [20.6, 289.0], [20.7, 289.0], [20.8, 289.0], [20.9, 289.0], [21.0, 291.0], [21.1, 291.0], [21.2, 291.0], [21.3, 291.0], [21.4, 291.0], [21.5, 294.0], [21.6, 294.0], [21.7, 294.0], [21.8, 294.0], [21.9, 294.0], [22.0, 300.0], [22.1, 300.0], [22.2, 300.0], [22.3, 300.0], [22.4, 300.0], [22.5, 300.0], [22.6, 300.0], [22.7, 300.0], [22.8, 300.0], [22.9, 300.0], [23.0, 302.0], [23.1, 302.0], [23.2, 302.0], [23.3, 302.0], [23.4, 302.0], [23.5, 305.0], [23.6, 305.0], [23.7, 305.0], [23.8, 305.0], [23.9, 305.0], [24.0, 306.0], [24.1, 306.0], [24.2, 306.0], [24.3, 306.0], [24.4, 306.0], [24.5, 313.0], [24.6, 313.0], [24.7, 313.0], [24.8, 313.0], [24.9, 313.0], [25.0, 319.0], [25.1, 319.0], [25.2, 319.0], [25.3, 319.0], [25.4, 319.0], [25.5, 320.0], [25.6, 320.0], [25.7, 320.0], [25.8, 320.0], [25.9, 320.0], [26.0, 330.0], [26.1, 330.0], [26.2, 330.0], [26.3, 330.0], [26.4, 330.0], [26.5, 330.0], [26.6, 330.0], [26.7, 330.0], [26.8, 330.0], [26.9, 330.0], [27.0, 330.0], [27.1, 330.0], [27.2, 330.0], [27.3, 330.0], [27.4, 330.0], [27.5, 333.0], [27.6, 333.0], [27.7, 333.0], [27.8, 333.0], [27.9, 333.0], [28.0, 337.0], [28.1, 337.0], [28.2, 337.0], [28.3, 337.0], [28.4, 337.0], [28.5, 338.0], [28.6, 338.0], [28.7, 338.0], [28.8, 338.0], [28.9, 338.0], [29.0, 339.0], [29.1, 339.0], [29.2, 339.0], [29.3, 339.0], [29.4, 339.0], [29.5, 341.0], [29.6, 341.0], [29.7, 341.0], [29.8, 341.0], [29.9, 341.0], [30.0, 341.0], [30.1, 341.0], [30.2, 341.0], [30.3, 341.0], [30.4, 341.0], [30.5, 345.0], [30.6, 345.0], [30.7, 345.0], [30.8, 345.0], [30.9, 345.0], [31.0, 347.0], [31.1, 347.0], [31.2, 347.0], [31.3, 347.0], [31.4, 347.0], [31.5, 351.0], [31.6, 351.0], [31.7, 351.0], [31.8, 351.0], [31.9, 351.0], [32.0, 351.0], [32.1, 351.0], [32.2, 351.0], [32.3, 351.0], [32.4, 351.0], [32.5, 358.0], [32.6, 358.0], [32.7, 358.0], [32.8, 358.0], [32.9, 358.0], [33.0, 358.0], [33.1, 358.0], [33.2, 358.0], [33.3, 358.0], [33.4, 358.0], [33.5, 362.0], [33.6, 362.0], [33.7, 362.0], [33.8, 362.0], [33.9, 362.0], [34.0, 365.0], [34.1, 365.0], [34.2, 365.0], [34.3, 365.0], [34.4, 365.0], [34.5, 371.0], [34.6, 371.0], [34.7, 371.0], [34.8, 371.0], [34.9, 371.0], [35.0, 374.0], [35.1, 374.0], [35.2, 374.0], [35.3, 374.0], [35.4, 374.0], [35.5, 382.0], [35.6, 382.0], [35.7, 382.0], [35.8, 382.0], [35.9, 382.0], [36.0, 382.0], [36.1, 382.0], [36.2, 382.0], [36.3, 382.0], [36.4, 382.0], [36.5, 384.0], [36.6, 384.0], [36.7, 384.0], [36.8, 384.0], [36.9, 384.0], [37.0, 385.0], [37.1, 385.0], [37.2, 385.0], [37.3, 385.0], [37.4, 385.0], [37.5, 387.0], [37.6, 387.0], [37.7, 387.0], [37.8, 387.0], [37.9, 387.0], [38.0, 393.0], [38.1, 393.0], [38.2, 393.0], [38.3, 393.0], [38.4, 393.0], [38.5, 394.0], [38.6, 394.0], [38.7, 394.0], [38.8, 394.0], [38.9, 394.0], [39.0, 400.0], [39.1, 400.0], [39.2, 400.0], [39.3, 400.0], [39.4, 400.0], [39.5, 402.0], [39.6, 402.0], [39.7, 402.0], [39.8, 402.0], [39.9, 402.0], [40.0, 406.0], [40.1, 406.0], [40.2, 406.0], [40.3, 406.0], [40.4, 406.0], [40.5, 407.0], [40.6, 407.0], [40.7, 407.0], [40.8, 407.0], [40.9, 407.0], [41.0, 409.0], [41.1, 409.0], [41.2, 409.0], [41.3, 409.0], [41.4, 409.0], [41.5, 414.0], [41.6, 414.0], [41.7, 414.0], [41.8, 414.0], [41.9, 414.0], [42.0, 415.0], [42.1, 415.0], [42.2, 415.0], [42.3, 415.0], [42.4, 415.0], [42.5, 419.0], [42.6, 419.0], [42.7, 419.0], [42.8, 419.0], [42.9, 419.0], [43.0, 420.0], [43.1, 420.0], [43.2, 420.0], [43.3, 420.0], [43.4, 420.0], [43.5, 421.0], [43.6, 421.0], [43.7, 421.0], [43.8, 421.0], [43.9, 421.0], [44.0, 421.0], [44.1, 421.0], [44.2, 421.0], [44.3, 421.0], [44.4, 421.0], [44.5, 425.0], [44.6, 425.0], [44.7, 425.0], [44.8, 425.0], [44.9, 425.0], [45.0, 427.0], [45.1, 427.0], [45.2, 427.0], [45.3, 427.0], [45.4, 427.0], [45.5, 431.0], [45.6, 431.0], [45.7, 431.0], [45.8, 431.0], [45.9, 431.0], [46.0, 435.0], [46.1, 435.0], [46.2, 435.0], [46.3, 435.0], [46.4, 435.0], [46.5, 439.0], [46.6, 439.0], [46.7, 439.0], [46.8, 439.0], [46.9, 439.0], [47.0, 439.0], [47.1, 439.0], [47.2, 439.0], [47.3, 439.0], [47.4, 439.0], [47.5, 450.0], [47.6, 450.0], [47.7, 450.0], [47.8, 450.0], [47.9, 450.0], [48.0, 450.0], [48.1, 450.0], [48.2, 450.0], [48.3, 450.0], [48.4, 450.0], [48.5, 454.0], [48.6, 454.0], [48.7, 454.0], [48.8, 454.0], [48.9, 454.0], [49.0, 465.0], [49.1, 465.0], [49.2, 465.0], [49.3, 465.0], [49.4, 465.0], [49.5, 470.0], [49.6, 470.0], [49.7, 470.0], [49.8, 470.0], [49.9, 470.0], [50.0, 470.0], [50.1, 470.0], [50.2, 470.0], [50.3, 470.0], [50.4, 470.0], [50.5, 471.0], [50.6, 471.0], [50.7, 471.0], [50.8, 471.0], [50.9, 471.0], [51.0, 482.0], [51.1, 482.0], [51.2, 482.0], [51.3, 482.0], [51.4, 482.0], [51.5, 485.0], [51.6, 485.0], [51.7, 485.0], [51.8, 485.0], [51.9, 485.0], [52.0, 491.0], [52.1, 491.0], [52.2, 491.0], [52.3, 491.0], [52.4, 491.0], [52.5, 495.0], [52.6, 495.0], [52.7, 495.0], [52.8, 495.0], [52.9, 495.0], [53.0, 504.0], [53.1, 504.0], [53.2, 504.0], [53.3, 504.0], [53.4, 504.0], [53.5, 508.0], [53.6, 508.0], [53.7, 508.0], [53.8, 508.0], [53.9, 508.0], [54.0, 512.0], [54.1, 512.0], [54.2, 512.0], [54.3, 512.0], [54.4, 512.0], [54.5, 520.0], [54.6, 520.0], [54.7, 520.0], [54.8, 520.0], [54.9, 520.0], [55.0, 520.0], [55.1, 520.0], [55.2, 520.0], [55.3, 520.0], [55.4, 520.0], [55.5, 530.0], [55.6, 530.0], [55.7, 530.0], [55.8, 530.0], [55.9, 530.0], [56.0, 539.0], [56.1, 539.0], [56.2, 539.0], [56.3, 539.0], [56.4, 539.0], [56.5, 558.0], [56.6, 558.0], [56.7, 558.0], [56.8, 558.0], [56.9, 558.0], [57.0, 565.0], [57.1, 565.0], [57.2, 565.0], [57.3, 565.0], [57.4, 565.0], [57.5, 581.0], [57.6, 581.0], [57.7, 581.0], [57.8, 581.0], [57.9, 581.0], [58.0, 584.0], [58.1, 584.0], [58.2, 584.0], [58.3, 584.0], [58.4, 584.0], [58.5, 591.0], [58.6, 591.0], [58.7, 591.0], [58.8, 591.0], [58.9, 591.0], [59.0, 598.0], [59.1, 598.0], [59.2, 598.0], [59.3, 598.0], [59.4, 598.0], [59.5, 608.0], [59.6, 608.0], [59.7, 608.0], [59.8, 608.0], [59.9, 608.0], [60.0, 614.0], [60.1, 614.0], [60.2, 614.0], [60.3, 614.0], [60.4, 614.0], [60.5, 664.0], [60.6, 664.0], [60.7, 664.0], [60.8, 664.0], [60.9, 664.0], [61.0, 664.0], [61.1, 664.0], [61.2, 664.0], [61.3, 664.0], [61.4, 664.0], [61.5, 678.0], [61.6, 678.0], [61.7, 678.0], [61.8, 678.0], [61.9, 678.0], [62.0, 681.0], [62.1, 681.0], [62.2, 681.0], [62.3, 681.0], [62.4, 681.0], [62.5, 710.0], [62.6, 710.0], [62.7, 710.0], [62.8, 710.0], [62.9, 710.0], [63.0, 719.0], [63.1, 719.0], [63.2, 719.0], [63.3, 719.0], [63.4, 719.0], [63.5, 722.0], [63.6, 722.0], [63.7, 722.0], [63.8, 722.0], [63.9, 722.0], [64.0, 724.0], [64.1, 724.0], [64.2, 724.0], [64.3, 724.0], [64.4, 724.0], [64.5, 736.0], [64.6, 736.0], [64.7, 736.0], [64.8, 736.0], [64.9, 736.0], [65.0, 749.0], [65.1, 749.0], [65.2, 749.0], [65.3, 749.0], [65.4, 749.0], [65.5, 777.0], [65.6, 777.0], [65.7, 777.0], [65.8, 777.0], [65.9, 777.0], [66.0, 828.0], [66.1, 828.0], [66.2, 828.0], [66.3, 828.0], [66.4, 828.0], [66.5, 830.0], [66.6, 830.0], [66.7, 830.0], [66.8, 830.0], [66.9, 830.0], [67.0, 832.0], [67.1, 832.0], [67.2, 832.0], [67.3, 832.0], [67.4, 832.0], [67.5, 839.0], [67.6, 839.0], [67.7, 839.0], [67.8, 839.0], [67.9, 839.0], [68.0, 841.0], [68.1, 841.0], [68.2, 841.0], [68.3, 841.0], [68.4, 841.0], [68.5, 849.0], [68.6, 849.0], [68.7, 849.0], [68.8, 849.0], [68.9, 849.0], [69.0, 855.0], [69.1, 855.0], [69.2, 855.0], [69.3, 855.0], [69.4, 855.0], [69.5, 860.0], [69.6, 860.0], [69.7, 860.0], [69.8, 860.0], [69.9, 860.0], [70.0, 870.0], [70.1, 870.0], [70.2, 870.0], [70.3, 870.0], [70.4, 870.0], [70.5, 915.0], [70.6, 915.0], [70.7, 915.0], [70.8, 915.0], [70.9, 915.0], [71.0, 940.0], [71.1, 940.0], [71.2, 940.0], [71.3, 940.0], [71.4, 940.0], [71.5, 950.0], [71.6, 950.0], [71.7, 950.0], [71.8, 950.0], [71.9, 950.0], [72.0, 968.0], [72.1, 968.0], [72.2, 968.0], [72.3, 968.0], [72.4, 968.0], [72.5, 1000.0], [72.6, 1000.0], [72.7, 1000.0], [72.8, 1000.0], [72.9, 1000.0], [73.0, 1049.0], [73.1, 1049.0], [73.2, 1049.0], [73.3, 1049.0], [73.4, 1049.0], [73.5, 1080.0], [73.6, 1080.0], [73.7, 1080.0], [73.8, 1080.0], [73.9, 1080.0], [74.0, 1081.0], [74.1, 1081.0], [74.2, 1081.0], [74.3, 1081.0], [74.4, 1081.0], [74.5, 1175.0], [74.6, 1175.0], [74.7, 1175.0], [74.8, 1175.0], [74.9, 1175.0], [75.0, 1240.0], [75.1, 1240.0], [75.2, 1240.0], [75.3, 1240.0], [75.4, 1240.0], [75.5, 1247.0], [75.6, 1247.0], [75.7, 1247.0], [75.8, 1247.0], [75.9, 1247.0], [76.0, 1262.0], [76.1, 1262.0], [76.2, 1262.0], [76.3, 1262.0], [76.4, 1262.0], [76.5, 1331.0], [76.6, 1331.0], [76.7, 1331.0], [76.8, 1331.0], [76.9, 1331.0], [77.0, 1414.0], [77.1, 1414.0], [77.2, 1414.0], [77.3, 1414.0], [77.4, 1414.0], [77.5, 1521.0], [77.6, 1521.0], [77.7, 1521.0], [77.8, 1521.0], [77.9, 1521.0], [78.0, 1608.0], [78.1, 1608.0], [78.2, 1608.0], [78.3, 1608.0], [78.4, 1608.0], [78.5, 1651.0], [78.6, 1651.0], [78.7, 1651.0], [78.8, 1651.0], [78.9, 1651.0], [79.0, 1660.0], [79.1, 1660.0], [79.2, 1660.0], [79.3, 1660.0], [79.4, 1660.0], [79.5, 1738.0], [79.6, 1738.0], [79.7, 1738.0], [79.8, 1738.0], [79.9, 1738.0], [80.0, 1741.0], [80.1, 1741.0], [80.2, 1741.0], [80.3, 1741.0], [80.4, 1741.0], [80.5, 1750.0], [80.6, 1750.0], [80.7, 1750.0], [80.8, 1750.0], [80.9, 1750.0], [81.0, 2023.0], [81.1, 2023.0], [81.2, 2023.0], [81.3, 2023.0], [81.4, 2023.0], [81.5, 2090.0], [81.6, 2090.0], [81.7, 2090.0], [81.8, 2090.0], [81.9, 2090.0], [82.0, 2170.0], [82.1, 2170.0], [82.2, 2170.0], [82.3, 2170.0], [82.4, 2170.0], [82.5, 2186.0], [82.6, 2186.0], [82.7, 2186.0], [82.8, 2186.0], [82.9, 2186.0], [83.0, 2207.0], [83.1, 2207.0], [83.2, 2207.0], [83.3, 2207.0], [83.4, 2207.0], [83.5, 2277.0], [83.6, 2277.0], [83.7, 2277.0], [83.8, 2277.0], [83.9, 2277.0], [84.0, 2290.0], [84.1, 2290.0], [84.2, 2290.0], [84.3, 2290.0], [84.4, 2290.0], [84.5, 2300.0], [84.6, 2300.0], [84.7, 2300.0], [84.8, 2300.0], [84.9, 2300.0], [85.0, 2301.0], [85.1, 2301.0], [85.2, 2301.0], [85.3, 2301.0], [85.4, 2301.0], [85.5, 2318.0], [85.6, 2318.0], [85.7, 2318.0], [85.8, 2318.0], [85.9, 2318.0], [86.0, 2352.0], [86.1, 2352.0], [86.2, 2352.0], [86.3, 2352.0], [86.4, 2352.0], [86.5, 2423.0], [86.6, 2423.0], [86.7, 2423.0], [86.8, 2423.0], [86.9, 2423.0], [87.0, 2487.0], [87.1, 2487.0], [87.2, 2487.0], [87.3, 2487.0], [87.4, 2487.0], [87.5, 2500.0], [87.6, 2500.0], [87.7, 2500.0], [87.8, 2500.0], [87.9, 2500.0], [88.0, 2551.0], [88.1, 2551.0], [88.2, 2551.0], [88.3, 2551.0], [88.4, 2551.0], [88.5, 2589.0], [88.6, 2589.0], [88.7, 2589.0], [88.8, 2589.0], [88.9, 2589.0], [89.0, 2641.0], [89.1, 2641.0], [89.2, 2641.0], [89.3, 2641.0], [89.4, 2641.0], [89.5, 2733.0], [89.6, 2733.0], [89.7, 2733.0], [89.8, 2733.0], [89.9, 2733.0], [90.0, 2747.0], [90.1, 2747.0], [90.2, 2747.0], [90.3, 2747.0], [90.4, 2747.0], [90.5, 2791.0], [90.6, 2791.0], [90.7, 2791.0], [90.8, 2791.0], [90.9, 2791.0], [91.0, 2860.0], [91.1, 2860.0], [91.2, 2860.0], [91.3, 2860.0], [91.4, 2860.0], [91.5, 3149.0], [91.6, 3149.0], [91.7, 3149.0], [91.8, 3149.0], [91.9, 3149.0], [92.0, 3160.0], [92.1, 3160.0], [92.2, 3160.0], [92.3, 3160.0], [92.4, 3160.0], [92.5, 3191.0], [92.6, 3191.0], [92.7, 3191.0], [92.8, 3191.0], [92.9, 3191.0], [93.0, 3380.0], [93.1, 3380.0], [93.2, 3380.0], [93.3, 3380.0], [93.4, 3380.0], [93.5, 3832.0], [93.6, 3832.0], [93.7, 3832.0], [93.8, 3832.0], [93.9, 3832.0], [94.0, 4021.0], [94.1, 4021.0], [94.2, 4021.0], [94.3, 4021.0], [94.4, 4021.0], [94.5, 4038.0], [94.6, 4038.0], [94.7, 4038.0], [94.8, 4038.0], [94.9, 4038.0], [95.0, 4142.0], [95.1, 4142.0], [95.2, 4142.0], [95.3, 4142.0], [95.4, 4142.0], [95.5, 4616.0], [95.6, 4616.0], [95.7, 4616.0], [95.8, 4616.0], [95.9, 4616.0], [96.0, 4899.0], [96.1, 4899.0], [96.2, 4899.0], [96.3, 4899.0], [96.4, 4899.0], [96.5, 5045.0], [96.6, 5045.0], [96.7, 5045.0], [96.8, 5045.0], [96.9, 5045.0], [97.0, 5451.0], [97.1, 5451.0], [97.2, 5451.0], [97.3, 5451.0], [97.4, 5451.0], [97.5, 6590.0], [97.6, 6590.0], [97.7, 6590.0], [97.8, 6590.0], [97.9, 6590.0], [98.0, 6723.0], [98.1, 6723.0], [98.2, 6723.0], [98.3, 6723.0], [98.4, 6723.0], [98.5, 6731.0], [98.6, 6731.0], [98.7, 6731.0], [98.8, 6731.0], [98.9, 6731.0], [99.0, 6959.0], [99.1, 6959.0], [99.2, 6959.0], [99.3, 6959.0], [99.4, 6959.0], [99.5, 8330.0], [99.6, 8330.0], [99.7, 8330.0], [99.8, 8330.0], [99.9, 8330.0]], "isOverall": false, "label": "GET Buyer order", "isController": false}, {"data": [[0.0, 136.0], [0.1, 136.0], [0.2, 136.0], [0.3, 136.0], [0.4, 136.0], [0.5, 140.0], [0.6, 140.0], [0.7, 140.0], [0.8, 140.0], [0.9, 140.0], [1.0, 141.0], [1.1, 141.0], [1.2, 141.0], [1.3, 141.0], [1.4, 141.0], [1.5, 147.0], [1.6, 147.0], [1.7, 147.0], [1.8, 147.0], [1.9, 147.0], [2.0, 150.0], [2.1, 150.0], [2.2, 150.0], [2.3, 150.0], [2.4, 150.0], [2.5, 150.0], [2.6, 150.0], [2.7, 150.0], [2.8, 150.0], [2.9, 150.0], [3.0, 159.0], [3.1, 159.0], [3.2, 159.0], [3.3, 159.0], [3.4, 159.0], [3.5, 166.0], [3.6, 166.0], [3.7, 166.0], [3.8, 166.0], [3.9, 166.0], [4.0, 170.0], [4.1, 170.0], [4.2, 170.0], [4.3, 170.0], [4.4, 170.0], [4.5, 179.0], [4.6, 179.0], [4.7, 179.0], [4.8, 179.0], [4.9, 179.0], [5.0, 193.0], [5.1, 193.0], [5.2, 193.0], [5.3, 193.0], [5.4, 193.0], [5.5, 195.0], [5.6, 195.0], [5.7, 195.0], [5.8, 195.0], [5.9, 195.0], [6.0, 199.0], [6.1, 199.0], [6.2, 199.0], [6.3, 199.0], [6.4, 199.0], [6.5, 200.0], [6.6, 200.0], [6.7, 200.0], [6.8, 200.0], [6.9, 200.0], [7.0, 204.0], [7.1, 204.0], [7.2, 204.0], [7.3, 204.0], [7.4, 204.0], [7.5, 215.0], [7.6, 215.0], [7.7, 215.0], [7.8, 215.0], [7.9, 215.0], [8.0, 218.0], [8.1, 218.0], [8.2, 218.0], [8.3, 218.0], [8.4, 218.0], [8.5, 219.0], [8.6, 219.0], [8.7, 219.0], [8.8, 219.0], [8.9, 219.0], [9.0, 219.0], [9.1, 219.0], [9.2, 219.0], [9.3, 219.0], [9.4, 219.0], [9.5, 220.0], [9.6, 220.0], [9.7, 220.0], [9.8, 220.0], [9.9, 220.0], [10.0, 220.0], [10.1, 220.0], [10.2, 220.0], [10.3, 220.0], [10.4, 220.0], [10.5, 221.0], [10.6, 221.0], [10.7, 221.0], [10.8, 221.0], [10.9, 221.0], [11.0, 222.0], [11.1, 222.0], [11.2, 222.0], [11.3, 222.0], [11.4, 222.0], [11.5, 224.0], [11.6, 224.0], [11.7, 224.0], [11.8, 224.0], [11.9, 224.0], [12.0, 228.0], [12.1, 228.0], [12.2, 228.0], [12.3, 228.0], [12.4, 228.0], [12.5, 229.0], [12.6, 229.0], [12.7, 229.0], [12.8, 229.0], [12.9, 229.0], [13.0, 229.0], [13.1, 229.0], [13.2, 229.0], [13.3, 229.0], [13.4, 229.0], [13.5, 230.0], [13.6, 230.0], [13.7, 230.0], [13.8, 230.0], [13.9, 230.0], [14.0, 235.0], [14.1, 235.0], [14.2, 235.0], [14.3, 235.0], [14.4, 235.0], [14.5, 236.0], [14.6, 236.0], [14.7, 236.0], [14.8, 236.0], [14.9, 236.0], [15.0, 237.0], [15.1, 237.0], [15.2, 237.0], [15.3, 237.0], [15.4, 237.0], [15.5, 239.0], [15.6, 239.0], [15.7, 239.0], [15.8, 239.0], [15.9, 239.0], [16.0, 240.0], [16.1, 240.0], [16.2, 240.0], [16.3, 240.0], [16.4, 240.0], [16.5, 241.0], [16.6, 241.0], [16.7, 241.0], [16.8, 241.0], [16.9, 241.0], [17.0, 250.0], [17.1, 250.0], [17.2, 250.0], [17.3, 250.0], [17.4, 250.0], [17.5, 250.0], [17.6, 250.0], [17.7, 250.0], [17.8, 250.0], [17.9, 250.0], [18.0, 250.0], [18.1, 250.0], [18.2, 250.0], [18.3, 250.0], [18.4, 250.0], [18.5, 253.0], [18.6, 253.0], [18.7, 253.0], [18.8, 253.0], [18.9, 253.0], [19.0, 254.0], [19.1, 254.0], [19.2, 254.0], [19.3, 254.0], [19.4, 254.0], [19.5, 261.0], [19.6, 261.0], [19.7, 261.0], [19.8, 261.0], [19.9, 261.0], [20.0, 263.0], [20.1, 263.0], [20.2, 263.0], [20.3, 263.0], [20.4, 263.0], [20.5, 266.0], [20.6, 266.0], [20.7, 266.0], [20.8, 266.0], [20.9, 266.0], [21.0, 270.0], [21.1, 270.0], [21.2, 270.0], [21.3, 270.0], [21.4, 270.0], [21.5, 273.0], [21.6, 273.0], [21.7, 273.0], [21.8, 273.0], [21.9, 273.0], [22.0, 276.0], [22.1, 276.0], [22.2, 276.0], [22.3, 276.0], [22.4, 276.0], [22.5, 277.0], [22.6, 277.0], [22.7, 277.0], [22.8, 277.0], [22.9, 277.0], [23.0, 279.0], [23.1, 279.0], [23.2, 279.0], [23.3, 279.0], [23.4, 279.0], [23.5, 280.0], [23.6, 280.0], [23.7, 280.0], [23.8, 280.0], [23.9, 280.0], [24.0, 280.0], [24.1, 280.0], [24.2, 280.0], [24.3, 280.0], [24.4, 280.0], [24.5, 280.0], [24.6, 280.0], [24.7, 280.0], [24.8, 280.0], [24.9, 280.0], [25.0, 282.0], [25.1, 282.0], [25.2, 282.0], [25.3, 282.0], [25.4, 282.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 283.0], [25.9, 283.0], [26.0, 287.0], [26.1, 287.0], [26.2, 287.0], [26.3, 287.0], [26.4, 287.0], [26.5, 288.0], [26.6, 288.0], [26.7, 288.0], [26.8, 288.0], [26.9, 288.0], [27.0, 290.0], [27.1, 290.0], [27.2, 290.0], [27.3, 290.0], [27.4, 290.0], [27.5, 290.0], [27.6, 290.0], [27.7, 290.0], [27.8, 290.0], [27.9, 290.0], [28.0, 292.0], [28.1, 292.0], [28.2, 292.0], [28.3, 292.0], [28.4, 292.0], [28.5, 293.0], [28.6, 293.0], [28.7, 293.0], [28.8, 293.0], [28.9, 293.0], [29.0, 294.0], [29.1, 294.0], [29.2, 294.0], [29.3, 294.0], [29.4, 294.0], [29.5, 294.0], [29.6, 294.0], [29.7, 294.0], [29.8, 294.0], [29.9, 294.0], [30.0, 295.0], [30.1, 295.0], [30.2, 295.0], [30.3, 295.0], [30.4, 295.0], [30.5, 295.0], [30.6, 295.0], [30.7, 295.0], [30.8, 295.0], [30.9, 295.0], [31.0, 300.0], [31.1, 300.0], [31.2, 300.0], [31.3, 300.0], [31.4, 300.0], [31.5, 301.0], [31.6, 301.0], [31.7, 301.0], [31.8, 301.0], [31.9, 301.0], [32.0, 301.0], [32.1, 301.0], [32.2, 301.0], [32.3, 301.0], [32.4, 301.0], [32.5, 307.0], [32.6, 307.0], [32.7, 307.0], [32.8, 307.0], [32.9, 307.0], [33.0, 307.0], [33.1, 307.0], [33.2, 307.0], [33.3, 307.0], [33.4, 307.0], [33.5, 308.0], [33.6, 308.0], [33.7, 308.0], [33.8, 308.0], [33.9, 308.0], [34.0, 310.0], [34.1, 310.0], [34.2, 310.0], [34.3, 310.0], [34.4, 310.0], [34.5, 310.0], [34.6, 310.0], [34.7, 310.0], [34.8, 310.0], [34.9, 310.0], [35.0, 312.0], [35.1, 312.0], [35.2, 312.0], [35.3, 312.0], [35.4, 312.0], [35.5, 316.0], [35.6, 316.0], [35.7, 316.0], [35.8, 316.0], [35.9, 316.0], [36.0, 316.0], [36.1, 316.0], [36.2, 316.0], [36.3, 316.0], [36.4, 316.0], [36.5, 319.0], [36.6, 319.0], [36.7, 319.0], [36.8, 319.0], [36.9, 319.0], [37.0, 320.0], [37.1, 320.0], [37.2, 320.0], [37.3, 320.0], [37.4, 320.0], [37.5, 322.0], [37.6, 322.0], [37.7, 322.0], [37.8, 322.0], [37.9, 322.0], [38.0, 324.0], [38.1, 324.0], [38.2, 324.0], [38.3, 324.0], [38.4, 324.0], [38.5, 324.0], [38.6, 324.0], [38.7, 324.0], [38.8, 324.0], [38.9, 324.0], [39.0, 326.0], [39.1, 326.0], [39.2, 326.0], [39.3, 326.0], [39.4, 326.0], [39.5, 327.0], [39.6, 327.0], [39.7, 327.0], [39.8, 327.0], [39.9, 327.0], [40.0, 329.0], [40.1, 329.0], [40.2, 329.0], [40.3, 329.0], [40.4, 329.0], [40.5, 329.0], [40.6, 329.0], [40.7, 329.0], [40.8, 329.0], [40.9, 329.0], [41.0, 329.0], [41.1, 329.0], [41.2, 329.0], [41.3, 329.0], [41.4, 329.0], [41.5, 330.0], [41.6, 330.0], [41.7, 330.0], [41.8, 330.0], [41.9, 330.0], [42.0, 330.0], [42.1, 330.0], [42.2, 330.0], [42.3, 330.0], [42.4, 330.0], [42.5, 334.0], [42.6, 334.0], [42.7, 334.0], [42.8, 334.0], [42.9, 334.0], [43.0, 334.0], [43.1, 334.0], [43.2, 334.0], [43.3, 334.0], [43.4, 334.0], [43.5, 339.0], [43.6, 339.0], [43.7, 339.0], [43.8, 339.0], [43.9, 339.0], [44.0, 340.0], [44.1, 340.0], [44.2, 340.0], [44.3, 340.0], [44.4, 340.0], [44.5, 340.0], [44.6, 340.0], [44.7, 340.0], [44.8, 340.0], [44.9, 340.0], [45.0, 341.0], [45.1, 341.0], [45.2, 341.0], [45.3, 341.0], [45.4, 341.0], [45.5, 346.0], [45.6, 346.0], [45.7, 346.0], [45.8, 346.0], [45.9, 346.0], [46.0, 349.0], [46.1, 349.0], [46.2, 349.0], [46.3, 349.0], [46.4, 349.0], [46.5, 354.0], [46.6, 354.0], [46.7, 354.0], [46.8, 354.0], [46.9, 354.0], [47.0, 359.0], [47.1, 359.0], [47.2, 359.0], [47.3, 359.0], [47.4, 359.0], [47.5, 360.0], [47.6, 360.0], [47.7, 360.0], [47.8, 360.0], [47.9, 360.0], [48.0, 360.0], [48.1, 360.0], [48.2, 360.0], [48.3, 360.0], [48.4, 360.0], [48.5, 363.0], [48.6, 363.0], [48.7, 363.0], [48.8, 363.0], [48.9, 363.0], [49.0, 366.0], [49.1, 366.0], [49.2, 366.0], [49.3, 366.0], [49.4, 366.0], [49.5, 368.0], [49.6, 368.0], [49.7, 368.0], [49.8, 368.0], [49.9, 368.0], [50.0, 368.0], [50.1, 368.0], [50.2, 368.0], [50.3, 368.0], [50.4, 368.0], [50.5, 370.0], [50.6, 370.0], [50.7, 370.0], [50.8, 370.0], [50.9, 370.0], [51.0, 370.0], [51.1, 370.0], [51.2, 370.0], [51.3, 370.0], [51.4, 370.0], [51.5, 370.0], [51.6, 370.0], [51.7, 370.0], [51.8, 370.0], [51.9, 370.0], [52.0, 373.0], [52.1, 373.0], [52.2, 373.0], [52.3, 373.0], [52.4, 373.0], [52.5, 374.0], [52.6, 374.0], [52.7, 374.0], [52.8, 374.0], [52.9, 374.0], [53.0, 380.0], [53.1, 380.0], [53.2, 380.0], [53.3, 380.0], [53.4, 380.0], [53.5, 380.0], [53.6, 380.0], [53.7, 380.0], [53.8, 380.0], [53.9, 380.0], [54.0, 382.0], [54.1, 382.0], [54.2, 382.0], [54.3, 382.0], [54.4, 382.0], [54.5, 388.0], [54.6, 388.0], [54.7, 388.0], [54.8, 388.0], [54.9, 388.0], [55.0, 389.0], [55.1, 389.0], [55.2, 389.0], [55.3, 389.0], [55.4, 389.0], [55.5, 390.0], [55.6, 390.0], [55.7, 390.0], [55.8, 390.0], [55.9, 390.0], [56.0, 394.0], [56.1, 394.0], [56.2, 394.0], [56.3, 394.0], [56.4, 394.0], [56.5, 397.0], [56.6, 397.0], [56.7, 397.0], [56.8, 397.0], [56.9, 397.0], [57.0, 398.0], [57.1, 398.0], [57.2, 398.0], [57.3, 398.0], [57.4, 398.0], [57.5, 399.0], [57.6, 399.0], [57.7, 399.0], [57.8, 399.0], [57.9, 399.0], [58.0, 404.0], [58.1, 404.0], [58.2, 404.0], [58.3, 404.0], [58.4, 404.0], [58.5, 405.0], [58.6, 405.0], [58.7, 405.0], [58.8, 405.0], [58.9, 405.0], [59.0, 409.0], [59.1, 409.0], [59.2, 409.0], [59.3, 409.0], [59.4, 409.0], [59.5, 410.0], [59.6, 410.0], [59.7, 410.0], [59.8, 410.0], [59.9, 410.0], [60.0, 410.0], [60.1, 410.0], [60.2, 410.0], [60.3, 410.0], [60.4, 410.0], [60.5, 429.0], [60.6, 429.0], [60.7, 429.0], [60.8, 429.0], [60.9, 429.0], [61.0, 429.0], [61.1, 429.0], [61.2, 429.0], [61.3, 429.0], [61.4, 429.0], [61.5, 433.0], [61.6, 433.0], [61.7, 433.0], [61.8, 433.0], [61.9, 433.0], [62.0, 438.0], [62.1, 438.0], [62.2, 438.0], [62.3, 438.0], [62.4, 438.0], [62.5, 440.0], [62.6, 440.0], [62.7, 440.0], [62.8, 440.0], [62.9, 440.0], [63.0, 441.0], [63.1, 441.0], [63.2, 441.0], [63.3, 441.0], [63.4, 441.0], [63.5, 443.0], [63.6, 443.0], [63.7, 443.0], [63.8, 443.0], [63.9, 443.0], [64.0, 446.0], [64.1, 446.0], [64.2, 446.0], [64.3, 446.0], [64.4, 446.0], [64.5, 448.0], [64.6, 448.0], [64.7, 448.0], [64.8, 448.0], [64.9, 448.0], [65.0, 450.0], [65.1, 450.0], [65.2, 450.0], [65.3, 450.0], [65.4, 450.0], [65.5, 450.0], [65.6, 450.0], [65.7, 450.0], [65.8, 450.0], [65.9, 450.0], [66.0, 454.0], [66.1, 454.0], [66.2, 454.0], [66.3, 454.0], [66.4, 454.0], [66.5, 459.0], [66.6, 459.0], [66.7, 459.0], [66.8, 459.0], [66.9, 459.0], [67.0, 460.0], [67.1, 460.0], [67.2, 460.0], [67.3, 460.0], [67.4, 460.0], [67.5, 464.0], [67.6, 464.0], [67.7, 464.0], [67.8, 464.0], [67.9, 464.0], [68.0, 465.0], [68.1, 465.0], [68.2, 465.0], [68.3, 465.0], [68.4, 465.0], [68.5, 470.0], [68.6, 470.0], [68.7, 470.0], [68.8, 470.0], [68.9, 470.0], [69.0, 471.0], [69.1, 471.0], [69.2, 471.0], [69.3, 471.0], [69.4, 471.0], [69.5, 479.0], [69.6, 479.0], [69.7, 479.0], [69.8, 479.0], [69.9, 479.0], [70.0, 482.0], [70.1, 482.0], [70.2, 482.0], [70.3, 482.0], [70.4, 482.0], [70.5, 490.0], [70.6, 490.0], [70.7, 490.0], [70.8, 490.0], [70.9, 490.0], [71.0, 490.0], [71.1, 490.0], [71.2, 490.0], [71.3, 490.0], [71.4, 490.0], [71.5, 500.0], [71.6, 500.0], [71.7, 500.0], [71.8, 500.0], [71.9, 500.0], [72.0, 509.0], [72.1, 509.0], [72.2, 509.0], [72.3, 509.0], [72.4, 509.0], [72.5, 530.0], [72.6, 530.0], [72.7, 530.0], [72.8, 530.0], [72.9, 530.0], [73.0, 531.0], [73.1, 531.0], [73.2, 531.0], [73.3, 531.0], [73.4, 531.0], [73.5, 539.0], [73.6, 539.0], [73.7, 539.0], [73.8, 539.0], [73.9, 539.0], [74.0, 539.0], [74.1, 539.0], [74.2, 539.0], [74.3, 539.0], [74.4, 539.0], [74.5, 540.0], [74.6, 540.0], [74.7, 540.0], [74.8, 540.0], [74.9, 540.0], [75.0, 543.0], [75.1, 543.0], [75.2, 543.0], [75.3, 543.0], [75.4, 543.0], [75.5, 554.0], [75.6, 554.0], [75.7, 554.0], [75.8, 554.0], [75.9, 554.0], [76.0, 562.0], [76.1, 562.0], [76.2, 562.0], [76.3, 562.0], [76.4, 562.0], [76.5, 569.0], [76.6, 569.0], [76.7, 569.0], [76.8, 569.0], [76.9, 569.0], [77.0, 574.0], [77.1, 574.0], [77.2, 574.0], [77.3, 574.0], [77.4, 574.0], [77.5, 574.0], [77.6, 574.0], [77.7, 574.0], [77.8, 574.0], [77.9, 574.0], [78.0, 580.0], [78.1, 580.0], [78.2, 580.0], [78.3, 580.0], [78.4, 580.0], [78.5, 599.0], [78.6, 599.0], [78.7, 599.0], [78.8, 599.0], [78.9, 599.0], [79.0, 607.0], [79.1, 607.0], [79.2, 607.0], [79.3, 607.0], [79.4, 607.0], [79.5, 609.0], [79.6, 609.0], [79.7, 609.0], [79.8, 609.0], [79.9, 609.0], [80.0, 611.0], [80.1, 611.0], [80.2, 611.0], [80.3, 611.0], [80.4, 611.0], [80.5, 615.0], [80.6, 615.0], [80.7, 615.0], [80.8, 615.0], [80.9, 615.0], [81.0, 621.0], [81.1, 621.0], [81.2, 621.0], [81.3, 621.0], [81.4, 621.0], [81.5, 636.0], [81.6, 636.0], [81.7, 636.0], [81.8, 636.0], [81.9, 636.0], [82.0, 640.0], [82.1, 640.0], [82.2, 640.0], [82.3, 640.0], [82.4, 640.0], [82.5, 644.0], [82.6, 644.0], [82.7, 644.0], [82.8, 644.0], [82.9, 644.0], [83.0, 674.0], [83.1, 674.0], [83.2, 674.0], [83.3, 674.0], [83.4, 674.0], [83.5, 676.0], [83.6, 676.0], [83.7, 676.0], [83.8, 676.0], [83.9, 676.0], [84.0, 679.0], [84.1, 679.0], [84.2, 679.0], [84.3, 679.0], [84.4, 679.0], [84.5, 680.0], [84.6, 680.0], [84.7, 680.0], [84.8, 680.0], [84.9, 680.0], [85.0, 696.0], [85.1, 696.0], [85.2, 696.0], [85.3, 696.0], [85.4, 696.0], [85.5, 709.0], [85.6, 709.0], [85.7, 709.0], [85.8, 709.0], [85.9, 709.0], [86.0, 709.0], [86.1, 709.0], [86.2, 709.0], [86.3, 709.0], [86.4, 709.0], [86.5, 726.0], [86.6, 726.0], [86.7, 726.0], [86.8, 726.0], [86.9, 726.0], [87.0, 770.0], [87.1, 770.0], [87.2, 770.0], [87.3, 770.0], [87.4, 770.0], [87.5, 770.0], [87.6, 770.0], [87.7, 770.0], [87.8, 770.0], [87.9, 770.0], [88.0, 786.0], [88.1, 786.0], [88.2, 786.0], [88.3, 786.0], [88.4, 786.0], [88.5, 816.0], [88.6, 816.0], [88.7, 816.0], [88.8, 816.0], [88.9, 816.0], [89.0, 850.0], [89.1, 850.0], [89.2, 850.0], [89.3, 850.0], [89.4, 850.0], [89.5, 1191.0], [89.6, 1191.0], [89.7, 1191.0], [89.8, 1191.0], [89.9, 1191.0], [90.0, 1315.0], [90.1, 1315.0], [90.2, 1315.0], [90.3, 1315.0], [90.4, 1315.0], [90.5, 1386.0], [90.6, 1386.0], [90.7, 1386.0], [90.8, 1386.0], [90.9, 1386.0], [91.0, 1546.0], [91.1, 1546.0], [91.2, 1546.0], [91.3, 1546.0], [91.4, 1546.0], [91.5, 1567.0], [91.6, 1567.0], [91.7, 1567.0], [91.8, 1567.0], [91.9, 1567.0], [92.0, 1600.0], [92.1, 1600.0], [92.2, 1600.0], [92.3, 1600.0], [92.4, 1600.0], [92.5, 1659.0], [92.6, 1659.0], [92.7, 1659.0], [92.8, 1659.0], [92.9, 1659.0], [93.0, 1750.0], [93.1, 1750.0], [93.2, 1750.0], [93.3, 1750.0], [93.4, 1750.0], [93.5, 1779.0], [93.6, 1779.0], [93.7, 1779.0], [93.8, 1779.0], [93.9, 1779.0], [94.0, 1833.0], [94.1, 1833.0], [94.2, 1833.0], [94.3, 1833.0], [94.4, 1833.0], [94.5, 1863.0], [94.6, 1863.0], [94.7, 1863.0], [94.8, 1863.0], [94.9, 1863.0], [95.0, 1900.0], [95.1, 1900.0], [95.2, 1900.0], [95.3, 1900.0], [95.4, 1900.0], [95.5, 1929.0], [95.6, 1929.0], [95.7, 1929.0], [95.8, 1929.0], [95.9, 1929.0], [96.0, 1960.0], [96.1, 1960.0], [96.2, 1960.0], [96.3, 1960.0], [96.4, 1960.0], [96.5, 2344.0], [96.6, 2344.0], [96.7, 2344.0], [96.8, 2344.0], [96.9, 2344.0], [97.0, 2461.0], [97.1, 2461.0], [97.2, 2461.0], [97.3, 2461.0], [97.4, 2461.0], [97.5, 2644.0], [97.6, 2644.0], [97.7, 2644.0], [97.8, 2644.0], [97.9, 2644.0], [98.0, 2689.0], [98.1, 2689.0], [98.2, 2689.0], [98.3, 2689.0], [98.4, 2689.0], [98.5, 2760.0], [98.6, 2760.0], [98.7, 2760.0], [98.8, 2760.0], [98.9, 2760.0], [99.0, 5000.0], [99.1, 5000.0], [99.2, 5000.0], [99.3, 5000.0], [99.4, 5000.0], [99.5, 6192.0], [99.6, 6192.0], [99.7, 6192.0], [99.8, 6192.0], [99.9, 6192.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 54.0, "series": [{"data": [[600.0, 18.0], [700.0, 16.0], [800.0, 8.0], [900.0, 8.0], [1000.0, 6.0], [1100.0, 4.0], [1200.0, 1.0], [1300.0, 9.0], [1400.0, 6.0], [1500.0, 7.0], [1600.0, 2.0], [100.0, 11.0], [1700.0, 3.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3100.0, 3.0], [200.0, 11.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [4100.0, 1.0], [4200.0, 1.0], [4500.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [300.0, 20.0], [4700.0, 1.0], [5000.0, 1.0], [400.0, 19.0], [6400.0, 1.0], [500.0, 18.0]], "isOverall": false, "label": "PUT Buyer order", "isController": false}, {"data": [[0.0, 14.0], [600.0, 3.0], [700.0, 11.0], [200.0, 41.0], [800.0, 1.0], [1000.0, 3.0], [1100.0, 4.0], [300.0, 50.0], [1200.0, 2.0], [1300.0, 1.0], [1500.0, 1.0], [400.0, 23.0], [100.0, 27.0], [1900.0, 1.0], [500.0, 18.0]], "isOverall": false, "label": "PUT Buy order ID", "isController": false}, {"data": [[600.0, 9.0], [700.0, 8.0], [800.0, 8.0], [900.0, 4.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 1.0], [1500.0, 1.0], [100.0, 30.0], [1600.0, 1.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 5.0], [2000.0, 2.0], [2200.0, 2.0], [2300.0, 1.0], [2500.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 38.0], [3200.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [4600.0, 1.0], [300.0, 33.0], [400.0, 20.0], [500.0, 15.0]], "isOverall": false, "label": "GET Buyer order ID", "isController": false}, {"data": [[8300.0, 1.0], [600.0, 6.0], [700.0, 7.0], [800.0, 9.0], [900.0, 4.0], [1000.0, 4.0], [1100.0, 1.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 3.0], [100.0, 17.0], [1700.0, 3.0], [2000.0, 2.0], [2100.0, 2.0], [2300.0, 4.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 3.0], [3100.0, 3.0], [200.0, 27.0], [3300.0, 1.0], [3800.0, 1.0], [4000.0, 2.0], [4100.0, 1.0], [4600.0, 1.0], [300.0, 34.0], [4800.0, 1.0], [5000.0, 1.0], [5400.0, 1.0], [400.0, 28.0], [6500.0, 1.0], [6700.0, 2.0], [6900.0, 1.0], [500.0, 13.0]], "isOverall": false, "label": "GET Buyer order", "isController": false}, {"data": [[2300.0, 1.0], [600.0, 13.0], [2400.0, 1.0], [2600.0, 2.0], [700.0, 6.0], [2700.0, 1.0], [200.0, 49.0], [800.0, 2.0], [1100.0, 1.0], [300.0, 54.0], [5000.0, 1.0], [1300.0, 2.0], [6100.0, 1.0], [1500.0, 2.0], [400.0, 27.0], [1600.0, 2.0], [100.0, 13.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 3.0], [500.0, 15.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 91.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 527.0, "series": [{"data": [[0.0, 527.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 183.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 91.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 199.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.4285714285714286, "minX": 1.69597338E12, "maxY": 18.210473313192367, "series": [{"data": [[1.69597344E12, 1.4285714285714286], [1.69597338E12, 18.210473313192367]], "isOverall": false, "label": "Buyer Order", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69597344E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.0, "maxY": 6440.0, "series": [{"data": [[8.0, 2404.5], [9.0, 6440.0], [10.0, 1067.3333333333333], [11.0, 229.6], [12.0, 4231.0], [3.0, 442.5], [13.0, 1121.0], [14.0, 242.0], [15.0, 298.0], [16.0, 920.0], [4.0, 139.0], [1.0, 1085.0], [17.0, 1369.5], [18.0, 2557.5], [19.0, 922.4], [20.0, 1066.5316455696207], [7.0, 1269.4]], "isOverall": false, "label": "PUT Buyer order", "isController": false}, {"data": [[18.380000000000006, 1107.730000000001]], "isOverall": false, "label": "PUT Buyer order-Aggregated", "isController": false}, {"data": [[8.0, 121.0], [2.0, 307.0], [9.0, 123.5], [10.0, 74.5], [11.0, 187.83333333333331], [12.0, 1109.0], [3.0, 115.0], [13.0, 455.5], [14.0, 187.5], [15.0, 279.0], [16.0, 1149.0], [4.0, 156.66666666666666], [1.0, 280.0], [17.0, 160.6], [18.0, 190.83333333333331], [19.0, 178.0], [20.0, 455.095238095238], [5.0, 72.0], [6.0, 77.0], [7.0, 210.5]], "isOverall": false, "label": "PUT Buy order ID", "isController": false}, {"data": [[17.789999999999992, 392.0849999999999]], "isOverall": false, "label": "PUT Buy order ID-Aggregated", "isController": false}, {"data": [[8.0, 562.6], [2.0, 4183.0], [9.0, 145.0], [10.0, 154.33333333333334], [11.0, 197.5], [3.0, 149.5], [14.0, 1179.777777777778], [4.0, 359.3333333333333], [1.0, 869.0], [17.0, 299.3333333333333], [18.0, 559.5714285714286], [19.0, 234.5], [20.0, 739.4765100671144], [5.0, 119.0], [7.0, 370.75]], "isOverall": false, "label": "GET Buyer order ID", "isController": false}, {"data": [[17.855000000000004, 698.0950000000006]], "isOverall": false, "label": "GET Buyer order ID-Aggregated", "isController": false}, {"data": [[8.0, 1090.4], [10.0, 4628.333333333334], [11.0, 202.5], [3.0, 133.0], [13.0, 170.0], [14.0, 1279.5], [15.0, 264.0], [4.0, 1645.3333333333335], [1.0, 129.0], [17.0, 2300.25], [18.0, 1261.222222222222], [19.0, 691.6666666666667], [20.0, 1046.496688741722], [5.0, 736.0], [7.0, 1057.25]], "isOverall": false, "label": "GET Buyer order", "isController": false}, {"data": [[18.034999999999993, 1098.0350000000003]], "isOverall": false, "label": "GET Buyer order-Aggregated", "isController": false}, {"data": [[8.0, 174.5], [2.0, 195.0], [9.0, 159.0], [10.0, 228.0], [11.0, 432.75], [3.0, 349.0], [13.0, 433.0], [14.0, 219.0], [15.0, 371.5], [16.0, 221.0], [4.0, 1455.0], [17.0, 255.25], [18.0, 219.5], [19.0, 678.0], [20.0, 616.7169811320756], [6.0, 266.0], [7.0, 653.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[18.405000000000012, 577.3599999999999]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 40.8, "minX": 1.69597338E12, "maxY": 33296.03333333333, "series": [{"data": [[1.69597344E12, 206.75], [1.69597338E12, 33296.03333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69597344E12, 40.8], [1.69597338E12, 5725.866666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69597344E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 129.0, "minX": 1.69597338E12, "maxY": 2526.0, "series": [{"data": [[1.69597344E12, 1085.0], [1.69597338E12, 1107.8442211055285]], "isOverall": false, "label": "PUT Buyer order", "isController": false}, {"data": [[1.69597344E12, 293.5], [1.69597338E12, 393.080808080808]], "isOverall": false, "label": "PUT Buy order ID", "isController": false}, {"data": [[1.69597344E12, 2526.0], [1.69597338E12, 679.6313131313137]], "isOverall": false, "label": "GET Buyer order ID", "isController": false}, {"data": [[1.69597344E12, 129.0], [1.69597338E12, 1102.9045226130656]], "isOverall": false, "label": "GET Buyer order", "isController": false}, {"data": [[1.69597344E12, 195.0], [1.69597338E12, 579.2814070351758]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69597344E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 129.0, "minX": 1.69597338E12, "maxY": 2526.0, "series": [{"data": [[1.69597344E12, 1085.0], [1.69597338E12, 1107.6130653266327]], "isOverall": false, "label": "PUT Buyer order", "isController": false}, {"data": [[1.69597344E12, 293.5], [1.69597338E12, 393.07575757575745]], "isOverall": false, "label": "PUT Buy order ID", "isController": false}, {"data": [[1.69597344E12, 2526.0], [1.69597338E12, 679.6161616161617]], "isOverall": false, "label": "GET Buyer order ID", "isController": false}, {"data": [[1.69597344E12, 129.0], [1.69597338E12, 1102.7035175879405]], "isOverall": false, "label": "GET Buyer order", "isController": false}, {"data": [[1.69597344E12, 195.0], [1.69597338E12, 579.0653266331659]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69597344E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69597338E12, "maxY": 1995.5, "series": [{"data": [[1.69597344E12, 538.0], [1.69597338E12, 322.63819095477396]], "isOverall": false, "label": "PUT Buyer order", "isController": false}, {"data": [[1.69597344E12, 0.0], [1.69597338E12, 0.0]], "isOverall": false, "label": "PUT Buy order ID", "isController": false}, {"data": [[1.69597344E12, 1995.5], [1.69597338E12, 222.2979797979798]], "isOverall": false, "label": "GET Buyer order ID", "isController": false}, {"data": [[1.69597344E12, 50.0], [1.69597338E12, 337.7487437185931]], "isOverall": false, "label": "GET Buyer order", "isController": false}, {"data": [[1.69597344E12, 0.0], [1.69597338E12, 50.71356783919601]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69597344E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.69597338E12, "maxY": 8330.0, "series": [{"data": [[1.69597344E12, 4183.0], [1.69597338E12, 8330.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69597344E12, 129.0], [1.69597338E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69597344E12, 4183.0], [1.69597338E12, 1675.999999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69597344E12, 4183.0], [1.69597338E12, 5061.239999999985]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69597344E12, 293.5], [1.69597338E12, 384.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.69597344E12, 4183.0], [1.69597338E12, 2466.199999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69597344E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 120.0, "minX": 2.0, "maxY": 3109.0, "series": [{"data": [[2.0, 280.0], [33.0, 407.0], [32.0, 345.0], [9.0, 195.0], [11.0, 371.5], [12.0, 120.0], [3.0, 307.0], [14.0, 780.0], [16.0, 578.0], [17.0, 454.5], [19.0, 509.0], [20.0, 404.0], [5.0, 239.0], [21.0, 344.5], [22.0, 382.0], [23.0, 240.0], [24.0, 384.5], [25.0, 440.5], [26.0, 397.0], [27.0, 423.5], [28.0, 338.0], [7.0, 222.5], [31.0, 373.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 773.0], [32.0, 593.0], [2.0, 1085.0], [9.0, 721.0], [11.0, 676.0], [12.0, 1041.0], [14.0, 3109.0], [16.0, 682.0], [17.0, 813.0], [19.0, 637.5], [20.0, 790.0], [21.0, 752.0], [22.0, 589.0], [23.0, 331.0], [24.0, 809.5], [25.0, 665.0], [26.0, 1130.0], [27.0, 541.0], [28.0, 698.0], [7.0, 1783.0], [31.0, 528.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 120.0, "minX": 2.0, "maxY": 3109.0, "series": [{"data": [[2.0, 280.0], [33.0, 407.0], [32.0, 345.0], [9.0, 195.0], [11.0, 371.5], [12.0, 120.0], [3.0, 307.0], [14.0, 780.0], [16.0, 578.0], [17.0, 454.0], [19.0, 508.0], [20.0, 403.0], [5.0, 239.0], [21.0, 344.5], [22.0, 382.0], [23.0, 239.0], [24.0, 384.0], [25.0, 440.5], [26.0, 397.0], [27.0, 423.5], [28.0, 338.0], [7.0, 222.0], [31.0, 373.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[33.0, 772.0], [32.0, 592.0], [2.0, 1085.0], [9.0, 721.0], [11.0, 675.5], [12.0, 1040.5], [14.0, 3109.0], [16.0, 681.0], [17.0, 813.0], [19.0, 637.5], [20.0, 790.0], [21.0, 752.0], [22.0, 589.0], [23.0, 330.0], [24.0, 809.0], [25.0, 664.5], [26.0, 1130.0], [27.0, 541.0], [28.0, 698.0], [7.0, 1783.0], [31.0, 528.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 33.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.69597338E12, "maxY": 16.583333333333332, "series": [{"data": [[1.69597344E12, 0.08333333333333333], [1.69597338E12, 16.583333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69597344E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69597338E12, "maxY": 9.916666666666666, "series": [{"data": [[1.69597344E12, 0.08333333333333333], [1.69597338E12, 9.916666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69597344E12, 0.016666666666666666], [1.69597338E12, 3.3333333333333335]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.69597344E12, 0.016666666666666666], [1.69597338E12, 3.3]], "isOverall": false, "label": "400", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69597344E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69597338E12, "maxY": 3.316666666666667, "series": [{"data": [[1.69597344E12, 0.03333333333333333], [1.69597338E12, 3.3]], "isOverall": false, "label": "PUT Buy order ID-success", "isController": false}, {"data": [[1.69597344E12, 0.016666666666666666], [1.69597338E12, 3.316666666666667]], "isOverall": false, "label": "GET Buyer order-success", "isController": false}, {"data": [[1.69597338E12, 0.016666666666666666]], "isOverall": false, "label": "PUT Buyer order-success", "isController": false}, {"data": [[1.69597344E12, 0.03333333333333333], [1.69597338E12, 3.3]], "isOverall": false, "label": "GET Buyer order ID-success", "isController": false}, {"data": [[1.69597344E12, 0.016666666666666666], [1.69597338E12, 3.3]], "isOverall": false, "label": "PUT Buyer order-failure", "isController": false}, {"data": [[1.69597344E12, 0.016666666666666666], [1.69597338E12, 3.316666666666667]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69597344E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69597338E12, "maxY": 13.25, "series": [{"data": [[1.69597344E12, 0.1], [1.69597338E12, 13.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69597344E12, 0.016666666666666666], [1.69597338E12, 3.3]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69597344E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

