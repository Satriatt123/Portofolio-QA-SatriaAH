/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 139.0, "minX": 0.0, "maxY": 15510.0, "series": [{"data": [[0.0, 169.0], [0.1, 169.0], [0.2, 169.0], [0.3, 169.0], [0.4, 169.0], [0.5, 171.0], [0.6, 171.0], [0.7, 171.0], [0.8, 171.0], [0.9, 171.0], [1.0, 172.0], [1.1, 172.0], [1.2, 172.0], [1.3, 172.0], [1.4, 172.0], [1.5, 173.0], [1.6, 173.0], [1.7, 173.0], [1.8, 173.0], [1.9, 173.0], [2.0, 206.0], [2.1, 206.0], [2.2, 206.0], [2.3, 206.0], [2.4, 206.0], [2.5, 351.0], [2.6, 351.0], [2.7, 351.0], [2.8, 351.0], [2.9, 351.0], [3.0, 364.0], [3.1, 364.0], [3.2, 364.0], [3.3, 364.0], [3.4, 364.0], [3.5, 384.0], [3.6, 384.0], [3.7, 384.0], [3.8, 384.0], [3.9, 384.0], [4.0, 460.0], [4.1, 460.0], [4.2, 460.0], [4.3, 460.0], [4.4, 460.0], [4.5, 554.0], [4.6, 554.0], [4.7, 554.0], [4.8, 554.0], [4.9, 554.0], [5.0, 570.0], [5.1, 570.0], [5.2, 570.0], [5.3, 570.0], [5.4, 570.0], [5.5, 591.0], [5.6, 591.0], [5.7, 591.0], [5.8, 591.0], [5.9, 591.0], [6.0, 618.0], [6.1, 618.0], [6.2, 618.0], [6.3, 618.0], [6.4, 618.0], [6.5, 650.0], [6.6, 650.0], [6.7, 650.0], [6.8, 650.0], [6.9, 650.0], [7.0, 706.0], [7.1, 706.0], [7.2, 706.0], [7.3, 706.0], [7.4, 706.0], [7.5, 749.0], [7.6, 749.0], [7.7, 749.0], [7.8, 749.0], [7.9, 749.0], [8.0, 756.0], [8.1, 756.0], [8.2, 756.0], [8.3, 756.0], [8.4, 756.0], [8.5, 759.0], [8.6, 759.0], [8.7, 759.0], [8.8, 759.0], [8.9, 759.0], [9.0, 800.0], [9.1, 800.0], [9.2, 800.0], [9.3, 800.0], [9.4, 800.0], [9.5, 801.0], [9.6, 801.0], [9.7, 801.0], [9.8, 801.0], [9.9, 801.0], [10.0, 828.0], [10.1, 828.0], [10.2, 828.0], [10.3, 828.0], [10.4, 828.0], [10.5, 831.0], [10.6, 831.0], [10.7, 831.0], [10.8, 831.0], [10.9, 831.0], [11.0, 856.0], [11.1, 856.0], [11.2, 856.0], [11.3, 856.0], [11.4, 856.0], [11.5, 869.0], [11.6, 869.0], [11.7, 869.0], [11.8, 869.0], [11.9, 869.0], [12.0, 879.0], [12.1, 879.0], [12.2, 879.0], [12.3, 879.0], [12.4, 879.0], [12.5, 887.0], [12.6, 887.0], [12.7, 887.0], [12.8, 887.0], [12.9, 887.0], [13.0, 889.0], [13.1, 889.0], [13.2, 889.0], [13.3, 889.0], [13.4, 889.0], [13.5, 892.0], [13.6, 892.0], [13.7, 892.0], [13.8, 892.0], [13.9, 892.0], [14.0, 893.0], [14.1, 893.0], [14.2, 893.0], [14.3, 893.0], [14.4, 893.0], [14.5, 898.0], [14.6, 898.0], [14.7, 898.0], [14.8, 898.0], [14.9, 898.0], [15.0, 931.0], [15.1, 931.0], [15.2, 931.0], [15.3, 931.0], [15.4, 931.0], [15.5, 940.0], [15.6, 940.0], [15.7, 940.0], [15.8, 940.0], [15.9, 940.0], [16.0, 947.0], [16.1, 947.0], [16.2, 947.0], [16.3, 947.0], [16.4, 947.0], [16.5, 967.0], [16.6, 967.0], [16.7, 967.0], [16.8, 967.0], [16.9, 967.0], [17.0, 969.0], [17.1, 969.0], [17.2, 969.0], [17.3, 969.0], [17.4, 969.0], [17.5, 970.0], [17.6, 970.0], [17.7, 970.0], [17.8, 970.0], [17.9, 970.0], [18.0, 975.0], [18.1, 975.0], [18.2, 975.0], [18.3, 975.0], [18.4, 975.0], [18.5, 995.0], [18.6, 995.0], [18.7, 995.0], [18.8, 995.0], [18.9, 995.0], [19.0, 1007.0], [19.1, 1007.0], [19.2, 1007.0], [19.3, 1007.0], [19.4, 1007.0], [19.5, 1010.0], [19.6, 1010.0], [19.7, 1010.0], [19.8, 1010.0], [19.9, 1010.0], [20.0, 1029.0], [20.1, 1029.0], [20.2, 1029.0], [20.3, 1029.0], [20.4, 1029.0], [20.5, 1029.0], [20.6, 1029.0], [20.7, 1029.0], [20.8, 1029.0], [20.9, 1029.0], [21.0, 1038.0], [21.1, 1038.0], [21.2, 1038.0], [21.3, 1038.0], [21.4, 1038.0], [21.5, 1040.0], [21.6, 1040.0], [21.7, 1040.0], [21.8, 1040.0], [21.9, 1040.0], [22.0, 1040.0], [22.1, 1040.0], [22.2, 1040.0], [22.3, 1040.0], [22.4, 1040.0], [22.5, 1043.0], [22.6, 1043.0], [22.7, 1043.0], [22.8, 1043.0], [22.9, 1043.0], [23.0, 1056.0], [23.1, 1056.0], [23.2, 1056.0], [23.3, 1056.0], [23.4, 1056.0], [23.5, 1065.0], [23.6, 1065.0], [23.7, 1065.0], [23.8, 1065.0], [23.9, 1065.0], [24.0, 1071.0], [24.1, 1071.0], [24.2, 1071.0], [24.3, 1071.0], [24.4, 1071.0], [24.5, 1077.0], [24.6, 1077.0], [24.7, 1077.0], [24.8, 1077.0], [24.9, 1077.0], [25.0, 1086.0], [25.1, 1086.0], [25.2, 1086.0], [25.3, 1086.0], [25.4, 1086.0], [25.5, 1109.0], [25.6, 1109.0], [25.7, 1109.0], [25.8, 1109.0], [25.9, 1109.0], [26.0, 1116.0], [26.1, 1116.0], [26.2, 1116.0], [26.3, 1116.0], [26.4, 1116.0], [26.5, 1120.0], [26.6, 1120.0], [26.7, 1120.0], [26.8, 1120.0], [26.9, 1120.0], [27.0, 1138.0], [27.1, 1138.0], [27.2, 1138.0], [27.3, 1138.0], [27.4, 1138.0], [27.5, 1154.0], [27.6, 1154.0], [27.7, 1154.0], [27.8, 1154.0], [27.9, 1154.0], [28.0, 1158.0], [28.1, 1158.0], [28.2, 1158.0], [28.3, 1158.0], [28.4, 1158.0], [28.5, 1167.0], [28.6, 1167.0], [28.7, 1167.0], [28.8, 1167.0], [28.9, 1167.0], [29.0, 1170.0], [29.1, 1170.0], [29.2, 1170.0], [29.3, 1170.0], [29.4, 1170.0], [29.5, 1173.0], [29.6, 1173.0], [29.7, 1173.0], [29.8, 1173.0], [29.9, 1173.0], [30.0, 1178.0], [30.1, 1178.0], [30.2, 1178.0], [30.3, 1178.0], [30.4, 1178.0], [30.5, 1179.0], [30.6, 1179.0], [30.7, 1179.0], [30.8, 1179.0], [30.9, 1179.0], [31.0, 1182.0], [31.1, 1182.0], [31.2, 1182.0], [31.3, 1182.0], [31.4, 1182.0], [31.5, 1182.0], [31.6, 1182.0], [31.7, 1182.0], [31.8, 1182.0], [31.9, 1182.0], [32.0, 1185.0], [32.1, 1185.0], [32.2, 1185.0], [32.3, 1185.0], [32.4, 1185.0], [32.5, 1190.0], [32.6, 1190.0], [32.7, 1190.0], [32.8, 1190.0], [32.9, 1190.0], [33.0, 1198.0], [33.1, 1198.0], [33.2, 1198.0], [33.3, 1198.0], [33.4, 1198.0], [33.5, 1199.0], [33.6, 1199.0], [33.7, 1199.0], [33.8, 1199.0], [33.9, 1199.0], [34.0, 1203.0], [34.1, 1203.0], [34.2, 1203.0], [34.3, 1203.0], [34.4, 1203.0], [34.5, 1210.0], [34.6, 1210.0], [34.7, 1210.0], [34.8, 1210.0], [34.9, 1210.0], [35.0, 1214.0], [35.1, 1214.0], [35.2, 1214.0], [35.3, 1214.0], [35.4, 1214.0], [35.5, 1218.0], [35.6, 1218.0], [35.7, 1218.0], [35.8, 1218.0], [35.9, 1218.0], [36.0, 1221.0], [36.1, 1221.0], [36.2, 1221.0], [36.3, 1221.0], [36.4, 1221.0], [36.5, 1244.0], [36.6, 1244.0], [36.7, 1244.0], [36.8, 1244.0], [36.9, 1244.0], [37.0, 1244.0], [37.1, 1244.0], [37.2, 1244.0], [37.3, 1244.0], [37.4, 1244.0], [37.5, 1247.0], [37.6, 1247.0], [37.7, 1247.0], [37.8, 1247.0], [37.9, 1247.0], [38.0, 1248.0], [38.1, 1248.0], [38.2, 1248.0], [38.3, 1248.0], [38.4, 1248.0], [38.5, 1252.0], [38.6, 1252.0], [38.7, 1252.0], [38.8, 1252.0], [38.9, 1252.0], [39.0, 1255.0], [39.1, 1255.0], [39.2, 1255.0], [39.3, 1255.0], [39.4, 1255.0], [39.5, 1258.0], [39.6, 1258.0], [39.7, 1258.0], [39.8, 1258.0], [39.9, 1258.0], [40.0, 1260.0], [40.1, 1260.0], [40.2, 1260.0], [40.3, 1260.0], [40.4, 1260.0], [40.5, 1260.0], [40.6, 1260.0], [40.7, 1260.0], [40.8, 1260.0], [40.9, 1260.0], [41.0, 1260.0], [41.1, 1260.0], [41.2, 1260.0], [41.3, 1260.0], [41.4, 1260.0], [41.5, 1265.0], [41.6, 1265.0], [41.7, 1265.0], [41.8, 1265.0], [41.9, 1265.0], [42.0, 1283.0], [42.1, 1283.0], [42.2, 1283.0], [42.3, 1283.0], [42.4, 1283.0], [42.5, 1289.0], [42.6, 1289.0], [42.7, 1289.0], [42.8, 1289.0], [42.9, 1289.0], [43.0, 1294.0], [43.1, 1294.0], [43.2, 1294.0], [43.3, 1294.0], [43.4, 1294.0], [43.5, 1305.0], [43.6, 1305.0], [43.7, 1305.0], [43.8, 1305.0], [43.9, 1305.0], [44.0, 1319.0], [44.1, 1319.0], [44.2, 1319.0], [44.3, 1319.0], [44.4, 1319.0], [44.5, 1328.0], [44.6, 1328.0], [44.7, 1328.0], [44.8, 1328.0], [44.9, 1328.0], [45.0, 1339.0], [45.1, 1339.0], [45.2, 1339.0], [45.3, 1339.0], [45.4, 1339.0], [45.5, 1357.0], [45.6, 1357.0], [45.7, 1357.0], [45.8, 1357.0], [45.9, 1357.0], [46.0, 1362.0], [46.1, 1362.0], [46.2, 1362.0], [46.3, 1362.0], [46.4, 1362.0], [46.5, 1369.0], [46.6, 1369.0], [46.7, 1369.0], [46.8, 1369.0], [46.9, 1369.0], [47.0, 1383.0], [47.1, 1383.0], [47.2, 1383.0], [47.3, 1383.0], [47.4, 1383.0], [47.5, 1384.0], [47.6, 1384.0], [47.7, 1384.0], [47.8, 1384.0], [47.9, 1384.0], [48.0, 1388.0], [48.1, 1388.0], [48.2, 1388.0], [48.3, 1388.0], [48.4, 1388.0], [48.5, 1410.0], [48.6, 1410.0], [48.7, 1410.0], [48.8, 1410.0], [48.9, 1410.0], [49.0, 1429.0], [49.1, 1429.0], [49.2, 1429.0], [49.3, 1429.0], [49.4, 1429.0], [49.5, 1436.0], [49.6, 1436.0], [49.7, 1436.0], [49.8, 1436.0], [49.9, 1436.0], [50.0, 1460.0], [50.1, 1460.0], [50.2, 1460.0], [50.3, 1460.0], [50.4, 1460.0], [50.5, 1482.0], [50.6, 1482.0], [50.7, 1482.0], [50.8, 1482.0], [50.9, 1482.0], [51.0, 1500.0], [51.1, 1500.0], [51.2, 1500.0], [51.3, 1500.0], [51.4, 1500.0], [51.5, 1506.0], [51.6, 1506.0], [51.7, 1506.0], [51.8, 1506.0], [51.9, 1506.0], [52.0, 1510.0], [52.1, 1510.0], [52.2, 1510.0], [52.3, 1510.0], [52.4, 1510.0], [52.5, 1510.0], [52.6, 1510.0], [52.7, 1510.0], [52.8, 1510.0], [52.9, 1510.0], [53.0, 1531.0], [53.1, 1531.0], [53.2, 1531.0], [53.3, 1531.0], [53.4, 1531.0], [53.5, 1579.0], [53.6, 1579.0], [53.7, 1579.0], [53.8, 1579.0], [53.9, 1579.0], [54.0, 1586.0], [54.1, 1586.0], [54.2, 1586.0], [54.3, 1586.0], [54.4, 1586.0], [54.5, 1589.0], [54.6, 1589.0], [54.7, 1589.0], [54.8, 1589.0], [54.9, 1589.0], [55.0, 1600.0], [55.1, 1600.0], [55.2, 1600.0], [55.3, 1600.0], [55.4, 1600.0], [55.5, 1603.0], [55.6, 1603.0], [55.7, 1603.0], [55.8, 1603.0], [55.9, 1603.0], [56.0, 1604.0], [56.1, 1604.0], [56.2, 1604.0], [56.3, 1604.0], [56.4, 1604.0], [56.5, 1616.0], [56.6, 1616.0], [56.7, 1616.0], [56.8, 1616.0], [56.9, 1616.0], [57.0, 1617.0], [57.1, 1617.0], [57.2, 1617.0], [57.3, 1617.0], [57.4, 1617.0], [57.5, 1620.0], [57.6, 1620.0], [57.7, 1620.0], [57.8, 1620.0], [57.9, 1620.0], [58.0, 1650.0], [58.1, 1650.0], [58.2, 1650.0], [58.3, 1650.0], [58.4, 1650.0], [58.5, 1674.0], [58.6, 1674.0], [58.7, 1674.0], [58.8, 1674.0], [58.9, 1674.0], [59.0, 1683.0], [59.1, 1683.0], [59.2, 1683.0], [59.3, 1683.0], [59.4, 1683.0], [59.5, 1710.0], [59.6, 1710.0], [59.7, 1710.0], [59.8, 1710.0], [59.9, 1710.0], [60.0, 1719.0], [60.1, 1719.0], [60.2, 1719.0], [60.3, 1719.0], [60.4, 1719.0], [60.5, 1719.0], [60.6, 1719.0], [60.7, 1719.0], [60.8, 1719.0], [60.9, 1719.0], [61.0, 1728.0], [61.1, 1728.0], [61.2, 1728.0], [61.3, 1728.0], [61.4, 1728.0], [61.5, 1749.0], [61.6, 1749.0], [61.7, 1749.0], [61.8, 1749.0], [61.9, 1749.0], [62.0, 1759.0], [62.1, 1759.0], [62.2, 1759.0], [62.3, 1759.0], [62.4, 1759.0], [62.5, 1769.0], [62.6, 1769.0], [62.7, 1769.0], [62.8, 1769.0], [62.9, 1769.0], [63.0, 1780.0], [63.1, 1780.0], [63.2, 1780.0], [63.3, 1780.0], [63.4, 1780.0], [63.5, 1780.0], [63.6, 1780.0], [63.7, 1780.0], [63.8, 1780.0], [63.9, 1780.0], [64.0, 1783.0], [64.1, 1783.0], [64.2, 1783.0], [64.3, 1783.0], [64.4, 1783.0], [64.5, 1785.0], [64.6, 1785.0], [64.7, 1785.0], [64.8, 1785.0], [64.9, 1785.0], [65.0, 1803.0], [65.1, 1803.0], [65.2, 1803.0], [65.3, 1803.0], [65.4, 1803.0], [65.5, 1821.0], [65.6, 1821.0], [65.7, 1821.0], [65.8, 1821.0], [65.9, 1821.0], [66.0, 1863.0], [66.1, 1863.0], [66.2, 1863.0], [66.3, 1863.0], [66.4, 1863.0], [66.5, 1870.0], [66.6, 1870.0], [66.7, 1870.0], [66.8, 1870.0], [66.9, 1870.0], [67.0, 1871.0], [67.1, 1871.0], [67.2, 1871.0], [67.3, 1871.0], [67.4, 1871.0], [67.5, 1948.0], [67.6, 1948.0], [67.7, 1948.0], [67.8, 1948.0], [67.9, 1948.0], [68.0, 1960.0], [68.1, 1960.0], [68.2, 1960.0], [68.3, 1960.0], [68.4, 1960.0], [68.5, 1999.0], [68.6, 1999.0], [68.7, 1999.0], [68.8, 1999.0], [68.9, 1999.0], [69.0, 2000.0], [69.1, 2000.0], [69.2, 2000.0], [69.3, 2000.0], [69.4, 2000.0], [69.5, 2039.0], [69.6, 2039.0], [69.7, 2039.0], [69.8, 2039.0], [69.9, 2039.0], [70.0, 2039.0], [70.1, 2039.0], [70.2, 2039.0], [70.3, 2039.0], [70.4, 2039.0], [70.5, 2064.0], [70.6, 2064.0], [70.7, 2064.0], [70.8, 2064.0], [70.9, 2064.0], [71.0, 2077.0], [71.1, 2077.0], [71.2, 2077.0], [71.3, 2077.0], [71.4, 2077.0], [71.5, 2107.0], [71.6, 2107.0], [71.7, 2107.0], [71.8, 2107.0], [71.9, 2107.0], [72.0, 2109.0], [72.1, 2109.0], [72.2, 2109.0], [72.3, 2109.0], [72.4, 2109.0], [72.5, 2132.0], [72.6, 2132.0], [72.7, 2132.0], [72.8, 2132.0], [72.9, 2132.0], [73.0, 2157.0], [73.1, 2157.0], [73.2, 2157.0], [73.3, 2157.0], [73.4, 2157.0], [73.5, 2164.0], [73.6, 2164.0], [73.7, 2164.0], [73.8, 2164.0], [73.9, 2164.0], [74.0, 2164.0], [74.1, 2164.0], [74.2, 2164.0], [74.3, 2164.0], [74.4, 2164.0], [74.5, 2203.0], [74.6, 2203.0], [74.7, 2203.0], [74.8, 2203.0], [74.9, 2203.0], [75.0, 2237.0], [75.1, 2237.0], [75.2, 2237.0], [75.3, 2237.0], [75.4, 2237.0], [75.5, 2239.0], [75.6, 2239.0], [75.7, 2239.0], [75.8, 2239.0], [75.9, 2239.0], [76.0, 2260.0], [76.1, 2260.0], [76.2, 2260.0], [76.3, 2260.0], [76.4, 2260.0], [76.5, 2330.0], [76.6, 2330.0], [76.7, 2330.0], [76.8, 2330.0], [76.9, 2330.0], [77.0, 2338.0], [77.1, 2338.0], [77.2, 2338.0], [77.3, 2338.0], [77.4, 2338.0], [77.5, 2470.0], [77.6, 2470.0], [77.7, 2470.0], [77.8, 2470.0], [77.9, 2470.0], [78.0, 2601.0], [78.1, 2601.0], [78.2, 2601.0], [78.3, 2601.0], [78.4, 2601.0], [78.5, 2679.0], [78.6, 2679.0], [78.7, 2679.0], [78.8, 2679.0], [78.9, 2679.0], [79.0, 2740.0], [79.1, 2740.0], [79.2, 2740.0], [79.3, 2740.0], [79.4, 2740.0], [79.5, 2810.0], [79.6, 2810.0], [79.7, 2810.0], [79.8, 2810.0], [79.9, 2810.0], [80.0, 2882.0], [80.1, 2882.0], [80.2, 2882.0], [80.3, 2882.0], [80.4, 2882.0], [80.5, 2912.0], [80.6, 2912.0], [80.7, 2912.0], [80.8, 2912.0], [80.9, 2912.0], [81.0, 2950.0], [81.1, 2950.0], [81.2, 2950.0], [81.3, 2950.0], [81.4, 2950.0], [81.5, 2970.0], [81.6, 2970.0], [81.7, 2970.0], [81.8, 2970.0], [81.9, 2970.0], [82.0, 3017.0], [82.1, 3017.0], [82.2, 3017.0], [82.3, 3017.0], [82.4, 3017.0], [82.5, 3129.0], [82.6, 3129.0], [82.7, 3129.0], [82.8, 3129.0], [82.9, 3129.0], [83.0, 3170.0], [83.1, 3170.0], [83.2, 3170.0], [83.3, 3170.0], [83.4, 3170.0], [83.5, 3190.0], [83.6, 3190.0], [83.7, 3190.0], [83.8, 3190.0], [83.9, 3190.0], [84.0, 3269.0], [84.1, 3269.0], [84.2, 3269.0], [84.3, 3269.0], [84.4, 3269.0], [84.5, 3310.0], [84.6, 3310.0], [84.7, 3310.0], [84.8, 3310.0], [84.9, 3310.0], [85.0, 3430.0], [85.1, 3430.0], [85.2, 3430.0], [85.3, 3430.0], [85.4, 3430.0], [85.5, 3560.0], [85.6, 3560.0], [85.7, 3560.0], [85.8, 3560.0], [85.9, 3560.0], [86.0, 3700.0], [86.1, 3700.0], [86.2, 3700.0], [86.3, 3700.0], [86.4, 3700.0], [86.5, 4138.0], [86.6, 4138.0], [86.7, 4138.0], [86.8, 4138.0], [86.9, 4138.0], [87.0, 4165.0], [87.1, 4165.0], [87.2, 4165.0], [87.3, 4165.0], [87.4, 4165.0], [87.5, 4191.0], [87.6, 4191.0], [87.7, 4191.0], [87.8, 4191.0], [87.9, 4191.0], [88.0, 4409.0], [88.1, 4409.0], [88.2, 4409.0], [88.3, 4409.0], [88.4, 4409.0], [88.5, 4580.0], [88.6, 4580.0], [88.7, 4580.0], [88.8, 4580.0], [88.9, 4580.0], [89.0, 4614.0], [89.1, 4614.0], [89.2, 4614.0], [89.3, 4614.0], [89.4, 4614.0], [89.5, 4643.0], [89.6, 4643.0], [89.7, 4643.0], [89.8, 4643.0], [89.9, 4643.0], [90.0, 4679.0], [90.1, 4679.0], [90.2, 4679.0], [90.3, 4679.0], [90.4, 4679.0], [90.5, 4769.0], [90.6, 4769.0], [90.7, 4769.0], [90.8, 4769.0], [90.9, 4769.0], [91.0, 4799.0], [91.1, 4799.0], [91.2, 4799.0], [91.3, 4799.0], [91.4, 4799.0], [91.5, 4979.0], [91.6, 4979.0], [91.7, 4979.0], [91.8, 4979.0], [91.9, 4979.0], [92.0, 5050.0], [92.1, 5050.0], [92.2, 5050.0], [92.3, 5050.0], [92.4, 5050.0], [92.5, 5199.0], [92.6, 5199.0], [92.7, 5199.0], [92.8, 5199.0], [92.9, 5199.0], [93.0, 5344.0], [93.1, 5344.0], [93.2, 5344.0], [93.3, 5344.0], [93.4, 5344.0], [93.5, 5379.0], [93.6, 5379.0], [93.7, 5379.0], [93.8, 5379.0], [93.9, 5379.0], [94.0, 5431.0], [94.1, 5431.0], [94.2, 5431.0], [94.3, 5431.0], [94.4, 5431.0], [94.5, 5479.0], [94.6, 5479.0], [94.7, 5479.0], [94.8, 5479.0], [94.9, 5479.0], [95.0, 5523.0], [95.1, 5523.0], [95.2, 5523.0], [95.3, 5523.0], [95.4, 5523.0], [95.5, 5898.0], [95.6, 5898.0], [95.7, 5898.0], [95.8, 5898.0], [95.9, 5898.0], [96.0, 6179.0], [96.1, 6179.0], [96.2, 6179.0], [96.3, 6179.0], [96.4, 6179.0], [96.5, 6246.0], [96.6, 6246.0], [96.7, 6246.0], [96.8, 6246.0], [96.9, 6246.0], [97.0, 6800.0], [97.1, 6800.0], [97.2, 6800.0], [97.3, 6800.0], [97.4, 6800.0], [97.5, 7255.0], [97.6, 7255.0], [97.7, 7255.0], [97.8, 7255.0], [97.9, 7255.0], [98.0, 7560.0], [98.1, 7560.0], [98.2, 7560.0], [98.3, 7560.0], [98.4, 7560.0], [98.5, 8315.0], [98.6, 8315.0], [98.7, 8315.0], [98.8, 8315.0], [98.9, 8315.0], [99.0, 9180.0], [99.1, 9180.0], [99.2, 9180.0], [99.3, 9180.0], [99.4, 9180.0], [99.5, 10933.0], [99.6, 10933.0], [99.7, 10933.0], [99.8, 10933.0], [99.9, 10933.0]], "isOverall": false, "label": "Sell product", "isController": false}, {"data": [[0.0, 139.0], [0.1, 139.0], [0.2, 139.0], [0.3, 139.0], [0.4, 139.0], [0.5, 186.0], [0.6, 186.0], [0.7, 186.0], [0.8, 186.0], [0.9, 186.0], [1.0, 197.0], [1.1, 197.0], [1.2, 197.0], [1.3, 197.0], [1.4, 197.0], [1.5, 247.0], [1.6, 247.0], [1.7, 247.0], [1.8, 247.0], [1.9, 247.0], [2.0, 249.0], [2.1, 249.0], [2.2, 249.0], [2.3, 249.0], [2.4, 249.0], [2.5, 285.0], [2.6, 285.0], [2.7, 285.0], [2.8, 285.0], [2.9, 285.0], [3.0, 289.0], [3.1, 289.0], [3.2, 289.0], [3.3, 289.0], [3.4, 289.0], [3.5, 319.0], [3.6, 319.0], [3.7, 319.0], [3.8, 319.0], [3.9, 319.0], [4.0, 388.0], [4.1, 388.0], [4.2, 388.0], [4.3, 388.0], [4.4, 388.0], [4.5, 391.0], [4.6, 391.0], [4.7, 391.0], [4.8, 391.0], [4.9, 391.0], [5.0, 471.0], [5.1, 471.0], [5.2, 471.0], [5.3, 471.0], [5.4, 471.0], [5.5, 474.0], [5.6, 474.0], [5.7, 474.0], [5.8, 474.0], [5.9, 474.0], [6.0, 592.0], [6.1, 592.0], [6.2, 592.0], [6.3, 592.0], [6.4, 592.0], [6.5, 627.0], [6.6, 627.0], [6.7, 627.0], [6.8, 627.0], [6.9, 627.0], [7.0, 646.0], [7.1, 646.0], [7.2, 646.0], [7.3, 646.0], [7.4, 646.0], [7.5, 646.0], [7.6, 646.0], [7.7, 646.0], [7.8, 646.0], [7.9, 646.0], [8.0, 647.0], [8.1, 647.0], [8.2, 647.0], [8.3, 647.0], [8.4, 647.0], [8.5, 659.0], [8.6, 659.0], [8.7, 659.0], [8.8, 659.0], [8.9, 659.0], [9.0, 709.0], [9.1, 709.0], [9.2, 709.0], [9.3, 709.0], [9.4, 709.0], [9.5, 720.0], [9.6, 720.0], [9.7, 720.0], [9.8, 720.0], [9.9, 720.0], [10.0, 755.0], [10.1, 755.0], [10.2, 755.0], [10.3, 755.0], [10.4, 755.0], [10.5, 758.0], [10.6, 758.0], [10.7, 758.0], [10.8, 758.0], [10.9, 758.0], [11.0, 787.0], [11.1, 787.0], [11.2, 787.0], [11.3, 787.0], [11.4, 787.0], [11.5, 788.0], [11.6, 788.0], [11.7, 788.0], [11.8, 788.0], [11.9, 788.0], [12.0, 797.0], [12.1, 797.0], [12.2, 797.0], [12.3, 797.0], [12.4, 797.0], [12.5, 814.0], [12.6, 814.0], [12.7, 814.0], [12.8, 814.0], [12.9, 814.0], [13.0, 816.0], [13.1, 816.0], [13.2, 816.0], [13.3, 816.0], [13.4, 816.0], [13.5, 830.0], [13.6, 830.0], [13.7, 830.0], [13.8, 830.0], [13.9, 830.0], [14.0, 850.0], [14.1, 850.0], [14.2, 850.0], [14.3, 850.0], [14.4, 850.0], [14.5, 861.0], [14.6, 861.0], [14.7, 861.0], [14.8, 861.0], [14.9, 861.0], [15.0, 882.0], [15.1, 882.0], [15.2, 882.0], [15.3, 882.0], [15.4, 882.0], [15.5, 890.0], [15.6, 890.0], [15.7, 890.0], [15.8, 890.0], [15.9, 890.0], [16.0, 938.0], [16.1, 938.0], [16.2, 938.0], [16.3, 938.0], [16.4, 938.0], [16.5, 950.0], [16.6, 950.0], [16.7, 950.0], [16.8, 950.0], [16.9, 950.0], [17.0, 951.0], [17.1, 951.0], [17.2, 951.0], [17.3, 951.0], [17.4, 951.0], [17.5, 961.0], [17.6, 961.0], [17.7, 961.0], [17.8, 961.0], [17.9, 961.0], [18.0, 963.0], [18.1, 963.0], [18.2, 963.0], [18.3, 963.0], [18.4, 963.0], [18.5, 968.0], [18.6, 968.0], [18.7, 968.0], [18.8, 968.0], [18.9, 968.0], [19.0, 968.0], [19.1, 968.0], [19.2, 968.0], [19.3, 968.0], [19.4, 968.0], [19.5, 980.0], [19.6, 980.0], [19.7, 980.0], [19.8, 980.0], [19.9, 980.0], [20.0, 1000.0], [20.1, 1000.0], [20.2, 1000.0], [20.3, 1000.0], [20.4, 1000.0], [20.5, 1039.0], [20.6, 1039.0], [20.7, 1039.0], [20.8, 1039.0], [20.9, 1039.0], [21.0, 1046.0], [21.1, 1046.0], [21.2, 1046.0], [21.3, 1046.0], [21.4, 1046.0], [21.5, 1049.0], [21.6, 1049.0], [21.7, 1049.0], [21.8, 1049.0], [21.9, 1049.0], [22.0, 1050.0], [22.1, 1050.0], [22.2, 1050.0], [22.3, 1050.0], [22.4, 1050.0], [22.5, 1068.0], [22.6, 1068.0], [22.7, 1068.0], [22.8, 1068.0], [22.9, 1068.0], [23.0, 1080.0], [23.1, 1080.0], [23.2, 1080.0], [23.3, 1080.0], [23.4, 1080.0], [23.5, 1093.0], [23.6, 1093.0], [23.7, 1093.0], [23.8, 1093.0], [23.9, 1093.0], [24.0, 1118.0], [24.1, 1118.0], [24.2, 1118.0], [24.3, 1118.0], [24.4, 1118.0], [24.5, 1124.0], [24.6, 1124.0], [24.7, 1124.0], [24.8, 1124.0], [24.9, 1124.0], [25.0, 1124.0], [25.1, 1124.0], [25.2, 1124.0], [25.3, 1124.0], [25.4, 1124.0], [25.5, 1126.0], [25.6, 1126.0], [25.7, 1126.0], [25.8, 1126.0], [25.9, 1126.0], [26.0, 1127.0], [26.1, 1127.0], [26.2, 1127.0], [26.3, 1127.0], [26.4, 1127.0], [26.5, 1151.0], [26.6, 1151.0], [26.7, 1151.0], [26.8, 1151.0], [26.9, 1151.0], [27.0, 1171.0], [27.1, 1171.0], [27.2, 1171.0], [27.3, 1171.0], [27.4, 1171.0], [27.5, 1173.0], [27.6, 1173.0], [27.7, 1173.0], [27.8, 1173.0], [27.9, 1173.0], [28.0, 1201.0], [28.1, 1201.0], [28.2, 1201.0], [28.3, 1201.0], [28.4, 1201.0], [28.5, 1202.0], [28.6, 1202.0], [28.7, 1202.0], [28.8, 1202.0], [28.9, 1202.0], [29.0, 1203.0], [29.1, 1203.0], [29.2, 1203.0], [29.3, 1203.0], [29.4, 1203.0], [29.5, 1220.0], [29.6, 1220.0], [29.7, 1220.0], [29.8, 1220.0], [29.9, 1220.0], [30.0, 1220.0], [30.1, 1220.0], [30.2, 1220.0], [30.3, 1220.0], [30.4, 1220.0], [30.5, 1221.0], [30.6, 1221.0], [30.7, 1221.0], [30.8, 1221.0], [30.9, 1221.0], [31.0, 1227.0], [31.1, 1227.0], [31.2, 1227.0], [31.3, 1227.0], [31.4, 1227.0], [31.5, 1233.0], [31.6, 1233.0], [31.7, 1233.0], [31.8, 1233.0], [31.9, 1233.0], [32.0, 1240.0], [32.1, 1240.0], [32.2, 1240.0], [32.3, 1240.0], [32.4, 1240.0], [32.5, 1265.0], [32.6, 1265.0], [32.7, 1265.0], [32.8, 1265.0], [32.9, 1265.0], [33.0, 1269.0], [33.1, 1269.0], [33.2, 1269.0], [33.3, 1269.0], [33.4, 1269.0], [33.5, 1270.0], [33.6, 1270.0], [33.7, 1270.0], [33.8, 1270.0], [33.9, 1270.0], [34.0, 1275.0], [34.1, 1275.0], [34.2, 1275.0], [34.3, 1275.0], [34.4, 1275.0], [34.5, 1289.0], [34.6, 1289.0], [34.7, 1289.0], [34.8, 1289.0], [34.9, 1289.0], [35.0, 1294.0], [35.1, 1294.0], [35.2, 1294.0], [35.3, 1294.0], [35.4, 1294.0], [35.5, 1300.0], [35.6, 1300.0], [35.7, 1300.0], [35.8, 1300.0], [35.9, 1300.0], [36.0, 1317.0], [36.1, 1317.0], [36.2, 1317.0], [36.3, 1317.0], [36.4, 1317.0], [36.5, 1349.0], [36.6, 1349.0], [36.7, 1349.0], [36.8, 1349.0], [36.9, 1349.0], [37.0, 1358.0], [37.1, 1358.0], [37.2, 1358.0], [37.3, 1358.0], [37.4, 1358.0], [37.5, 1367.0], [37.6, 1367.0], [37.7, 1367.0], [37.8, 1367.0], [37.9, 1367.0], [38.0, 1369.0], [38.1, 1369.0], [38.2, 1369.0], [38.3, 1369.0], [38.4, 1369.0], [38.5, 1393.0], [38.6, 1393.0], [38.7, 1393.0], [38.8, 1393.0], [38.9, 1393.0], [39.0, 1397.0], [39.1, 1397.0], [39.2, 1397.0], [39.3, 1397.0], [39.4, 1397.0], [39.5, 1399.0], [39.6, 1399.0], [39.7, 1399.0], [39.8, 1399.0], [39.9, 1399.0], [40.0, 1399.0], [40.1, 1399.0], [40.2, 1399.0], [40.3, 1399.0], [40.4, 1399.0], [40.5, 1417.0], [40.6, 1417.0], [40.7, 1417.0], [40.8, 1417.0], [40.9, 1417.0], [41.0, 1431.0], [41.1, 1431.0], [41.2, 1431.0], [41.3, 1431.0], [41.4, 1431.0], [41.5, 1439.0], [41.6, 1439.0], [41.7, 1439.0], [41.8, 1439.0], [41.9, 1439.0], [42.0, 1449.0], [42.1, 1449.0], [42.2, 1449.0], [42.3, 1449.0], [42.4, 1449.0], [42.5, 1452.0], [42.6, 1452.0], [42.7, 1452.0], [42.8, 1452.0], [42.9, 1452.0], [43.0, 1470.0], [43.1, 1470.0], [43.2, 1470.0], [43.3, 1470.0], [43.4, 1470.0], [43.5, 1497.0], [43.6, 1497.0], [43.7, 1497.0], [43.8, 1497.0], [43.9, 1497.0], [44.0, 1497.0], [44.1, 1497.0], [44.2, 1497.0], [44.3, 1497.0], [44.4, 1497.0], [44.5, 1501.0], [44.6, 1501.0], [44.7, 1501.0], [44.8, 1501.0], [44.9, 1501.0], [45.0, 1504.0], [45.1, 1504.0], [45.2, 1504.0], [45.3, 1504.0], [45.4, 1504.0], [45.5, 1506.0], [45.6, 1506.0], [45.7, 1506.0], [45.8, 1506.0], [45.9, 1506.0], [46.0, 1509.0], [46.1, 1509.0], [46.2, 1509.0], [46.3, 1509.0], [46.4, 1509.0], [46.5, 1514.0], [46.6, 1514.0], [46.7, 1514.0], [46.8, 1514.0], [46.9, 1514.0], [47.0, 1515.0], [47.1, 1515.0], [47.2, 1515.0], [47.3, 1515.0], [47.4, 1515.0], [47.5, 1521.0], [47.6, 1521.0], [47.7, 1521.0], [47.8, 1521.0], [47.9, 1521.0], [48.0, 1524.0], [48.1, 1524.0], [48.2, 1524.0], [48.3, 1524.0], [48.4, 1524.0], [48.5, 1540.0], [48.6, 1540.0], [48.7, 1540.0], [48.8, 1540.0], [48.9, 1540.0], [49.0, 1541.0], [49.1, 1541.0], [49.2, 1541.0], [49.3, 1541.0], [49.4, 1541.0], [49.5, 1545.0], [49.6, 1545.0], [49.7, 1545.0], [49.8, 1545.0], [49.9, 1545.0], [50.0, 1553.0], [50.1, 1553.0], [50.2, 1553.0], [50.3, 1553.0], [50.4, 1553.0], [50.5, 1577.0], [50.6, 1577.0], [50.7, 1577.0], [50.8, 1577.0], [50.9, 1577.0], [51.0, 1580.0], [51.1, 1580.0], [51.2, 1580.0], [51.3, 1580.0], [51.4, 1580.0], [51.5, 1590.0], [51.6, 1590.0], [51.7, 1590.0], [51.8, 1590.0], [51.9, 1590.0], [52.0, 1596.0], [52.1, 1596.0], [52.2, 1596.0], [52.3, 1596.0], [52.4, 1596.0], [52.5, 1619.0], [52.6, 1619.0], [52.7, 1619.0], [52.8, 1619.0], [52.9, 1619.0], [53.0, 1620.0], [53.1, 1620.0], [53.2, 1620.0], [53.3, 1620.0], [53.4, 1620.0], [53.5, 1624.0], [53.6, 1624.0], [53.7, 1624.0], [53.8, 1624.0], [53.9, 1624.0], [54.0, 1639.0], [54.1, 1639.0], [54.2, 1639.0], [54.3, 1639.0], [54.4, 1639.0], [54.5, 1649.0], [54.6, 1649.0], [54.7, 1649.0], [54.8, 1649.0], [54.9, 1649.0], [55.0, 1657.0], [55.1, 1657.0], [55.2, 1657.0], [55.3, 1657.0], [55.4, 1657.0], [55.5, 1674.0], [55.6, 1674.0], [55.7, 1674.0], [55.8, 1674.0], [55.9, 1674.0], [56.0, 1685.0], [56.1, 1685.0], [56.2, 1685.0], [56.3, 1685.0], [56.4, 1685.0], [56.5, 1692.0], [56.6, 1692.0], [56.7, 1692.0], [56.8, 1692.0], [56.9, 1692.0], [57.0, 1701.0], [57.1, 1701.0], [57.2, 1701.0], [57.3, 1701.0], [57.4, 1701.0], [57.5, 1702.0], [57.6, 1702.0], [57.7, 1702.0], [57.8, 1702.0], [57.9, 1702.0], [58.0, 1703.0], [58.1, 1703.0], [58.2, 1703.0], [58.3, 1703.0], [58.4, 1703.0], [58.5, 1709.0], [58.6, 1709.0], [58.7, 1709.0], [58.8, 1709.0], [58.9, 1709.0], [59.0, 1710.0], [59.1, 1710.0], [59.2, 1710.0], [59.3, 1710.0], [59.4, 1710.0], [59.5, 1718.0], [59.6, 1718.0], [59.7, 1718.0], [59.8, 1718.0], [59.9, 1718.0], [60.0, 1737.0], [60.1, 1737.0], [60.2, 1737.0], [60.3, 1737.0], [60.4, 1737.0], [60.5, 1745.0], [60.6, 1745.0], [60.7, 1745.0], [60.8, 1745.0], [60.9, 1745.0], [61.0, 1762.0], [61.1, 1762.0], [61.2, 1762.0], [61.3, 1762.0], [61.4, 1762.0], [61.5, 1779.0], [61.6, 1779.0], [61.7, 1779.0], [61.8, 1779.0], [61.9, 1779.0], [62.0, 1786.0], [62.1, 1786.0], [62.2, 1786.0], [62.3, 1786.0], [62.4, 1786.0], [62.5, 1797.0], [62.6, 1797.0], [62.7, 1797.0], [62.8, 1797.0], [62.9, 1797.0], [63.0, 1804.0], [63.1, 1804.0], [63.2, 1804.0], [63.3, 1804.0], [63.4, 1804.0], [63.5, 1822.0], [63.6, 1822.0], [63.7, 1822.0], [63.8, 1822.0], [63.9, 1822.0], [64.0, 1844.0], [64.1, 1844.0], [64.2, 1844.0], [64.3, 1844.0], [64.4, 1844.0], [64.5, 1905.0], [64.6, 1905.0], [64.7, 1905.0], [64.8, 1905.0], [64.9, 1905.0], [65.0, 1913.0], [65.1, 1913.0], [65.2, 1913.0], [65.3, 1913.0], [65.4, 1913.0], [65.5, 1924.0], [65.6, 1924.0], [65.7, 1924.0], [65.8, 1924.0], [65.9, 1924.0], [66.0, 1926.0], [66.1, 1926.0], [66.2, 1926.0], [66.3, 1926.0], [66.4, 1926.0], [66.5, 1946.0], [66.6, 1946.0], [66.7, 1946.0], [66.8, 1946.0], [66.9, 1946.0], [67.0, 1953.0], [67.1, 1953.0], [67.2, 1953.0], [67.3, 1953.0], [67.4, 1953.0], [67.5, 1979.0], [67.6, 1979.0], [67.7, 1979.0], [67.8, 1979.0], [67.9, 1979.0], [68.0, 1989.0], [68.1, 1989.0], [68.2, 1989.0], [68.3, 1989.0], [68.4, 1989.0], [68.5, 1991.0], [68.6, 1991.0], [68.7, 1991.0], [68.8, 1991.0], [68.9, 1991.0], [69.0, 2004.0], [69.1, 2004.0], [69.2, 2004.0], [69.3, 2004.0], [69.4, 2004.0], [69.5, 2010.0], [69.6, 2010.0], [69.7, 2010.0], [69.8, 2010.0], [69.9, 2010.0], [70.0, 2029.0], [70.1, 2029.0], [70.2, 2029.0], [70.3, 2029.0], [70.4, 2029.0], [70.5, 2080.0], [70.6, 2080.0], [70.7, 2080.0], [70.8, 2080.0], [70.9, 2080.0], [71.0, 2112.0], [71.1, 2112.0], [71.2, 2112.0], [71.3, 2112.0], [71.4, 2112.0], [71.5, 2119.0], [71.6, 2119.0], [71.7, 2119.0], [71.8, 2119.0], [71.9, 2119.0], [72.0, 2122.0], [72.1, 2122.0], [72.2, 2122.0], [72.3, 2122.0], [72.4, 2122.0], [72.5, 2129.0], [72.6, 2129.0], [72.7, 2129.0], [72.8, 2129.0], [72.9, 2129.0], [73.0, 2169.0], [73.1, 2169.0], [73.2, 2169.0], [73.3, 2169.0], [73.4, 2169.0], [73.5, 2191.0], [73.6, 2191.0], [73.7, 2191.0], [73.8, 2191.0], [73.9, 2191.0], [74.0, 2217.0], [74.1, 2217.0], [74.2, 2217.0], [74.3, 2217.0], [74.4, 2217.0], [74.5, 2259.0], [74.6, 2259.0], [74.7, 2259.0], [74.8, 2259.0], [74.9, 2259.0], [75.0, 2270.0], [75.1, 2270.0], [75.2, 2270.0], [75.3, 2270.0], [75.4, 2270.0], [75.5, 2277.0], [75.6, 2277.0], [75.7, 2277.0], [75.8, 2277.0], [75.9, 2277.0], [76.0, 2355.0], [76.1, 2355.0], [76.2, 2355.0], [76.3, 2355.0], [76.4, 2355.0], [76.5, 2382.0], [76.6, 2382.0], [76.7, 2382.0], [76.8, 2382.0], [76.9, 2382.0], [77.0, 2396.0], [77.1, 2396.0], [77.2, 2396.0], [77.3, 2396.0], [77.4, 2396.0], [77.5, 2429.0], [77.6, 2429.0], [77.7, 2429.0], [77.8, 2429.0], [77.9, 2429.0], [78.0, 2538.0], [78.1, 2538.0], [78.2, 2538.0], [78.3, 2538.0], [78.4, 2538.0], [78.5, 2566.0], [78.6, 2566.0], [78.7, 2566.0], [78.8, 2566.0], [78.9, 2566.0], [79.0, 2572.0], [79.1, 2572.0], [79.2, 2572.0], [79.3, 2572.0], [79.4, 2572.0], [79.5, 2592.0], [79.6, 2592.0], [79.7, 2592.0], [79.8, 2592.0], [79.9, 2592.0], [80.0, 2600.0], [80.1, 2600.0], [80.2, 2600.0], [80.3, 2600.0], [80.4, 2600.0], [80.5, 2674.0], [80.6, 2674.0], [80.7, 2674.0], [80.8, 2674.0], [80.9, 2674.0], [81.0, 2701.0], [81.1, 2701.0], [81.2, 2701.0], [81.3, 2701.0], [81.4, 2701.0], [81.5, 2709.0], [81.6, 2709.0], [81.7, 2709.0], [81.8, 2709.0], [81.9, 2709.0], [82.0, 2769.0], [82.1, 2769.0], [82.2, 2769.0], [82.3, 2769.0], [82.4, 2769.0], [82.5, 2799.0], [82.6, 2799.0], [82.7, 2799.0], [82.8, 2799.0], [82.9, 2799.0], [83.0, 2805.0], [83.1, 2805.0], [83.2, 2805.0], [83.3, 2805.0], [83.4, 2805.0], [83.5, 2818.0], [83.6, 2818.0], [83.7, 2818.0], [83.8, 2818.0], [83.9, 2818.0], [84.0, 2826.0], [84.1, 2826.0], [84.2, 2826.0], [84.3, 2826.0], [84.4, 2826.0], [84.5, 2834.0], [84.6, 2834.0], [84.7, 2834.0], [84.8, 2834.0], [84.9, 2834.0], [85.0, 2935.0], [85.1, 2935.0], [85.2, 2935.0], [85.3, 2935.0], [85.4, 2935.0], [85.5, 2938.0], [85.6, 2938.0], [85.7, 2938.0], [85.8, 2938.0], [85.9, 2938.0], [86.0, 2941.0], [86.1, 2941.0], [86.2, 2941.0], [86.3, 2941.0], [86.4, 2941.0], [86.5, 3040.0], [86.6, 3040.0], [86.7, 3040.0], [86.8, 3040.0], [86.9, 3040.0], [87.0, 3102.0], [87.1, 3102.0], [87.2, 3102.0], [87.3, 3102.0], [87.4, 3102.0], [87.5, 3138.0], [87.6, 3138.0], [87.7, 3138.0], [87.8, 3138.0], [87.9, 3138.0], [88.0, 3200.0], [88.1, 3200.0], [88.2, 3200.0], [88.3, 3200.0], [88.4, 3200.0], [88.5, 3226.0], [88.6, 3226.0], [88.7, 3226.0], [88.8, 3226.0], [88.9, 3226.0], [89.0, 3291.0], [89.1, 3291.0], [89.2, 3291.0], [89.3, 3291.0], [89.4, 3291.0], [89.5, 3296.0], [89.6, 3296.0], [89.7, 3296.0], [89.8, 3296.0], [89.9, 3296.0], [90.0, 3389.0], [90.1, 3389.0], [90.2, 3389.0], [90.3, 3389.0], [90.4, 3389.0], [90.5, 3399.0], [90.6, 3399.0], [90.7, 3399.0], [90.8, 3399.0], [90.9, 3399.0], [91.0, 3459.0], [91.1, 3459.0], [91.2, 3459.0], [91.3, 3459.0], [91.4, 3459.0], [91.5, 3500.0], [91.6, 3500.0], [91.7, 3500.0], [91.8, 3500.0], [91.9, 3500.0], [92.0, 3677.0], [92.1, 3677.0], [92.2, 3677.0], [92.3, 3677.0], [92.4, 3677.0], [92.5, 3738.0], [92.6, 3738.0], [92.7, 3738.0], [92.8, 3738.0], [92.9, 3738.0], [93.0, 3939.0], [93.1, 3939.0], [93.2, 3939.0], [93.3, 3939.0], [93.4, 3939.0], [93.5, 4031.0], [93.6, 4031.0], [93.7, 4031.0], [93.8, 4031.0], [93.9, 4031.0], [94.0, 4254.0], [94.1, 4254.0], [94.2, 4254.0], [94.3, 4254.0], [94.4, 4254.0], [94.5, 4309.0], [94.6, 4309.0], [94.7, 4309.0], [94.8, 4309.0], [94.9, 4309.0], [95.0, 4404.0], [95.1, 4404.0], [95.2, 4404.0], [95.3, 4404.0], [95.4, 4404.0], [95.5, 4440.0], [95.6, 4440.0], [95.7, 4440.0], [95.8, 4440.0], [95.9, 4440.0], [96.0, 4460.0], [96.1, 4460.0], [96.2, 4460.0], [96.3, 4460.0], [96.4, 4460.0], [96.5, 4779.0], [96.6, 4779.0], [96.7, 4779.0], [96.8, 4779.0], [96.9, 4779.0], [97.0, 5247.0], [97.1, 5247.0], [97.2, 5247.0], [97.3, 5247.0], [97.4, 5247.0], [97.5, 5380.0], [97.6, 5380.0], [97.7, 5380.0], [97.8, 5380.0], [97.9, 5380.0], [98.0, 6097.0], [98.1, 6097.0], [98.2, 6097.0], [98.3, 6097.0], [98.4, 6097.0], [98.5, 7283.0], [98.6, 7283.0], [98.7, 7283.0], [98.8, 7283.0], [98.9, 7283.0], [99.0, 7811.0], [99.1, 7811.0], [99.2, 7811.0], [99.3, 7811.0], [99.4, 7811.0], [99.5, 13560.0], [99.6, 13560.0], [99.7, 13560.0], [99.8, 13560.0], [99.9, 13560.0]], "isOverall": false, "label": "Get product ID", "isController": false}, {"data": [[0.0, 150.0], [0.1, 150.0], [0.2, 150.0], [0.3, 150.0], [0.4, 150.0], [0.5, 158.0], [0.6, 158.0], [0.7, 158.0], [0.8, 158.0], [0.9, 158.0], [1.0, 241.0], [1.1, 241.0], [1.2, 241.0], [1.3, 241.0], [1.4, 241.0], [1.5, 264.0], [1.6, 264.0], [1.7, 264.0], [1.8, 264.0], [1.9, 264.0], [2.0, 447.0], [2.1, 447.0], [2.2, 447.0], [2.3, 447.0], [2.4, 447.0], [2.5, 468.0], [2.6, 468.0], [2.7, 468.0], [2.8, 468.0], [2.9, 468.0], [3.0, 479.0], [3.1, 479.0], [3.2, 479.0], [3.3, 479.0], [3.4, 479.0], [3.5, 484.0], [3.6, 484.0], [3.7, 484.0], [3.8, 484.0], [3.9, 484.0], [4.0, 499.0], [4.1, 499.0], [4.2, 499.0], [4.3, 499.0], [4.4, 499.0], [4.5, 499.0], [4.6, 499.0], [4.7, 499.0], [4.8, 499.0], [4.9, 499.0], [5.0, 518.0], [5.1, 518.0], [5.2, 518.0], [5.3, 518.0], [5.4, 518.0], [5.5, 529.0], [5.6, 529.0], [5.7, 529.0], [5.8, 529.0], [5.9, 529.0], [6.0, 690.0], [6.1, 690.0], [6.2, 690.0], [6.3, 690.0], [6.4, 690.0], [6.5, 698.0], [6.6, 698.0], [6.7, 698.0], [6.8, 698.0], [6.9, 698.0], [7.0, 735.0], [7.1, 735.0], [7.2, 735.0], [7.3, 735.0], [7.4, 735.0], [7.5, 736.0], [7.6, 736.0], [7.7, 736.0], [7.8, 736.0], [7.9, 736.0], [8.0, 756.0], [8.1, 756.0], [8.2, 756.0], [8.3, 756.0], [8.4, 756.0], [8.5, 776.0], [8.6, 776.0], [8.7, 776.0], [8.8, 776.0], [8.9, 776.0], [9.0, 777.0], [9.1, 777.0], [9.2, 777.0], [9.3, 777.0], [9.4, 777.0], [9.5, 778.0], [9.6, 778.0], [9.7, 778.0], [9.8, 778.0], [9.9, 778.0], [10.0, 790.0], [10.1, 790.0], [10.2, 790.0], [10.3, 790.0], [10.4, 790.0], [10.5, 793.0], [10.6, 793.0], [10.7, 793.0], [10.8, 793.0], [10.9, 793.0], [11.0, 840.0], [11.1, 840.0], [11.2, 840.0], [11.3, 840.0], [11.4, 840.0], [11.5, 892.0], [11.6, 892.0], [11.7, 892.0], [11.8, 892.0], [11.9, 892.0], [12.0, 905.0], [12.1, 905.0], [12.2, 905.0], [12.3, 905.0], [12.4, 905.0], [12.5, 919.0], [12.6, 919.0], [12.7, 919.0], [12.8, 919.0], [12.9, 919.0], [13.0, 920.0], [13.1, 920.0], [13.2, 920.0], [13.3, 920.0], [13.4, 920.0], [13.5, 933.0], [13.6, 933.0], [13.7, 933.0], [13.8, 933.0], [13.9, 933.0], [14.0, 959.0], [14.1, 959.0], [14.2, 959.0], [14.3, 959.0], [14.4, 959.0], [14.5, 963.0], [14.6, 963.0], [14.7, 963.0], [14.8, 963.0], [14.9, 963.0], [15.0, 983.0], [15.1, 983.0], [15.2, 983.0], [15.3, 983.0], [15.4, 983.0], [15.5, 990.0], [15.6, 990.0], [15.7, 990.0], [15.8, 990.0], [15.9, 990.0], [16.0, 1013.0], [16.1, 1013.0], [16.2, 1013.0], [16.3, 1013.0], [16.4, 1013.0], [16.5, 1044.0], [16.6, 1044.0], [16.7, 1044.0], [16.8, 1044.0], [16.9, 1044.0], [17.0, 1068.0], [17.1, 1068.0], [17.2, 1068.0], [17.3, 1068.0], [17.4, 1068.0], [17.5, 1074.0], [17.6, 1074.0], [17.7, 1074.0], [17.8, 1074.0], [17.9, 1074.0], [18.0, 1086.0], [18.1, 1086.0], [18.2, 1086.0], [18.3, 1086.0], [18.4, 1086.0], [18.5, 1103.0], [18.6, 1103.0], [18.7, 1103.0], [18.8, 1103.0], [18.9, 1103.0], [19.0, 1105.0], [19.1, 1105.0], [19.2, 1105.0], [19.3, 1105.0], [19.4, 1105.0], [19.5, 1133.0], [19.6, 1133.0], [19.7, 1133.0], [19.8, 1133.0], [19.9, 1133.0], [20.0, 1142.0], [20.1, 1142.0], [20.2, 1142.0], [20.3, 1142.0], [20.4, 1142.0], [20.5, 1159.0], [20.6, 1159.0], [20.7, 1159.0], [20.8, 1159.0], [20.9, 1159.0], [21.0, 1160.0], [21.1, 1160.0], [21.2, 1160.0], [21.3, 1160.0], [21.4, 1160.0], [21.5, 1165.0], [21.6, 1165.0], [21.7, 1165.0], [21.8, 1165.0], [21.9, 1165.0], [22.0, 1167.0], [22.1, 1167.0], [22.2, 1167.0], [22.3, 1167.0], [22.4, 1167.0], [22.5, 1171.0], [22.6, 1171.0], [22.7, 1171.0], [22.8, 1171.0], [22.9, 1171.0], [23.0, 1174.0], [23.1, 1174.0], [23.2, 1174.0], [23.3, 1174.0], [23.4, 1174.0], [23.5, 1176.0], [23.6, 1176.0], [23.7, 1176.0], [23.8, 1176.0], [23.9, 1176.0], [24.0, 1180.0], [24.1, 1180.0], [24.2, 1180.0], [24.3, 1180.0], [24.4, 1180.0], [24.5, 1193.0], [24.6, 1193.0], [24.7, 1193.0], [24.8, 1193.0], [24.9, 1193.0], [25.0, 1217.0], [25.1, 1217.0], [25.2, 1217.0], [25.3, 1217.0], [25.4, 1217.0], [25.5, 1221.0], [25.6, 1221.0], [25.7, 1221.0], [25.8, 1221.0], [25.9, 1221.0], [26.0, 1225.0], [26.1, 1225.0], [26.2, 1225.0], [26.3, 1225.0], [26.4, 1225.0], [26.5, 1229.0], [26.6, 1229.0], [26.7, 1229.0], [26.8, 1229.0], [26.9, 1229.0], [27.0, 1235.0], [27.1, 1235.0], [27.2, 1235.0], [27.3, 1235.0], [27.4, 1235.0], [27.5, 1241.0], [27.6, 1241.0], [27.7, 1241.0], [27.8, 1241.0], [27.9, 1241.0], [28.0, 1242.0], [28.1, 1242.0], [28.2, 1242.0], [28.3, 1242.0], [28.4, 1242.0], [28.5, 1248.0], [28.6, 1248.0], [28.7, 1248.0], [28.8, 1248.0], [28.9, 1248.0], [29.0, 1250.0], [29.1, 1250.0], [29.2, 1250.0], [29.3, 1250.0], [29.4, 1250.0], [29.5, 1264.0], [29.6, 1264.0], [29.7, 1264.0], [29.8, 1264.0], [29.9, 1264.0], [30.0, 1295.0], [30.1, 1295.0], [30.2, 1295.0], [30.3, 1295.0], [30.4, 1295.0], [30.5, 1316.0], [30.6, 1316.0], [30.7, 1316.0], [30.8, 1316.0], [30.9, 1316.0], [31.0, 1320.0], [31.1, 1320.0], [31.2, 1320.0], [31.3, 1320.0], [31.4, 1320.0], [31.5, 1320.0], [31.6, 1320.0], [31.7, 1320.0], [31.8, 1320.0], [31.9, 1320.0], [32.0, 1328.0], [32.1, 1328.0], [32.2, 1328.0], [32.3, 1328.0], [32.4, 1328.0], [32.5, 1332.0], [32.6, 1332.0], [32.7, 1332.0], [32.8, 1332.0], [32.9, 1332.0], [33.0, 1351.0], [33.1, 1351.0], [33.2, 1351.0], [33.3, 1351.0], [33.4, 1351.0], [33.5, 1352.0], [33.6, 1352.0], [33.7, 1352.0], [33.8, 1352.0], [33.9, 1352.0], [34.0, 1352.0], [34.1, 1352.0], [34.2, 1352.0], [34.3, 1352.0], [34.4, 1352.0], [34.5, 1361.0], [34.6, 1361.0], [34.7, 1361.0], [34.8, 1361.0], [34.9, 1361.0], [35.0, 1361.0], [35.1, 1361.0], [35.2, 1361.0], [35.3, 1361.0], [35.4, 1361.0], [35.5, 1362.0], [35.6, 1362.0], [35.7, 1362.0], [35.8, 1362.0], [35.9, 1362.0], [36.0, 1367.0], [36.1, 1367.0], [36.2, 1367.0], [36.3, 1367.0], [36.4, 1367.0], [36.5, 1371.0], [36.6, 1371.0], [36.7, 1371.0], [36.8, 1371.0], [36.9, 1371.0], [37.0, 1371.0], [37.1, 1371.0], [37.2, 1371.0], [37.3, 1371.0], [37.4, 1371.0], [37.5, 1375.0], [37.6, 1375.0], [37.7, 1375.0], [37.8, 1375.0], [37.9, 1375.0], [38.0, 1385.0], [38.1, 1385.0], [38.2, 1385.0], [38.3, 1385.0], [38.4, 1385.0], [38.5, 1385.0], [38.6, 1385.0], [38.7, 1385.0], [38.8, 1385.0], [38.9, 1385.0], [39.0, 1387.0], [39.1, 1387.0], [39.2, 1387.0], [39.3, 1387.0], [39.4, 1387.0], [39.5, 1387.0], [39.6, 1387.0], [39.7, 1387.0], [39.8, 1387.0], [39.9, 1387.0], [40.0, 1389.0], [40.1, 1389.0], [40.2, 1389.0], [40.3, 1389.0], [40.4, 1389.0], [40.5, 1389.0], [40.6, 1389.0], [40.7, 1389.0], [40.8, 1389.0], [40.9, 1389.0], [41.0, 1400.0], [41.1, 1400.0], [41.2, 1400.0], [41.3, 1400.0], [41.4, 1400.0], [41.5, 1422.0], [41.6, 1422.0], [41.7, 1422.0], [41.8, 1422.0], [41.9, 1422.0], [42.0, 1424.0], [42.1, 1424.0], [42.2, 1424.0], [42.3, 1424.0], [42.4, 1424.0], [42.5, 1436.0], [42.6, 1436.0], [42.7, 1436.0], [42.8, 1436.0], [42.9, 1436.0], [43.0, 1458.0], [43.1, 1458.0], [43.2, 1458.0], [43.3, 1458.0], [43.4, 1458.0], [43.5, 1470.0], [43.6, 1470.0], [43.7, 1470.0], [43.8, 1470.0], [43.9, 1470.0], [44.0, 1472.0], [44.1, 1472.0], [44.2, 1472.0], [44.3, 1472.0], [44.4, 1472.0], [44.5, 1481.0], [44.6, 1481.0], [44.7, 1481.0], [44.8, 1481.0], [44.9, 1481.0], [45.0, 1490.0], [45.1, 1490.0], [45.2, 1490.0], [45.3, 1490.0], [45.4, 1490.0], [45.5, 1492.0], [45.6, 1492.0], [45.7, 1492.0], [45.8, 1492.0], [45.9, 1492.0], [46.0, 1496.0], [46.1, 1496.0], [46.2, 1496.0], [46.3, 1496.0], [46.4, 1496.0], [46.5, 1500.0], [46.6, 1500.0], [46.7, 1500.0], [46.8, 1500.0], [46.9, 1500.0], [47.0, 1505.0], [47.1, 1505.0], [47.2, 1505.0], [47.3, 1505.0], [47.4, 1505.0], [47.5, 1524.0], [47.6, 1524.0], [47.7, 1524.0], [47.8, 1524.0], [47.9, 1524.0], [48.0, 1525.0], [48.1, 1525.0], [48.2, 1525.0], [48.3, 1525.0], [48.4, 1525.0], [48.5, 1529.0], [48.6, 1529.0], [48.7, 1529.0], [48.8, 1529.0], [48.9, 1529.0], [49.0, 1530.0], [49.1, 1530.0], [49.2, 1530.0], [49.3, 1530.0], [49.4, 1530.0], [49.5, 1541.0], [49.6, 1541.0], [49.7, 1541.0], [49.8, 1541.0], [49.9, 1541.0], [50.0, 1544.0], [50.1, 1544.0], [50.2, 1544.0], [50.3, 1544.0], [50.4, 1544.0], [50.5, 1548.0], [50.6, 1548.0], [50.7, 1548.0], [50.8, 1548.0], [50.9, 1548.0], [51.0, 1553.0], [51.1, 1553.0], [51.2, 1553.0], [51.3, 1553.0], [51.4, 1553.0], [51.5, 1563.0], [51.6, 1563.0], [51.7, 1563.0], [51.8, 1563.0], [51.9, 1563.0], [52.0, 1570.0], [52.1, 1570.0], [52.2, 1570.0], [52.3, 1570.0], [52.4, 1570.0], [52.5, 1574.0], [52.6, 1574.0], [52.7, 1574.0], [52.8, 1574.0], [52.9, 1574.0], [53.0, 1587.0], [53.1, 1587.0], [53.2, 1587.0], [53.3, 1587.0], [53.4, 1587.0], [53.5, 1607.0], [53.6, 1607.0], [53.7, 1607.0], [53.8, 1607.0], [53.9, 1607.0], [54.0, 1609.0], [54.1, 1609.0], [54.2, 1609.0], [54.3, 1609.0], [54.4, 1609.0], [54.5, 1614.0], [54.6, 1614.0], [54.7, 1614.0], [54.8, 1614.0], [54.9, 1614.0], [55.0, 1622.0], [55.1, 1622.0], [55.2, 1622.0], [55.3, 1622.0], [55.4, 1622.0], [55.5, 1622.0], [55.6, 1622.0], [55.7, 1622.0], [55.8, 1622.0], [55.9, 1622.0], [56.0, 1625.0], [56.1, 1625.0], [56.2, 1625.0], [56.3, 1625.0], [56.4, 1625.0], [56.5, 1639.0], [56.6, 1639.0], [56.7, 1639.0], [56.8, 1639.0], [56.9, 1639.0], [57.0, 1642.0], [57.1, 1642.0], [57.2, 1642.0], [57.3, 1642.0], [57.4, 1642.0], [57.5, 1653.0], [57.6, 1653.0], [57.7, 1653.0], [57.8, 1653.0], [57.9, 1653.0], [58.0, 1678.0], [58.1, 1678.0], [58.2, 1678.0], [58.3, 1678.0], [58.4, 1678.0], [58.5, 1721.0], [58.6, 1721.0], [58.7, 1721.0], [58.8, 1721.0], [58.9, 1721.0], [59.0, 1741.0], [59.1, 1741.0], [59.2, 1741.0], [59.3, 1741.0], [59.4, 1741.0], [59.5, 1747.0], [59.6, 1747.0], [59.7, 1747.0], [59.8, 1747.0], [59.9, 1747.0], [60.0, 1749.0], [60.1, 1749.0], [60.2, 1749.0], [60.3, 1749.0], [60.4, 1749.0], [60.5, 1753.0], [60.6, 1753.0], [60.7, 1753.0], [60.8, 1753.0], [60.9, 1753.0], [61.0, 1756.0], [61.1, 1756.0], [61.2, 1756.0], [61.3, 1756.0], [61.4, 1756.0], [61.5, 1765.0], [61.6, 1765.0], [61.7, 1765.0], [61.8, 1765.0], [61.9, 1765.0], [62.0, 1780.0], [62.1, 1780.0], [62.2, 1780.0], [62.3, 1780.0], [62.4, 1780.0], [62.5, 1781.0], [62.6, 1781.0], [62.7, 1781.0], [62.8, 1781.0], [62.9, 1781.0], [63.0, 1804.0], [63.1, 1804.0], [63.2, 1804.0], [63.3, 1804.0], [63.4, 1804.0], [63.5, 1820.0], [63.6, 1820.0], [63.7, 1820.0], [63.8, 1820.0], [63.9, 1820.0], [64.0, 1832.0], [64.1, 1832.0], [64.2, 1832.0], [64.3, 1832.0], [64.4, 1832.0], [64.5, 1859.0], [64.6, 1859.0], [64.7, 1859.0], [64.8, 1859.0], [64.9, 1859.0], [65.0, 1882.0], [65.1, 1882.0], [65.2, 1882.0], [65.3, 1882.0], [65.4, 1882.0], [65.5, 1912.0], [65.6, 1912.0], [65.7, 1912.0], [65.8, 1912.0], [65.9, 1912.0], [66.0, 1927.0], [66.1, 1927.0], [66.2, 1927.0], [66.3, 1927.0], [66.4, 1927.0], [66.5, 1931.0], [66.6, 1931.0], [66.7, 1931.0], [66.8, 1931.0], [66.9, 1931.0], [67.0, 1974.0], [67.1, 1974.0], [67.2, 1974.0], [67.3, 1974.0], [67.4, 1974.0], [67.5, 1980.0], [67.6, 1980.0], [67.7, 1980.0], [67.8, 1980.0], [67.9, 1980.0], [68.0, 1991.0], [68.1, 1991.0], [68.2, 1991.0], [68.3, 1991.0], [68.4, 1991.0], [68.5, 2006.0], [68.6, 2006.0], [68.7, 2006.0], [68.8, 2006.0], [68.9, 2006.0], [69.0, 2094.0], [69.1, 2094.0], [69.2, 2094.0], [69.3, 2094.0], [69.4, 2094.0], [69.5, 2106.0], [69.6, 2106.0], [69.7, 2106.0], [69.8, 2106.0], [69.9, 2106.0], [70.0, 2140.0], [70.1, 2140.0], [70.2, 2140.0], [70.3, 2140.0], [70.4, 2140.0], [70.5, 2152.0], [70.6, 2152.0], [70.7, 2152.0], [70.8, 2152.0], [70.9, 2152.0], [71.0, 2157.0], [71.1, 2157.0], [71.2, 2157.0], [71.3, 2157.0], [71.4, 2157.0], [71.5, 2162.0], [71.6, 2162.0], [71.7, 2162.0], [71.8, 2162.0], [71.9, 2162.0], [72.0, 2163.0], [72.1, 2163.0], [72.2, 2163.0], [72.3, 2163.0], [72.4, 2163.0], [72.5, 2180.0], [72.6, 2180.0], [72.7, 2180.0], [72.8, 2180.0], [72.9, 2180.0], [73.0, 2184.0], [73.1, 2184.0], [73.2, 2184.0], [73.3, 2184.0], [73.4, 2184.0], [73.5, 2189.0], [73.6, 2189.0], [73.7, 2189.0], [73.8, 2189.0], [73.9, 2189.0], [74.0, 2200.0], [74.1, 2200.0], [74.2, 2200.0], [74.3, 2200.0], [74.4, 2200.0], [74.5, 2208.0], [74.6, 2208.0], [74.7, 2208.0], [74.8, 2208.0], [74.9, 2208.0], [75.0, 2229.0], [75.1, 2229.0], [75.2, 2229.0], [75.3, 2229.0], [75.4, 2229.0], [75.5, 2259.0], [75.6, 2259.0], [75.7, 2259.0], [75.8, 2259.0], [75.9, 2259.0], [76.0, 2304.0], [76.1, 2304.0], [76.2, 2304.0], [76.3, 2304.0], [76.4, 2304.0], [76.5, 2340.0], [76.6, 2340.0], [76.7, 2340.0], [76.8, 2340.0], [76.9, 2340.0], [77.0, 2346.0], [77.1, 2346.0], [77.2, 2346.0], [77.3, 2346.0], [77.4, 2346.0], [77.5, 2434.0], [77.6, 2434.0], [77.7, 2434.0], [77.8, 2434.0], [77.9, 2434.0], [78.0, 2460.0], [78.1, 2460.0], [78.2, 2460.0], [78.3, 2460.0], [78.4, 2460.0], [78.5, 2479.0], [78.6, 2479.0], [78.7, 2479.0], [78.8, 2479.0], [78.9, 2479.0], [79.0, 2488.0], [79.1, 2488.0], [79.2, 2488.0], [79.3, 2488.0], [79.4, 2488.0], [79.5, 2506.0], [79.6, 2506.0], [79.7, 2506.0], [79.8, 2506.0], [79.9, 2506.0], [80.0, 2513.0], [80.1, 2513.0], [80.2, 2513.0], [80.3, 2513.0], [80.4, 2513.0], [80.5, 2582.0], [80.6, 2582.0], [80.7, 2582.0], [80.8, 2582.0], [80.9, 2582.0], [81.0, 2588.0], [81.1, 2588.0], [81.2, 2588.0], [81.3, 2588.0], [81.4, 2588.0], [81.5, 2675.0], [81.6, 2675.0], [81.7, 2675.0], [81.8, 2675.0], [81.9, 2675.0], [82.0, 2797.0], [82.1, 2797.0], [82.2, 2797.0], [82.3, 2797.0], [82.4, 2797.0], [82.5, 2800.0], [82.6, 2800.0], [82.7, 2800.0], [82.8, 2800.0], [82.9, 2800.0], [83.0, 2817.0], [83.1, 2817.0], [83.2, 2817.0], [83.3, 2817.0], [83.4, 2817.0], [83.5, 3012.0], [83.6, 3012.0], [83.7, 3012.0], [83.8, 3012.0], [83.9, 3012.0], [84.0, 3061.0], [84.1, 3061.0], [84.2, 3061.0], [84.3, 3061.0], [84.4, 3061.0], [84.5, 3062.0], [84.6, 3062.0], [84.7, 3062.0], [84.8, 3062.0], [84.9, 3062.0], [85.0, 3109.0], [85.1, 3109.0], [85.2, 3109.0], [85.3, 3109.0], [85.4, 3109.0], [85.5, 3110.0], [85.6, 3110.0], [85.7, 3110.0], [85.8, 3110.0], [85.9, 3110.0], [86.0, 3126.0], [86.1, 3126.0], [86.2, 3126.0], [86.3, 3126.0], [86.4, 3126.0], [86.5, 3187.0], [86.6, 3187.0], [86.7, 3187.0], [86.8, 3187.0], [86.9, 3187.0], [87.0, 3248.0], [87.1, 3248.0], [87.2, 3248.0], [87.3, 3248.0], [87.4, 3248.0], [87.5, 3250.0], [87.6, 3250.0], [87.7, 3250.0], [87.8, 3250.0], [87.9, 3250.0], [88.0, 3266.0], [88.1, 3266.0], [88.2, 3266.0], [88.3, 3266.0], [88.4, 3266.0], [88.5, 3299.0], [88.6, 3299.0], [88.7, 3299.0], [88.8, 3299.0], [88.9, 3299.0], [89.0, 3345.0], [89.1, 3345.0], [89.2, 3345.0], [89.3, 3345.0], [89.4, 3345.0], [89.5, 3360.0], [89.6, 3360.0], [89.7, 3360.0], [89.8, 3360.0], [89.9, 3360.0], [90.0, 3360.0], [90.1, 3360.0], [90.2, 3360.0], [90.3, 3360.0], [90.4, 3360.0], [90.5, 3375.0], [90.6, 3375.0], [90.7, 3375.0], [90.8, 3375.0], [90.9, 3375.0], [91.0, 3647.0], [91.1, 3647.0], [91.2, 3647.0], [91.3, 3647.0], [91.4, 3647.0], [91.5, 3651.0], [91.6, 3651.0], [91.7, 3651.0], [91.8, 3651.0], [91.9, 3651.0], [92.0, 3679.0], [92.1, 3679.0], [92.2, 3679.0], [92.3, 3679.0], [92.4, 3679.0], [92.5, 3729.0], [92.6, 3729.0], [92.7, 3729.0], [92.8, 3729.0], [92.9, 3729.0], [93.0, 3863.0], [93.1, 3863.0], [93.2, 3863.0], [93.3, 3863.0], [93.4, 3863.0], [93.5, 4093.0], [93.6, 4093.0], [93.7, 4093.0], [93.8, 4093.0], [93.9, 4093.0], [94.0, 4297.0], [94.1, 4297.0], [94.2, 4297.0], [94.3, 4297.0], [94.4, 4297.0], [94.5, 4530.0], [94.6, 4530.0], [94.7, 4530.0], [94.8, 4530.0], [94.9, 4530.0], [95.0, 4710.0], [95.1, 4710.0], [95.2, 4710.0], [95.3, 4710.0], [95.4, 4710.0], [95.5, 4839.0], [95.6, 4839.0], [95.7, 4839.0], [95.8, 4839.0], [95.9, 4839.0], [96.0, 5150.0], [96.1, 5150.0], [96.2, 5150.0], [96.3, 5150.0], [96.4, 5150.0], [96.5, 5649.0], [96.6, 5649.0], [96.7, 5649.0], [96.8, 5649.0], [96.9, 5649.0], [97.0, 7163.0], [97.1, 7163.0], [97.2, 7163.0], [97.3, 7163.0], [97.4, 7163.0], [97.5, 7499.0], [97.6, 7499.0], [97.7, 7499.0], [97.8, 7499.0], [97.9, 7499.0], [98.0, 8600.0], [98.1, 8600.0], [98.2, 8600.0], [98.3, 8600.0], [98.4, 8600.0], [98.5, 12294.0], [98.6, 12294.0], [98.7, 12294.0], [98.8, 12294.0], [98.9, 12294.0], [99.0, 14371.0], [99.1, 14371.0], [99.2, 14371.0], [99.3, 14371.0], [99.4, 14371.0], [99.5, 15510.0], [99.6, 15510.0], [99.7, 15510.0], [99.8, 15510.0], [99.9, 15510.0]], "isOverall": false, "label": "Get product", "isController": false}, {"data": [[0.0, 189.0], [0.1, 189.0], [0.2, 189.0], [0.3, 189.0], [0.4, 189.0], [0.5, 190.0], [0.6, 190.0], [0.7, 190.0], [0.8, 190.0], [0.9, 190.0], [1.0, 206.0], [1.1, 206.0], [1.2, 206.0], [1.3, 206.0], [1.4, 206.0], [1.5, 242.0], [1.6, 242.0], [1.7, 242.0], [1.8, 242.0], [1.9, 242.0], [2.0, 251.0], [2.1, 251.0], [2.2, 251.0], [2.3, 251.0], [2.4, 251.0], [2.5, 260.0], [2.6, 260.0], [2.7, 260.0], [2.8, 260.0], [2.9, 260.0], [3.0, 304.0], [3.1, 304.0], [3.2, 304.0], [3.3, 304.0], [3.4, 304.0], [3.5, 316.0], [3.6, 316.0], [3.7, 316.0], [3.8, 316.0], [3.9, 316.0], [4.0, 319.0], [4.1, 319.0], [4.2, 319.0], [4.3, 319.0], [4.4, 319.0], [4.5, 323.0], [4.6, 323.0], [4.7, 323.0], [4.8, 323.0], [4.9, 323.0], [5.0, 329.0], [5.1, 329.0], [5.2, 329.0], [5.3, 329.0], [5.4, 329.0], [5.5, 368.0], [5.6, 368.0], [5.7, 368.0], [5.8, 368.0], [5.9, 368.0], [6.0, 377.0], [6.1, 377.0], [6.2, 377.0], [6.3, 377.0], [6.4, 377.0], [6.5, 388.0], [6.6, 388.0], [6.7, 388.0], [6.8, 388.0], [6.9, 388.0], [7.0, 402.0], [7.1, 402.0], [7.2, 402.0], [7.3, 402.0], [7.4, 402.0], [7.5, 428.0], [7.6, 428.0], [7.7, 428.0], [7.8, 428.0], [7.9, 428.0], [8.0, 432.0], [8.1, 432.0], [8.2, 432.0], [8.3, 432.0], [8.4, 432.0], [8.5, 460.0], [8.6, 460.0], [8.7, 460.0], [8.8, 460.0], [8.9, 460.0], [9.0, 464.0], [9.1, 464.0], [9.2, 464.0], [9.3, 464.0], [9.4, 464.0], [9.5, 477.0], [9.6, 477.0], [9.7, 477.0], [9.8, 477.0], [9.9, 477.0], [10.0, 490.0], [10.1, 490.0], [10.2, 490.0], [10.3, 490.0], [10.4, 490.0], [10.5, 494.0], [10.6, 494.0], [10.7, 494.0], [10.8, 494.0], [10.9, 494.0], [11.0, 508.0], [11.1, 508.0], [11.2, 508.0], [11.3, 508.0], [11.4, 508.0], [11.5, 509.0], [11.6, 509.0], [11.7, 509.0], [11.8, 509.0], [11.9, 509.0], [12.0, 510.0], [12.1, 510.0], [12.2, 510.0], [12.3, 510.0], [12.4, 510.0], [12.5, 512.0], [12.6, 512.0], [12.7, 512.0], [12.8, 512.0], [12.9, 512.0], [13.0, 513.0], [13.1, 513.0], [13.2, 513.0], [13.3, 513.0], [13.4, 513.0], [13.5, 523.0], [13.6, 523.0], [13.7, 523.0], [13.8, 523.0], [13.9, 523.0], [14.0, 523.0], [14.1, 523.0], [14.2, 523.0], [14.3, 523.0], [14.4, 523.0], [14.5, 531.0], [14.6, 531.0], [14.7, 531.0], [14.8, 531.0], [14.9, 531.0], [15.0, 531.0], [15.1, 531.0], [15.2, 531.0], [15.3, 531.0], [15.4, 531.0], [15.5, 539.0], [15.6, 539.0], [15.7, 539.0], [15.8, 539.0], [15.9, 539.0], [16.0, 557.0], [16.1, 557.0], [16.2, 557.0], [16.3, 557.0], [16.4, 557.0], [16.5, 560.0], [16.6, 560.0], [16.7, 560.0], [16.8, 560.0], [16.9, 560.0], [17.0, 563.0], [17.1, 563.0], [17.2, 563.0], [17.3, 563.0], [17.4, 563.0], [17.5, 572.0], [17.6, 572.0], [17.7, 572.0], [17.8, 572.0], [17.9, 572.0], [18.0, 575.0], [18.1, 575.0], [18.2, 575.0], [18.3, 575.0], [18.4, 575.0], [18.5, 578.0], [18.6, 578.0], [18.7, 578.0], [18.8, 578.0], [18.9, 578.0], [19.0, 584.0], [19.1, 584.0], [19.2, 584.0], [19.3, 584.0], [19.4, 584.0], [19.5, 585.0], [19.6, 585.0], [19.7, 585.0], [19.8, 585.0], [19.9, 585.0], [20.0, 590.0], [20.1, 590.0], [20.2, 590.0], [20.3, 590.0], [20.4, 590.0], [20.5, 590.0], [20.6, 590.0], [20.7, 590.0], [20.8, 590.0], [20.9, 590.0], [21.0, 593.0], [21.1, 593.0], [21.2, 593.0], [21.3, 593.0], [21.4, 593.0], [21.5, 598.0], [21.6, 598.0], [21.7, 598.0], [21.8, 598.0], [21.9, 598.0], [22.0, 600.0], [22.1, 600.0], [22.2, 600.0], [22.3, 600.0], [22.4, 600.0], [22.5, 607.0], [22.6, 607.0], [22.7, 607.0], [22.8, 607.0], [22.9, 607.0], [23.0, 608.0], [23.1, 608.0], [23.2, 608.0], [23.3, 608.0], [23.4, 608.0], [23.5, 611.0], [23.6, 611.0], [23.7, 611.0], [23.8, 611.0], [23.9, 611.0], [24.0, 615.0], [24.1, 615.0], [24.2, 615.0], [24.3, 615.0], [24.4, 615.0], [24.5, 620.0], [24.6, 620.0], [24.7, 620.0], [24.8, 620.0], [24.9, 620.0], [25.0, 627.0], [25.1, 627.0], [25.2, 627.0], [25.3, 627.0], [25.4, 627.0], [25.5, 628.0], [25.6, 628.0], [25.7, 628.0], [25.8, 628.0], [25.9, 628.0], [26.0, 630.0], [26.1, 630.0], [26.2, 630.0], [26.3, 630.0], [26.4, 630.0], [26.5, 631.0], [26.6, 631.0], [26.7, 631.0], [26.8, 631.0], [26.9, 631.0], [27.0, 633.0], [27.1, 633.0], [27.2, 633.0], [27.3, 633.0], [27.4, 633.0], [27.5, 640.0], [27.6, 640.0], [27.7, 640.0], [27.8, 640.0], [27.9, 640.0], [28.0, 641.0], [28.1, 641.0], [28.2, 641.0], [28.3, 641.0], [28.4, 641.0], [28.5, 644.0], [28.6, 644.0], [28.7, 644.0], [28.8, 644.0], [28.9, 644.0], [29.0, 650.0], [29.1, 650.0], [29.2, 650.0], [29.3, 650.0], [29.4, 650.0], [29.5, 657.0], [29.6, 657.0], [29.7, 657.0], [29.8, 657.0], [29.9, 657.0], [30.0, 657.0], [30.1, 657.0], [30.2, 657.0], [30.3, 657.0], [30.4, 657.0], [30.5, 659.0], [30.6, 659.0], [30.7, 659.0], [30.8, 659.0], [30.9, 659.0], [31.0, 660.0], [31.1, 660.0], [31.2, 660.0], [31.3, 660.0], [31.4, 660.0], [31.5, 661.0], [31.6, 661.0], [31.7, 661.0], [31.8, 661.0], [31.9, 661.0], [32.0, 667.0], [32.1, 667.0], [32.2, 667.0], [32.3, 667.0], [32.4, 667.0], [32.5, 674.0], [32.6, 674.0], [32.7, 674.0], [32.8, 674.0], [32.9, 674.0], [33.0, 674.0], [33.1, 674.0], [33.2, 674.0], [33.3, 674.0], [33.4, 674.0], [33.5, 698.0], [33.6, 698.0], [33.7, 698.0], [33.8, 698.0], [33.9, 698.0], [34.0, 699.0], [34.1, 699.0], [34.2, 699.0], [34.3, 699.0], [34.4, 699.0], [34.5, 709.0], [34.6, 709.0], [34.7, 709.0], [34.8, 709.0], [34.9, 709.0], [35.0, 718.0], [35.1, 718.0], [35.2, 718.0], [35.3, 718.0], [35.4, 718.0], [35.5, 720.0], [35.6, 720.0], [35.7, 720.0], [35.8, 720.0], [35.9, 720.0], [36.0, 730.0], [36.1, 730.0], [36.2, 730.0], [36.3, 730.0], [36.4, 730.0], [36.5, 734.0], [36.6, 734.0], [36.7, 734.0], [36.8, 734.0], [36.9, 734.0], [37.0, 759.0], [37.1, 759.0], [37.2, 759.0], [37.3, 759.0], [37.4, 759.0], [37.5, 760.0], [37.6, 760.0], [37.7, 760.0], [37.8, 760.0], [37.9, 760.0], [38.0, 761.0], [38.1, 761.0], [38.2, 761.0], [38.3, 761.0], [38.4, 761.0], [38.5, 780.0], [38.6, 780.0], [38.7, 780.0], [38.8, 780.0], [38.9, 780.0], [39.0, 800.0], [39.1, 800.0], [39.2, 800.0], [39.3, 800.0], [39.4, 800.0], [39.5, 800.0], [39.6, 800.0], [39.7, 800.0], [39.8, 800.0], [39.9, 800.0], [40.0, 811.0], [40.1, 811.0], [40.2, 811.0], [40.3, 811.0], [40.4, 811.0], [40.5, 818.0], [40.6, 818.0], [40.7, 818.0], [40.8, 818.0], [40.9, 818.0], [41.0, 830.0], [41.1, 830.0], [41.2, 830.0], [41.3, 830.0], [41.4, 830.0], [41.5, 852.0], [41.6, 852.0], [41.7, 852.0], [41.8, 852.0], [41.9, 852.0], [42.0, 861.0], [42.1, 861.0], [42.2, 861.0], [42.3, 861.0], [42.4, 861.0], [42.5, 869.0], [42.6, 869.0], [42.7, 869.0], [42.8, 869.0], [42.9, 869.0], [43.0, 871.0], [43.1, 871.0], [43.2, 871.0], [43.3, 871.0], [43.4, 871.0], [43.5, 877.0], [43.6, 877.0], [43.7, 877.0], [43.8, 877.0], [43.9, 877.0], [44.0, 882.0], [44.1, 882.0], [44.2, 882.0], [44.3, 882.0], [44.4, 882.0], [44.5, 884.0], [44.6, 884.0], [44.7, 884.0], [44.8, 884.0], [44.9, 884.0], [45.0, 895.0], [45.1, 895.0], [45.2, 895.0], [45.3, 895.0], [45.4, 895.0], [45.5, 898.0], [45.6, 898.0], [45.7, 898.0], [45.8, 898.0], [45.9, 898.0], [46.0, 899.0], [46.1, 899.0], [46.2, 899.0], [46.3, 899.0], [46.4, 899.0], [46.5, 909.0], [46.6, 909.0], [46.7, 909.0], [46.8, 909.0], [46.9, 909.0], [47.0, 915.0], [47.1, 915.0], [47.2, 915.0], [47.3, 915.0], [47.4, 915.0], [47.5, 916.0], [47.6, 916.0], [47.7, 916.0], [47.8, 916.0], [47.9, 916.0], [48.0, 918.0], [48.1, 918.0], [48.2, 918.0], [48.3, 918.0], [48.4, 918.0], [48.5, 919.0], [48.6, 919.0], [48.7, 919.0], [48.8, 919.0], [48.9, 919.0], [49.0, 923.0], [49.1, 923.0], [49.2, 923.0], [49.3, 923.0], [49.4, 923.0], [49.5, 929.0], [49.6, 929.0], [49.7, 929.0], [49.8, 929.0], [49.9, 929.0], [50.0, 935.0], [50.1, 935.0], [50.2, 935.0], [50.3, 935.0], [50.4, 935.0], [50.5, 938.0], [50.6, 938.0], [50.7, 938.0], [50.8, 938.0], [50.9, 938.0], [51.0, 940.0], [51.1, 940.0], [51.2, 940.0], [51.3, 940.0], [51.4, 940.0], [51.5, 949.0], [51.6, 949.0], [51.7, 949.0], [51.8, 949.0], [51.9, 949.0], [52.0, 953.0], [52.1, 953.0], [52.2, 953.0], [52.3, 953.0], [52.4, 953.0], [52.5, 960.0], [52.6, 960.0], [52.7, 960.0], [52.8, 960.0], [52.9, 960.0], [53.0, 965.0], [53.1, 965.0], [53.2, 965.0], [53.3, 965.0], [53.4, 965.0], [53.5, 969.0], [53.6, 969.0], [53.7, 969.0], [53.8, 969.0], [53.9, 969.0], [54.0, 970.0], [54.1, 970.0], [54.2, 970.0], [54.3, 970.0], [54.4, 970.0], [54.5, 978.0], [54.6, 978.0], [54.7, 978.0], [54.8, 978.0], [54.9, 978.0], [55.0, 980.0], [55.1, 980.0], [55.2, 980.0], [55.3, 980.0], [55.4, 980.0], [55.5, 981.0], [55.6, 981.0], [55.7, 981.0], [55.8, 981.0], [55.9, 981.0], [56.0, 991.0], [56.1, 991.0], [56.2, 991.0], [56.3, 991.0], [56.4, 991.0], [56.5, 998.0], [56.6, 998.0], [56.7, 998.0], [56.8, 998.0], [56.9, 998.0], [57.0, 1009.0], [57.1, 1009.0], [57.2, 1009.0], [57.3, 1009.0], [57.4, 1009.0], [57.5, 1010.0], [57.6, 1010.0], [57.7, 1010.0], [57.8, 1010.0], [57.9, 1010.0], [58.0, 1015.0], [58.1, 1015.0], [58.2, 1015.0], [58.3, 1015.0], [58.4, 1015.0], [58.5, 1019.0], [58.6, 1019.0], [58.7, 1019.0], [58.8, 1019.0], [58.9, 1019.0], [59.0, 1029.0], [59.1, 1029.0], [59.2, 1029.0], [59.3, 1029.0], [59.4, 1029.0], [59.5, 1034.0], [59.6, 1034.0], [59.7, 1034.0], [59.8, 1034.0], [59.9, 1034.0], [60.0, 1037.0], [60.1, 1037.0], [60.2, 1037.0], [60.3, 1037.0], [60.4, 1037.0], [60.5, 1038.0], [60.6, 1038.0], [60.7, 1038.0], [60.8, 1038.0], [60.9, 1038.0], [61.0, 1045.0], [61.1, 1045.0], [61.2, 1045.0], [61.3, 1045.0], [61.4, 1045.0], [61.5, 1045.0], [61.6, 1045.0], [61.7, 1045.0], [61.8, 1045.0], [61.9, 1045.0], [62.0, 1047.0], [62.1, 1047.0], [62.2, 1047.0], [62.3, 1047.0], [62.4, 1047.0], [62.5, 1049.0], [62.6, 1049.0], [62.7, 1049.0], [62.8, 1049.0], [62.9, 1049.0], [63.0, 1064.0], [63.1, 1064.0], [63.2, 1064.0], [63.3, 1064.0], [63.4, 1064.0], [63.5, 1083.0], [63.6, 1083.0], [63.7, 1083.0], [63.8, 1083.0], [63.9, 1083.0], [64.0, 1090.0], [64.1, 1090.0], [64.2, 1090.0], [64.3, 1090.0], [64.4, 1090.0], [64.5, 1102.0], [64.6, 1102.0], [64.7, 1102.0], [64.8, 1102.0], [64.9, 1102.0], [65.0, 1108.0], [65.1, 1108.0], [65.2, 1108.0], [65.3, 1108.0], [65.4, 1108.0], [65.5, 1141.0], [65.6, 1141.0], [65.7, 1141.0], [65.8, 1141.0], [65.9, 1141.0], [66.0, 1141.0], [66.1, 1141.0], [66.2, 1141.0], [66.3, 1141.0], [66.4, 1141.0], [66.5, 1148.0], [66.6, 1148.0], [66.7, 1148.0], [66.8, 1148.0], [66.9, 1148.0], [67.0, 1152.0], [67.1, 1152.0], [67.2, 1152.0], [67.3, 1152.0], [67.4, 1152.0], [67.5, 1171.0], [67.6, 1171.0], [67.7, 1171.0], [67.8, 1171.0], [67.9, 1171.0], [68.0, 1179.0], [68.1, 1179.0], [68.2, 1179.0], [68.3, 1179.0], [68.4, 1179.0], [68.5, 1183.0], [68.6, 1183.0], [68.7, 1183.0], [68.8, 1183.0], [68.9, 1183.0], [69.0, 1195.0], [69.1, 1195.0], [69.2, 1195.0], [69.3, 1195.0], [69.4, 1195.0], [69.5, 1220.0], [69.6, 1220.0], [69.7, 1220.0], [69.8, 1220.0], [69.9, 1220.0], [70.0, 1223.0], [70.1, 1223.0], [70.2, 1223.0], [70.3, 1223.0], [70.4, 1223.0], [70.5, 1305.0], [70.6, 1305.0], [70.7, 1305.0], [70.8, 1305.0], [70.9, 1305.0], [71.0, 1335.0], [71.1, 1335.0], [71.2, 1335.0], [71.3, 1335.0], [71.4, 1335.0], [71.5, 1354.0], [71.6, 1354.0], [71.7, 1354.0], [71.8, 1354.0], [71.9, 1354.0], [72.0, 1354.0], [72.1, 1354.0], [72.2, 1354.0], [72.3, 1354.0], [72.4, 1354.0], [72.5, 1378.0], [72.6, 1378.0], [72.7, 1378.0], [72.8, 1378.0], [72.9, 1378.0], [73.0, 1384.0], [73.1, 1384.0], [73.2, 1384.0], [73.3, 1384.0], [73.4, 1384.0], [73.5, 1390.0], [73.6, 1390.0], [73.7, 1390.0], [73.8, 1390.0], [73.9, 1390.0], [74.0, 1391.0], [74.1, 1391.0], [74.2, 1391.0], [74.3, 1391.0], [74.4, 1391.0], [74.5, 1399.0], [74.6, 1399.0], [74.7, 1399.0], [74.8, 1399.0], [74.9, 1399.0], [75.0, 1430.0], [75.1, 1430.0], [75.2, 1430.0], [75.3, 1430.0], [75.4, 1430.0], [75.5, 1450.0], [75.6, 1450.0], [75.7, 1450.0], [75.8, 1450.0], [75.9, 1450.0], [76.0, 1463.0], [76.1, 1463.0], [76.2, 1463.0], [76.3, 1463.0], [76.4, 1463.0], [76.5, 1474.0], [76.6, 1474.0], [76.7, 1474.0], [76.8, 1474.0], [76.9, 1474.0], [77.0, 1511.0], [77.1, 1511.0], [77.2, 1511.0], [77.3, 1511.0], [77.4, 1511.0], [77.5, 1550.0], [77.6, 1550.0], [77.7, 1550.0], [77.8, 1550.0], [77.9, 1550.0], [78.0, 1590.0], [78.1, 1590.0], [78.2, 1590.0], [78.3, 1590.0], [78.4, 1590.0], [78.5, 1599.0], [78.6, 1599.0], [78.7, 1599.0], [78.8, 1599.0], [78.9, 1599.0], [79.0, 1659.0], [79.1, 1659.0], [79.2, 1659.0], [79.3, 1659.0], [79.4, 1659.0], [79.5, 1664.0], [79.6, 1664.0], [79.7, 1664.0], [79.8, 1664.0], [79.9, 1664.0], [80.0, 1694.0], [80.1, 1694.0], [80.2, 1694.0], [80.3, 1694.0], [80.4, 1694.0], [80.5, 1699.0], [80.6, 1699.0], [80.7, 1699.0], [80.8, 1699.0], [80.9, 1699.0], [81.0, 1721.0], [81.1, 1721.0], [81.2, 1721.0], [81.3, 1721.0], [81.4, 1721.0], [81.5, 1914.0], [81.6, 1914.0], [81.7, 1914.0], [81.8, 1914.0], [81.9, 1914.0], [82.0, 1988.0], [82.1, 1988.0], [82.2, 1988.0], [82.3, 1988.0], [82.4, 1988.0], [82.5, 2009.0], [82.6, 2009.0], [82.7, 2009.0], [82.8, 2009.0], [82.9, 2009.0], [83.0, 2016.0], [83.1, 2016.0], [83.2, 2016.0], [83.3, 2016.0], [83.4, 2016.0], [83.5, 2032.0], [83.6, 2032.0], [83.7, 2032.0], [83.8, 2032.0], [83.9, 2032.0], [84.0, 2055.0], [84.1, 2055.0], [84.2, 2055.0], [84.3, 2055.0], [84.4, 2055.0], [84.5, 2119.0], [84.6, 2119.0], [84.7, 2119.0], [84.8, 2119.0], [84.9, 2119.0], [85.0, 2139.0], [85.1, 2139.0], [85.2, 2139.0], [85.3, 2139.0], [85.4, 2139.0], [85.5, 2158.0], [85.6, 2158.0], [85.7, 2158.0], [85.8, 2158.0], [85.9, 2158.0], [86.0, 2288.0], [86.1, 2288.0], [86.2, 2288.0], [86.3, 2288.0], [86.4, 2288.0], [86.5, 2302.0], [86.6, 2302.0], [86.7, 2302.0], [86.8, 2302.0], [86.9, 2302.0], [87.0, 2317.0], [87.1, 2317.0], [87.2, 2317.0], [87.3, 2317.0], [87.4, 2317.0], [87.5, 2360.0], [87.6, 2360.0], [87.7, 2360.0], [87.8, 2360.0], [87.9, 2360.0], [88.0, 2460.0], [88.1, 2460.0], [88.2, 2460.0], [88.3, 2460.0], [88.4, 2460.0], [88.5, 2550.0], [88.6, 2550.0], [88.7, 2550.0], [88.8, 2550.0], [88.9, 2550.0], [89.0, 2661.0], [89.1, 2661.0], [89.2, 2661.0], [89.3, 2661.0], [89.4, 2661.0], [89.5, 2697.0], [89.6, 2697.0], [89.7, 2697.0], [89.8, 2697.0], [89.9, 2697.0], [90.0, 2713.0], [90.1, 2713.0], [90.2, 2713.0], [90.3, 2713.0], [90.4, 2713.0], [90.5, 2741.0], [90.6, 2741.0], [90.7, 2741.0], [90.8, 2741.0], [90.9, 2741.0], [91.0, 2765.0], [91.1, 2765.0], [91.2, 2765.0], [91.3, 2765.0], [91.4, 2765.0], [91.5, 3020.0], [91.6, 3020.0], [91.7, 3020.0], [91.8, 3020.0], [91.9, 3020.0], [92.0, 3041.0], [92.1, 3041.0], [92.2, 3041.0], [92.3, 3041.0], [92.4, 3041.0], [92.5, 3168.0], [92.6, 3168.0], [92.7, 3168.0], [92.8, 3168.0], [92.9, 3168.0], [93.0, 3179.0], [93.1, 3179.0], [93.2, 3179.0], [93.3, 3179.0], [93.4, 3179.0], [93.5, 3221.0], [93.6, 3221.0], [93.7, 3221.0], [93.8, 3221.0], [93.9, 3221.0], [94.0, 3255.0], [94.1, 3255.0], [94.2, 3255.0], [94.3, 3255.0], [94.4, 3255.0], [94.5, 3318.0], [94.6, 3318.0], [94.7, 3318.0], [94.8, 3318.0], [94.9, 3318.0], [95.0, 3379.0], [95.1, 3379.0], [95.2, 3379.0], [95.3, 3379.0], [95.4, 3379.0], [95.5, 3419.0], [95.6, 3419.0], [95.7, 3419.0], [95.8, 3419.0], [95.9, 3419.0], [96.0, 3834.0], [96.1, 3834.0], [96.2, 3834.0], [96.3, 3834.0], [96.4, 3834.0], [96.5, 4109.0], [96.6, 4109.0], [96.7, 4109.0], [96.8, 4109.0], [96.9, 4109.0], [97.0, 4154.0], [97.1, 4154.0], [97.2, 4154.0], [97.3, 4154.0], [97.4, 4154.0], [97.5, 4301.0], [97.6, 4301.0], [97.7, 4301.0], [97.8, 4301.0], [97.9, 4301.0], [98.0, 4462.0], [98.1, 4462.0], [98.2, 4462.0], [98.3, 4462.0], [98.4, 4462.0], [98.5, 4544.0], [98.6, 4544.0], [98.7, 4544.0], [98.8, 4544.0], [98.9, 4544.0], [99.0, 6256.0], [99.1, 6256.0], [99.2, 6256.0], [99.3, 6256.0], [99.4, 6256.0], [99.5, 6539.0], [99.6, 6539.0], [99.7, 6539.0], [99.8, 6539.0], [99.9, 6539.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 25.0, "series": [{"data": [[600.0, 2.0], [700.0, 4.0], [800.0, 12.0], [900.0, 8.0], [1000.0, 13.0], [1100.0, 17.0], [1200.0, 19.0], [1300.0, 10.0], [1400.0, 5.0], [1500.0, 8.0], [1600.0, 9.0], [1700.0, 11.0], [1800.0, 5.0], [1900.0, 3.0], [2000.0, 5.0], [2100.0, 6.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 1.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 3.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [4100.0, 3.0], [4600.0, 3.0], [4400.0, 1.0], [4500.0, 1.0], [4700.0, 2.0], [4900.0, 1.0], [5100.0, 1.0], [5000.0, 1.0], [5300.0, 2.0], [5400.0, 2.0], [5500.0, 1.0], [5800.0, 1.0], [6100.0, 1.0], [6200.0, 1.0], [6800.0, 1.0], [7200.0, 1.0], [7500.0, 1.0], [8300.0, 1.0], [9100.0, 1.0], [10900.0, 1.0], [100.0, 4.0], [200.0, 1.0], [300.0, 3.0], [400.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "Sell product", "isController": false}, {"data": [[600.0, 5.0], [700.0, 7.0], [800.0, 7.0], [900.0, 8.0], [1000.0, 8.0], [1100.0, 8.0], [1200.0, 15.0], [1300.0, 10.0], [1400.0, 8.0], [1500.0, 16.0], [1600.0, 9.0], [1700.0, 12.0], [1800.0, 3.0], [1900.0, 9.0], [2000.0, 4.0], [2100.0, 6.0], [2300.0, 3.0], [2200.0, 4.0], [2400.0, 1.0], [2500.0, 4.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 4.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3200.0, 4.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [4400.0, 3.0], [4700.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [6000.0, 1.0], [7200.0, 1.0], [7800.0, 1.0], [13500.0, 1.0], [100.0, 3.0], [200.0, 4.0], [300.0, 3.0], [400.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "Get product ID", "isController": false}, {"data": [[8600.0, 1.0], [600.0, 2.0], [700.0, 8.0], [12200.0, 1.0], [800.0, 2.0], [14300.0, 1.0], [900.0, 8.0], [15500.0, 1.0], [1000.0, 5.0], [1100.0, 13.0], [1200.0, 11.0], [1300.0, 21.0], [1400.0, 11.0], [1500.0, 14.0], [1600.0, 10.0], [100.0, 2.0], [1700.0, 9.0], [1800.0, 5.0], [1900.0, 6.0], [2000.0, 2.0], [2100.0, 9.0], [2300.0, 3.0], [2200.0, 4.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 2.0], [3000.0, 3.0], [3100.0, 4.0], [3300.0, 4.0], [3200.0, 4.0], [200.0, 2.0], [3700.0, 1.0], [3600.0, 3.0], [3800.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4500.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [5600.0, 1.0], [400.0, 6.0], [7100.0, 1.0], [7400.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Get product", "isController": false}, {"data": [[600.0, 25.0], [700.0, 9.0], [800.0, 15.0], [900.0, 21.0], [1000.0, 15.0], [1100.0, 10.0], [1200.0, 2.0], [1300.0, 9.0], [1400.0, 4.0], [1500.0, 4.0], [1600.0, 4.0], [100.0, 2.0], [1700.0, 1.0], [1900.0, 2.0], [2000.0, 4.0], [2100.0, 3.0], [2300.0, 3.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 3.0], [3000.0, 2.0], [3100.0, 2.0], [3300.0, 2.0], [3200.0, 2.0], [200.0, 4.0], [3400.0, 1.0], [3800.0, 1.0], [4100.0, 2.0], [4300.0, 1.0], [4400.0, 1.0], [4500.0, 1.0], [300.0, 8.0], [6200.0, 1.0], [400.0, 8.0], [6500.0, 1.0], [500.0, 22.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 44.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 293.0, "series": [{"data": [[0.0, 44.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 293.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 274.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 189.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 15.621527777777768, "minX": 1.695969E12, "maxY": 19.935546875000018, "series": [{"data": [[1.695969E12, 19.935546875000018], [1.69596906E12, 15.621527777777768]], "isOverall": false, "label": "Seller", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69596906E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 139.0, "minX": 1.0, "maxY": 6539.0, "series": [{"data": [[2.0, 438.33333333333337], [34.0, 943.6666666666666], [37.0, 1184.0], [39.0, 1719.0], [38.0, 1561.3333333333333], [40.0, 3935.818181818183], [6.0, 1247.0], [7.0, 4094.666666666667], [9.0, 663.0], [10.0, 1589.0], [11.0, 1239.0], [12.0, 589.75], [13.0, 879.0], [15.0, 1482.0], [16.0, 1384.1], [1.0, 171.0], [17.0, 1204.5], [19.0, 1015.5], [20.0, 1702.1058823529415], [21.0, 2443.3684210526317], [22.0, 2434.333333333333], [26.0, 1780.0], [27.0, 4679.0], [28.0, 1384.0], [29.0, 1214.0], [30.0, 1120.0], [31.0, 1601.5]], "isOverall": false, "label": "Sell product", "isController": false}, {"data": [[23.089999999999993, 2064.320000000001]], "isOverall": false, "label": "Sell product-Aggregated", "isController": false}, {"data": [[33.0, 1427.5], [2.0, 2414.0], [34.0, 1148.5], [37.0, 1497.0], [36.0, 1957.6666666666667], [39.0, 1926.0], [38.0, 1963.0], [40.0, 1994.8823529411761], [3.0, 720.0], [4.0, 500.0], [5.0, 139.0], [6.0, 4460.0], [7.0, 397.6666666666667], [8.0, 1843.5], [9.0, 197.0], [10.0, 1201.0], [11.0, 764.6666666666666], [12.0, 716.0], [13.0, 1436.0], [14.0, 1080.0], [15.0, 1124.0], [16.0, 2139.428571428571], [1.0, 3766.0], [17.0, 1769.625], [18.0, 1286.0], [19.0, 1471.6], [20.0, 2148.0561797752816], [21.0, 1690.6666666666667], [22.0, 1797.0], [27.0, 1590.0], [29.0, 2703.8], [30.0, 1686.75]], "isOverall": false, "label": "Get product ID", "isController": false}, {"data": [[21.500000000000004, 1903.9599999999998]], "isOverall": false, "label": "Get product ID-Aggregated", "isController": false}, {"data": [[33.0, 2283.0], [32.0, 5163.0], [2.0, 458.33333333333337], [34.0, 1780.0], [37.0, 2490.6666666666665], [39.0, 4656.0], [38.0, 1364.6], [40.0, 2167.2173913043475], [4.0, 3061.0], [5.0, 3001.0], [7.0, 1134.5], [8.0, 252.5], [9.0, 793.0], [12.0, 1335.5714285714287], [13.0, 3710.5], [15.0, 1537.75], [16.0, 4057.6666666666665], [1.0, 158.0], [17.0, 2248.4444444444443], [19.0, 3113.142857142857], [20.0, 1848.7926829268295], [21.0, 1804.416666666667], [22.0, 1320.0], [25.0, 1074.0], [27.0, 1389.0], [28.0, 1103.0]], "isOverall": false, "label": "Get product", "isController": false}, {"data": [[22.314999999999994, 2053.8099999999995]], "isOverall": false, "label": "Get product-Aggregated", "isController": false}, {"data": [[33.0, 745.3333333333334], [32.0, 1464.75], [2.0, 189.0], [34.0, 630.0], [37.0, 1014.5], [39.0, 800.0], [38.0, 757.0], [40.0, 1665.8749999999998], [4.0, 206.0], [5.0, 6539.0], [7.0, 246.5], [8.0, 316.0], [10.0, 319.0], [11.0, 260.0], [12.0, 505.0], [13.0, 1156.2], [15.0, 644.0], [16.0, 706.1428571428572], [1.0, 190.0], [17.0, 1562.0], [19.0, 1129.6], [20.0, 1195.4761904761901], [21.0, 1236.1176470588234], [22.0, 2130.6666666666665], [26.0, 1147.0], [27.0, 1145.5], [29.0, 1933.6666666666667], [30.0, 1451.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[23.594999999999988, 1256.2599999999995]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 40.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9614.516666666666, "minX": 1.695969E12, "maxY": 41332.98333333333, "series": [{"data": [[1.695969E12, 16470.133333333335], [1.69596906E12, 9614.516666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.695969E12, 41332.98333333333], [1.69596906E12, 21005.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69596906E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1088.5846153846157, "minX": 1.695969E12, "maxY": 2468.6691729323315, "series": [{"data": [[1.695969E12, 2468.6691729323315], [1.69596906E12, 1261.6567164179103]], "isOverall": false, "label": "Sell product", "isController": false}, {"data": [[1.695969E12, 2013.838983050848], [1.69596906E12, 1745.8414634146338]], "isOverall": false, "label": "Get product ID", "isController": false}, {"data": [[1.695969E12, 2040.1746031746025], [1.69596906E12, 2077.027027027026]], "isOverall": false, "label": "Get product", "isController": false}, {"data": [[1.695969E12, 1336.9925925925918], [1.69596906E12, 1088.5846153846157]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69596906E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1088.2307692307693, "minX": 1.695969E12, "maxY": 2468.3909774436106, "series": [{"data": [[1.695969E12, 2468.3909774436106], [1.69596906E12, 1261.4626865671644]], "isOverall": false, "label": "Sell product", "isController": false}, {"data": [[1.695969E12, 2013.6101694915249], [1.69596906E12, 1745.5121951219512]], "isOverall": false, "label": "Get product ID", "isController": false}, {"data": [[1.695969E12, 2039.904761904761], [1.69596906E12, 2076.783783783783]], "isOverall": false, "label": "Get product", "isController": false}, {"data": [[1.695969E12, 1336.7851851851847], [1.69596906E12, 1088.2307692307693]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69596906E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 173.46268656716416, "minX": 1.695969E12, "maxY": 454.68292682926835, "series": [{"data": [[1.695969E12, 378.3759398496241], [1.69596906E12, 173.46268656716416]], "isOverall": false, "label": "Sell product", "isController": false}, {"data": [[1.695969E12, 229.55084745762707], [1.69596906E12, 454.68292682926835]], "isOverall": false, "label": "Get product ID", "isController": false}, {"data": [[1.695969E12, 309.3571428571429], [1.69596906E12, 399.47297297297285]], "isOverall": false, "label": "Get product", "isController": false}, {"data": [[1.695969E12, 336.81481481481495], [1.69596906E12, 224.81538461538466]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69596906E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 139.0, "minX": 1.695969E12, "maxY": 15510.0, "series": [{"data": [[1.695969E12, 13560.0], [1.69596906E12, 15510.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.695969E12, 304.0], [1.69596906E12, 139.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.695969E12, 3355.8000000000015], [1.69596906E12, 3445.000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.695969E12, 6961.9999999999545], [1.69596906E12, 12927.800000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.695969E12, 1510.0], [1.69596906E12, 1083.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.695969E12, 4567.799999999999], [1.69596906E12, 4809.499999999994]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69596906E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 898.0, "minX": 1.0, "maxY": 3273.0, "series": [{"data": [[8.0, 898.0], [9.0, 1524.0], [10.0, 1389.0], [11.0, 1373.0], [3.0, 1073.5], [12.0, 1451.0], [13.0, 1577.0], [14.0, 1417.0], [15.0, 1133.0], [4.0, 2899.5], [16.0, 1807.0], [1.0, 3273.0], [17.0, 1354.0], [6.0, 1141.0], [7.0, 1179.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 1674.0], [9.0, 1586.0], [10.0, 1255.0], [11.0, 1362.0], [3.0, 1993.5], [12.0, 1445.0], [13.0, 1339.0], [14.0, 1244.0], [15.0, 2237.0], [4.0, 2775.5], [16.0, 1231.5], [17.0, 963.5], [6.0, 970.0], [7.0, 1289.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 898.0, "minX": 1.0, "maxY": 3272.5, "series": [{"data": [[8.0, 898.0], [9.0, 1523.0], [10.0, 1389.0], [11.0, 1373.0], [3.0, 1073.5], [12.0, 1451.0], [13.0, 1577.0], [14.0, 1417.0], [15.0, 1133.0], [4.0, 2899.0], [16.0, 1806.5], [1.0, 3272.5], [17.0, 1354.0], [6.0, 1141.0], [7.0, 1179.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 1673.0], [9.0, 1586.0], [10.0, 1255.0], [11.0, 1361.0], [3.0, 1993.0], [12.0, 1444.5], [13.0, 1339.0], [14.0, 1244.0], [15.0, 2237.0], [4.0, 2775.0], [16.0, 1231.0], [17.0, 963.5], [6.0, 970.0], [7.0, 1289.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 17.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.466666666666667, "minX": 1.695969E12, "maxY": 8.866666666666667, "series": [{"data": [[1.695969E12, 8.866666666666667], [1.69596906E12, 4.466666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69596906E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0833333333333333, "minX": 1.695969E12, "maxY": 4.066666666666666, "series": [{"data": [[1.695969E12, 4.066666666666666], [1.69596906E12, 2.6]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.695969E12, 2.433333333333333], [1.69596906E12, 1.0833333333333333]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.695969E12, 2.033333333333333], [1.69596906E12, 1.1166666666666667]], "isOverall": false, "label": "400", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69596906E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.695969E12, "maxY": 2.25, "series": [{"data": [[1.695969E12, 0.18333333333333332]], "isOverall": false, "label": "Sell product-success", "isController": false}, {"data": [[1.695969E12, 2.033333333333333], [1.69596906E12, 1.1166666666666667]], "isOverall": false, "label": "Sell product-failure", "isController": false}, {"data": [[1.695969E12, 2.1], [1.69596906E12, 1.2333333333333334]], "isOverall": false, "label": "Get product-success", "isController": false}, {"data": [[1.695969E12, 1.9666666666666666], [1.69596906E12, 1.3666666666666667]], "isOverall": false, "label": "Get product ID-success", "isController": false}, {"data": [[1.695969E12, 2.25], [1.69596906E12, 1.0833333333333333]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69596906E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.695969E12, "maxY": 6.5, "series": [{"data": [[1.695969E12, 6.5], [1.69596906E12, 3.683333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.695969E12, 2.033333333333333], [1.69596906E12, 1.1166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69596906E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

